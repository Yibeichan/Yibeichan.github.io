<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>舞！舞！舞！</title>
  <subtitle>宁要壮烈的闪烁，不要平淡的沉默</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yibeichen.me/"/>
  <updated>2016-11-10T15:10:39.000Z</updated>
  <id>http://yibeichen.me/</id>
  
  <author>
    <name>Yibei Chen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>对“埃阿斯自杀”的文本和图像材料的简要分析</title>
    <link href="http://yibeichen.me/2016/11/09/The-Suicide-of-Ajax/"/>
    <id>http://yibeichen.me/2016/11/09/The-Suicide-of-Ajax/</id>
    <published>2016-11-09T08:35:23.000Z</published>
    <updated>2016-11-10T15:10:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>把那句“Before Gods, we are equally wise and equally foolish.”换成“Before professors, we are all idiots.”丝毫没有违和感。<br>承蒙老师不弃，每周忍受这样一个我，还很照顾，谢谢谢谢。<br>这篇文章的副标题应该是，十天入门希腊文。</p>
<p>另，上午看<em>Myth and Tragedy</em>的时候，想，假如世间的一切都能顺其自然的话，那些oracle的预言就不会成真，古希腊也就不会有那么多悲剧，但是，要那么多皆大欢喜干什么呢？</p>
<p>“总在这注定失败的事业里，觉得自己是英雄。”<br><a id="more"></a></p>
<p>对雅典人来说，埃阿斯是非常重要的英雄人物，祭拜埃阿斯的仪式似乎延续的时间极为久远：鲍桑尼亚斯（Pausanias）说，<code>διαμένουσι δὲ καὶ ἐς τόδε τῷ Αἴαντι παρὰ Ἀθηναίοις τιμαὶ αὐτῷ τε καὶ Εὐρυσάκει, καὶ γὰρ Εὐρυσάκους βωμός ἐστιν ἐν Ἀθήναις.</code>（就是时至今日，雅典人还依然给予埃阿斯极高的荣誉，也很推崇欧律萨克斯，在雅典甚至还设置这欧律萨克斯的龛位：鲍桑尼亚斯, 《希腊志》, Ⅰ. 35. 3）。 除了埃阿斯本身所具有的英雄特征比如骁勇善战之外，可能正是他的自戕所蕴含的悲剧力量，使其伟大得到了证明。</p>
<p>关于埃阿斯（Ajax）自杀，有两个版本。前半部分是相同的：阿喀琉斯战死，埃阿斯背回了他的尸体，认为自己的功绩有目共睹，理所应当得到阿喀琉斯的武器，但最后不敌巧言善辩的奥德修斯，没能分到武器。此处出现了分叉：一个版本是埃阿斯直接愤而自杀；另一个版本是埃阿斯非常气愤想要杀奥德修斯和阿伽门农，但雅典娜施法，令其发疯，宰杀了作为战利品的牛羊，埃阿斯又气愤又羞愧，遂自杀。</p>
<p>下文列举了和一些埃阿斯自杀相关的文字和图像材料，并对部分材料进行了重点描述，并由此探讨文本和图像之间的关系。其中文本分析以索福克勒斯（Sophocles）的悲剧《埃阿斯》为主，图像分析以科林斯杯、埃塞克基亚斯（Exekias）的黑绘双耳罐和阿提卡红绘杯三件作品为主。</p>
<h1 id="文本分析"><a href="#文本分析" class="headerlink" title="文本分析"></a>文本分析</h1><h2 id="关于埃阿斯自杀的几个失传文本"><a href="#关于埃阿斯自杀的几个失传文本" class="headerlink" title="关于埃阿斯自杀的几个失传文本"></a>关于埃阿斯自杀的几个失传文本</h2><h3 id="《奥德赛》版本"><a href="#《奥德赛》版本" class="headerlink" title="《奥德赛》版本"></a>《奥德赛》版本</h3><p>《奥德赛》（Odyssey）并不能算作失传文本，但考虑到其间接涉及到“埃阿斯自杀”，所以也列在这里。卷十一，行543，奥德修斯在地府碰到了埃阿斯的魂灵：<br><figure class="highlight erlang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">οἴη δ᾽ Αἴαντος ψυχὴ Τελαμωνιάδαο</div><div class="line">νόσφιν ἀφεστήκει, κεχολωμένη εἵνεκα νίκης,</div><div class="line">τήν μιν ἐγὼ νίκησα δικαζόμενος παρὰ νηυσὶ</div><div class="line">τεύχεσιν ἀμφ᾽ Ἀχιλῆος: ἔθηκε δὲ πότνια μήτηρ.</div><div class="line">παῖδες δὲ Τρώων δίκασαν καὶ Παλλὰς Ἀθήνη.</div></pre></td></tr></table></figure></p>
<p>暗示了埃阿斯愤而自杀的结局，没有更多更直接的描写。</p>
<h3 id="《埃提奥比斯》版本"><a href="#《埃提奥比斯》版本" class="headerlink" title="《埃提奥比斯》版本"></a>《埃提奥比斯》版本</h3><p>荷马以后，出现了两个十分重要的与埃阿斯有关的传说版本。公元前766年前后出现的系列组诗《埃提奥比斯》（Aithiopis），公元前700年前后出现的《小伊利亚特》（Ilias Mikra）。这两部作品均已失传，只有通过其他文献中提及的只言片语才能得窥部分内容。</p>
<p>一般认为，《埃提奥比斯》的作者是米利都的阿尔克提努斯（Arctînus），他可能是荷马的学生或徒弟，生活在公元前775年到公元前741年之间。这部作品中关于埃阿斯之死，有两个较为确定的细节：一、分兵器之后，Arctînus提到一位专治疑难杂症的医生Podaleirius，医生看到埃阿斯在争夺兵器时眼镜里闪烁着强悍的凶光，由此诊断后者的精神状态已陷入极度愤怒，并成为后来发生的事情的先兆：“<code>ὅς ῥα καὶ Αἴαντος πρῶτος μάθε χωομένοιο ὄμματά τ᾽ ἀστράπτοντα βαρυνόμενόν τε νόημα</code>”；二、Arctînus认为埃阿斯的自杀大约是在黎明时分——分兵器之后的那个早晨。品达也对这个时间点表示了赞同（<code>Scholiast on Pindar, Isth. iii. 53: The author of the &quot;Aethiopis&quot; says that Aias killed himself about dawn.</code>）。但这部作品并没有详细说明自杀的过程，也没有线索证明它提到了埃阿斯因雅典娜施法而发疯屠杀牛羊，他自杀的动机，在这个版本中，被简单地归结为愤怒。（<code>Sir Richard C. Jebb, Commentary on Sophocles: Ajax</code>）</p>
<h3 id="《小伊利亚特》版本"><a href="#《小伊利亚特》版本" class="headerlink" title="《小伊利亚特》版本"></a>《小伊利亚特》版本</h3><p>《小伊利亚特》一般被认为（虽然并非公认）有一个叫做庇拉（Pyrrha）的莱斯克斯人所作，也有人认为这是一群诗人共同创作的，其中包括荷马本人。<br>从相传的版本中，可以找到索福克勒斯《埃阿斯》的两条故事线索：其一，埃阿斯在那天晚上陷入了疯狂，于是便对作为战利品的牛羊牲畜大开杀戒；其二，当埃阿斯自杀身亡后，他的尸体依然被阿开亚人羞辱。根据已有研究，这两条线索都是《小伊利亚特》所独有的。可以理解为，《小伊利亚特》奠定了埃阿斯因羞愧（disgrace）而自杀这个版本的基础。</p>
<h3 id="埃斯库罗斯的埃阿斯三联剧"><a href="#埃斯库罗斯的埃阿斯三联剧" class="headerlink" title="埃斯库罗斯的埃阿斯三联剧"></a>埃斯库罗斯的埃阿斯三联剧</h3><p>埃斯库罗斯（Aeschylus）以埃阿斯为核心所写的一组三联剧也被看作是埃阿斯传说来源的一个版本，史称埃阿斯三联剧（Ajax-trilogy）（没有具体的成书时间，但肯定比索福克勒斯的《埃阿斯》早，因为埃斯库罗斯逝世于公元前455年左右），分别是：《兵器颁赏》（<em>Ὅπλων κρίσις</em>）、《色雷斯女人》（<em>Θρῇσσαι</em>）、《萨拉弥斯女人》（<em>Σαλαμίνιαι</em>），这些作品也都已经失传。《兵器颁赏》（The Award of the Arms）主要讲述了阿喀琉斯死后，埃阿斯和奥德赛对兵器的争夺。而在《色雷斯女人》（The Phrygian Women）中，埃阿斯的自杀是由一位信使来讲述的。埃斯库罗斯采用了一个已有的传说：埃阿斯和赫拉克勒斯一样，除了曾经以狮皮包裹时没有覆盖的地方外，也是刀枪不入。这个传说没有出现在《伊利亚特》中，但是在柏拉图时代很流行。这位信使讲到，当埃阿斯第一次试图自杀的时候，剑弯了，但是很快一位女神出现了，并告诉他应该把剑刺向哪个地方。至于第三部《萨拉弥斯女人》（The Salaminian Women）主要讲述的是埃阿斯死后的故事，不讨论。</p>
<h2 id="索福克勒斯的《埃阿斯》分析"><a href="#索福克勒斯的《埃阿斯》分析" class="headerlink" title="索福克勒斯的《埃阿斯》分析"></a>索福克勒斯的《埃阿斯》分析</h2><p>索福克勒斯的《埃阿斯》， 大约写于公元前440年左右，是第一次对埃阿斯自杀的故事进行完整的描绘（<code>Gantz, T. Early Greek myth. Vol 2: Sophokles’ preserved Aias gives us our first full account of the story</code>）。<br>主要关注的部分是埃阿斯实施自杀的动作，包括他的自白和自杀场所等相关信息。</p>
<p>行815-行822：<br><figure class="highlight erlang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ὁ μὲν σφαγεὺς ἕστηκεν ᾗ τομώτατος</div><div class="line">γένοιτ᾽ ἄν, εἴ τῳ καὶ λογίζεσθαι σχολή:</div><div class="line">δῶρον μὲν ἀνδρὸς Ἕκτορος ξένων ἐμοὶ</div><div class="line">μάλιστα μισηθέντος ἐχθίστου θ᾽ ὁρᾶν:</div><div class="line">πέπηγε δ᾽ ἐν γῇ πολεμίᾳ τῇ Τρῳάδι,</div><div class="line">σιδηροβρῶτι θηγάνῃ νεηκονής:</div><div class="line">ἔπηξα δ᾽ αὐτὸν εὖ περιστείλας ἐγώ,</div><div class="line">εὐνούστατον τῷδ᾽ ἀνδρὶ διὰ τάχους θανεῖν.</div></pre></td></tr></table></figure></p>
<p>从这一段开始了埃阿斯死前的自白：这杀人的家伙已经插好……按照古典语文学家（Liddell&amp;Scott, Jones）的说法，<code>εὖ περιστείλας</code>不仅表示把长剑倒插在地上，而且还在剑的四周培上海滩上的沙土，能够使其稳稳地立在那里。这一段也告知了埃阿斯自杀的地点：海滩。自白也同时表明，场景中没有其他人，只有他独自一人赴死。</p>
<p>行823-行834：<br><figure class="highlight erlang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">οὕτω μὲν εὐσκευοῦμεν: ἐκ δὲ τῶνδέ μοι</div><div class="line">σὺ πρῶτος, ὦ Ζεῦ, καὶ γὰρ εἰκός, ἄρκεσον.</div><div class="line">αἰτήσομαι δέ σ᾽ οὐ μακρὸν γέρας λαχεῖν.</div><div class="line">πέμψον τιν᾽ ἡμῖν ἄγγελον, κακὴν φάτιν</div><div class="line">Τεύκρῳ φέροντα, πρῶτος ὥς με βαστάσῃ</div><div class="line">πεπτῶτα τῷδε περὶ νεορράντῳ ξίφει,</div><div class="line">καὶ μὴ πρὸς ἐχθρῶν του κατοπτευθεὶς πάρος</div><div class="line">ῥιφθῶ κυσὶν πρόβλητος οἰωνοῖς θ᾽ ἕλωρ.</div><div class="line">τοσαῦτά σ᾽, ὦ Ζεῦ, προστρέπω, καλῶ δ᾽ ἅμα</div><div class="line">πομπαῖον Ἑρμῆν χθόνιον εὖ με κοιμίσαι,</div><div class="line">ξὺν ἀσφαδάστῳ καὶ ταχεῖ πηδήματι</div><div class="line">πλευρὰν διαρρήξαντα τῷδε φασγάνῳ.</div></pre></td></tr></table></figure></p>
<p>这几句是埃阿斯向宙斯的祈求，也是全剧描写埃阿斯死的情形最具体的一处：“一旦我倒在那把新鲜血液浸染的剑上（<code>πεπτῶτα τῷδε περὶ νεορράντῳ ξίφει</code> 行828）”，“同时，我还要请求赫尔墨斯，让他在冥界为我的灵魂引路，我要请求他，当那把剑从我的侧肋直插进去时，能让我在一跃之间倒下，不要有任何的挣扎（<code>καλῶ δ᾽ ἅμα πομπαῖον Ἑρμῆν χθόνιον εὖ με κοιμίσαι, ξὺν ἀσφαδάστῳ καὶ ταχεῖ πηδήματι πλευρὰν διαρρήξαντα τῷδε φασγάνῳ</code> 行831-行834）”<br>这里说到了“从我的侧肋直插进去”（<code>πλευρὰν διαρρήξαντα</code>），和前面埃斯库罗斯三联剧中的第二部Θρῇσσαι中提到的，埃阿斯的命门，似乎相互照应。<br>另外，剧本中是埃阿斯的妻子特克莫萨（Tecmessa）最先发现他的尸体。</p>
<p>行898-行899：<br><figure class="highlight erlang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Αἴας ὅδ᾽ ἡμῖν ἀρτίως νεοσφαγὴς</div><div class="line">κεῖται, κρυφαίῳ φασγάνῳ περιπτυχής.</div></pre></td></tr></table></figure></p>
<p>以第三人的视角展现了埃阿斯死后的样子，“一把埋在地里的剑刺穿了他的胸膛”（行899）。</p>
<h1 id="图像分析"><a href="#图像分析" class="headerlink" title="图像分析"></a>图像分析</h1><h2 id="科林斯杯"><a href="#科林斯杯" class="headerlink" title="科林斯杯"></a>科林斯杯</h2><p>对于古希腊的艺术家来说，埃阿斯自杀的故事，尤其是他“把剑刺入胸膛”这个可怕的动作是重要的创作主题之一 。公元前六世纪的科林斯的艺术品，这个主题十分盛行。<br>其中有代表的作品是，公元前580年左右产于科林斯的一个饮水杯，描绘了古希腊英雄们发现埃阿斯尸体的场景：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-11-09-FullSizeRender.jpg" alt=""><br>这幅图大概描述了，埃阿斯的尸体被同伴发现，他们聚在一起可能一边悲叹他的命运（ponder his fate），一边考虑他的葬礼。根据铭文（在作品上添加文字注解，是公元前七世纪古希腊艺术家的风格），我们可以辨别出这七个人的身份，人物位置的排列很有意思。紧邻着尸体的是两位白发长者，希腊军营的顾问内斯特（Nestor）和福尼克斯（Phoinix）。他俩见多识广，经验丰富，在这样一个惊慌（unnerving）的时候，其他人需要向他们寻求安慰和建议。分别站在这两个人身后的，右边是阿伽门农（Agamemnon），总指挥官；左边的是奥德修斯（Odysseus）。在这里，奥德修斯并不是作为一个反面角色出现，仅仅是希腊英雄们的一员。画面中的其他三个人物，不同于穿着长袍的长者们，他们三人的裸体显示了其较为低级的身份，从左至右分别是：狄奥墨得斯（Diomedes）、透克洛斯（Teucer）和小埃阿斯（the Lesser Ajax）。</p>
<h2 id="埃塞克基亚斯的黑绘双耳罐"><a href="#埃塞克基亚斯的黑绘双耳罐" class="headerlink" title="埃塞克基亚斯的黑绘双耳罐"></a>埃塞克基亚斯的黑绘双耳罐</h2><p>而埃克塞基亚斯，古希腊最优秀的黑灰陶瓶画师，创作的《埃阿斯之死》（约公元前530年）另辟蹊径，没有随大流展现英雄的尸体，而是聚焦于埃阿斯为自杀做准备的瞬间：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-11-09-exekiasajax.jpg" alt=""><br><img src="http://oapfne1kf.bkt.clouddn.com/2016-11-09-Preparing_for_Suicide_02.jpg" alt=""><br>在画家笔下，荒无人烟的沙滩上，埃阿斯茕茕孑立。著名的七层盾放在一边，头盔立在盾牌上，两支长矛斜靠着，给人一种“幽灵正在注视这一切“的感觉（这或许也代表了曾经的埃阿斯，他的盾牌头盔和长矛，代表曾是伟大战斗英雄的前半世的他）。他左边的那棵棕榈树，一方面暗示了这里没有其他人，另一方面，向右倾斜似乎也代表了对埃阿斯的同情。<br>而埃阿斯自己，正把剑插在地上，仔细拍打着宝剑周围的泥土，试图让它更牢靠一点，好俯身上去。这样有条不紊的举动，完全不像是一个发疯了的人。同时，画家对眉毛和脸部线条的刻画，展现了埃阿斯内心的困惑不安，似乎陷入了对无能为力的命运的思索。</p>
<p>整个场景没有暴力动作，近乎静态，但如果了解这个故事，就能感受到作者对这个瞬间不同寻常的选择所带来的巨大的情感冲击力，仿佛是暴风雨来临前的平静，外表波澜不惊其实内心已是黑云压城。英雄受到了羞辱，他不想再蒙羞了。笨拙地倒下，微不足道的伤口——这些意外事件只会增加他的耻辱。<br>画家经过深思熟虑创造了这个形象，深刻体现了英雄的性格和境遇，动人心魄。这幅作品展现了艺术家对创作对象的一种真正的怜悯与同情，在早期的西方艺术中十分少见。</p>
<h2 id="阿提卡红绘杯"><a href="#阿提卡红绘杯" class="headerlink" title="阿提卡红绘杯"></a>阿提卡红绘杯</h2><p>这件作品创作于公元前490年到公元前480年，描绘的是特克莫萨发现埃阿斯的尸体，并为他盖上毯子的场景：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-11-09-121825.jpg" alt=""><br><img src="http://oapfne1kf.bkt.clouddn.com/2016-11-09-TekmessaBrygos.jpg" alt=""><br>这幅画最大的特色是，第一次展现了埃阿斯面朝上背朝下倒在剑上。我们得以看到埃阿斯强壮的胸膛，浓密的胡须，凌乱的头发，也许是呼应了他此前的发疯状态。依然是强调埃阿斯庞大的身躯，一个英雄的悲壮地倒下，双脚都越出了画面，而特克莫萨，一个传统妇女的形象，拿着黑边和四角带小流苏的毯子，正要给埃阿斯盖上，却有一种家庭式的美好感，倒是形成了强烈对比。</p>
<h1 id="文本与图像之间的关系探讨"><a href="#文本与图像之间的关系探讨" class="headerlink" title="文本与图像之间的关系探讨"></a>文本与图像之间的关系探讨</h1><p>三件艺术作品的创作年代都早于索福克勒斯的剧本，晚于荷马史诗以及《埃提奥比斯》和《小伊利亚特》，且除第三件作品外，前两件早于埃斯库罗斯的埃阿斯三联剧（埃斯库罗斯出生于公元前525年左右，晚于前两件作品的创作时间）。</p>
<p>第一件作品中，对七个人物的精心选择以及位置的安排，并且标注了名字（确定的人物名称很可能来源于成文的文学作品），大约是受到了《埃提奥比斯》的影响，因为只有《埃提奥比斯》是最早写埃阿斯之死的，而《小伊利亚特》里，埃阿斯的尸体被阿开亚人羞辱，所以站在尸体旁的不可能是这七个人。</p>
<p>第二件作品，首先，它的作者是大名鼎鼎的埃塞克基亚斯，其次，它的场景独特，在同时代同主题作品中独树一帜，而且它在索福克勒斯的剧本出现之前就对人物的内心作了一番细腻深入地刻画，足以说明它并不是文学作品的附庸，而是画家创造力的表现。相反，埃塞克基亚斯实在太出色以至于后来者无法忽视，索福克勒斯借鉴了他的作品也并非不可能。</p>
<p>第三件作品，也没有随波逐流，而是展现了埃阿斯背部被刺穿以及特克莫萨发现他的尸体的场景。在之前的文本中似乎并没有明确说明埃阿斯到底是背朝下还是面朝下被刺死，也没有提到是特克莫萨最先发现了埃阿斯。很有可能，索福克勒斯的剧本中的这一情节的灵感是来自于这幅画。</p>
<p>总之，文本和图像作品互相影响，口耳相传或者成文的文学作品给予艺术家们以灵感，而在这一时期的创作者中，一些伟大的艺术家（如埃塞克基亚斯），扭转了单一的线性影响模式，充分发挥自己的聪明才智，自主创新，超越了同时代的人和艺术环境，又给后代艺术家、诗人作家（如索福克勒斯）以启发，如此交替往复，创造了璀璨的艺术世界。</p>
<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>Ackermann, C. &amp; Gisler, J. (1981). Lexicon iconographicum mythologiae classicae (LIMC). Zurich: Artemis.</p>
<p>Aeschylus. (2016). En.wikipedia.org. Retrieved 8 November 2016</p>
<p>AESCHYLUS, FRAGMENTS 57-154 - Theoi Classical Texts Library. (2016). Theoi.com. Retrieved 8 November 2016</p>
<p>Boardman, J. (2001). The history of Greek vases. New York, N.Y.: Thames &amp; Hudson.</p>
<p>Carpenter, T. (1991). Art and myth in ancient Greece. London: Thames and Hudson.</p>
<p>Gantz, T. (1996). Early Greek myth. Baltimore: Johns Hopkins University Press.</p>
<p>Hesiod., Evelyn-White, H., &amp; Homer.,. (1914). Hesiod, the Homeric hymns, and Homerica. London: W. Heinemann.</p>
<p>Homer, Odyssey. (2016). Perseus.tufts.edu. Retrieved 8 November 2016</p>
<p>PAUSANIAS, Description of Greece | Loeb Classical Library. (2016). Loeb Classical Library. Retrieved 9 November 2016</p>
<p>PAUSANIAS, Description of Greece | Loeb Classical Library. (2016). Loeb Classical Library. Retrieved 9 November 2016</p>
<p>Shapiro, H. (1994). Myth into art. London: Routledge.<br>Sir Richard C. Jebb, Commentary on Sophocles: Ajax,section 3. (2016). Perseus.tufts.edu. Retrieved 8 November 2016</p>
<p>Sophocles, Ajax. (2016). Perseus.tufts.edu. Retrieved 8 November 2016</p>
<p>Sophocles., &amp; Jebb, R. (1967). The Ajax. Amsterdam: Hakkert.</p>
<p>伍德福德, 苏. (2006). 古代艺术品中的神话形象. 济南市: 山东画报出版社.</p>
<p>沈默,. (2010). 高贵的言辞:索福克勒斯《埃阿斯》疏证. 上海: 华东师范大学出版社.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;把那句“Before Gods, we are equally wise and equally foolish.”换成“Before professors, we are all idiots.”丝毫没有违和感。&lt;br&gt;承蒙老师不弃，每周忍受这样一个我，还很照顾，谢谢谢谢。&lt;br&gt;这篇文章的副标题应该是，十天入门希腊文。&lt;/p&gt;
&lt;p&gt;另，上午看&lt;em&gt;Myth and Tragedy&lt;/em&gt;的时候，想，假如世间的一切都能顺其自然的话，那些oracle的预言就不会成真，古希腊也就不会有那么多悲剧，但是，要那么多皆大欢喜干什么呢？&lt;/p&gt;
&lt;p&gt;“总在这注定失败的事业里，觉得自己是英雄。”&lt;br&gt;
    
    </summary>
    
    
      <category term="Greek" scheme="http://yibeichen.me/tags/Greek/"/>
    
      <category term="Myth" scheme="http://yibeichen.me/tags/Myth/"/>
    
  </entry>
  
  <entry>
    <title>HTML, CSS, and Javascript for Web Developers 课程笔记 (未完)</title>
    <link href="http://yibeichen.me/2016/08/13/HTML-CSS-Javascript-for-Web-Developers/"/>
    <id>http://yibeichen.me/2016/08/13/HTML-CSS-Javascript-for-Web-Developers/</id>
    <published>2016-08-13T08:00:23.000Z</published>
    <updated>2016-08-30T06:45:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>0813：为什么网速这么慢，今天写不完作业下周我就不记得怎么写了！<br>0809：算了下，以每天一小节的速度，学完整个课程还要14天，勉勉强强赶在上学前……<br>0807：到目前为止，课上讲的html还在我的知识储备内。(学代码最好的办法就是去写代码呀，忘了不要紧，被逼着写一回就全想起来了。)<br>0805：有一种当年自学html&amp;css靠的都是野路子，这才是正规军的感觉。<br>0804：<br>老师长得太可爱啦，自带腮红！<br>你好呀，html&amp;css，又见面了耶！(JavaScript你也好，然而我们并不熟。)<br>所有这种编程课，我最喜欢的都是第一节——安装各种工具。<br><a id="more"></a><br>Coursera地址: <a href="https://www.coursera.org/learn/html-css-javascript-for-web-developers" target="_blank" rel="external">面向Web开发者的HTML、CSS与Javascript课程</a><br>辅助资料请上<a href="https://github.com/jhu-ep-coursera/fullstack-course4" target="_blank" rel="external">github</a></p>
<h1 id="HTML5入门"><a href="#HTML5入门" class="headerlink" title="HTML5入门"></a>HTML5入门</h1><h2 id="安装开发环境"><a href="#安装开发环境" class="headerlink" title="安装开发环境"></a>安装开发环境</h2><p>必备工具集：</p>
<ul>
<li>Github账号</li>
<li>Chrome+CDT</li>
<li>Sublime Text3 (想抛弃Atom重回ST怀抱了)</li>
<li>Git</li>
<li>Browser Sync</li>
</ul>
<p>噼里啪啦，跟着视频敲了一堆看不懂的命令符，新建了一个github仓库，但是，有点不对。之前我搭这个博客已经开通了github page，并且绑定了我的域名，但是课程案例又新建了另一个page，所以，这个新的page就自动变成我的网站二级页，还继承了favicon。呐，就是它了：<a href="http://yibeichen.me/coursera-test/">http://yibeichen.me/coursera-test/</a></p>
<p>内心默默涌起一种“我上个月怎么没学这门课”的后悔！以及，“这下学会了新建二级页，又能自己写index.html了”，开心！</p>
<p>这五个工具里，唯一没用过的就是Browser Sync，但感觉跟<code>$ hexo s</code>很相似，不过要比后者方便，真正即时同步。</p>
<h3 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h3><p>《Pro Git》<a href="https://git-scm.com/book/en/v2" target="_blank" rel="external">英文版</a> <a href="http://iissnan.com/progit/" target="_blank" rel="external">中文版</a> 看完前三章</p>
<h2 id="HTML基础"><a href="#HTML基础" class="headerlink" title="HTML基础"></a>HTML基础</h2><p>HTML→HyperText Markup Language 超链接文本标记语言<br>在网页开发中，HTML、CSS、JavaScript分别扮演了什么角色呢？<br>HTML 搭建网页的结构和框架 (structure)<br>CSS 决定了网页的样式 (style)<br>JavaScript 关乎网页的实现形式 (behavior)</p>
<h3 id="相关历史"><a href="#相关历史" class="headerlink" title="相关历史"></a>相关历史</h3><p>两个组织控制着HTML，一个是W3C(官方)，一个是WHATWG(民间)。<br>前一个发布了HTML5标准，后一个致力于HTML的evolving。</p>
<h3 id="几个资源"><a href="#几个资源" class="headerlink" title="几个资源"></a>几个资源</h3><ol>
<li><a href="https://www.w3.org/" target="_blank" rel="external">W3C</a> (最官方的文档)</li>
<li><a href="http://caniuse.com/" target="_blank" rel="external">Can I Use</a> (feature investigation查看主流浏览器对新html语言的支持)</li>
<li><a href="http://validator.w3.org/" target="_blank" rel="external">Markup Validation Serivice</a> (查看网页html规范)<br>测试了一下yibeichen.me，结果竟然是：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-05_10:53:46.jpg" alt="2016-08-05_10:53:46.jpg"><br>错误和警告加起来一共有16个，有得改了。不过暂时还不懂这些错在哪了。</li>
<li><a href="http://www.w3schools.com/" target="_blank" rel="external">W3Schools</a> (Browser stats resource)</li>
<li><a href="https://www.google.com" target="_blank" rel="external">Google</a></li>
</ol>
<h3 id="HTML标签"><a href="#HTML标签" class="headerlink" title="HTML标签"></a>HTML标签</h3><p>大多数标签都是有开有关的，比如<code>&lt;a&gt;&lt;/a&gt;</code>、<code>&lt;p&gt;&lt;/p&gt;</code>等等，但是有一些标签只用开不用关，比如<code>&lt;br&gt;</code>、<code>&lt;hr&gt;</code>。</p>
<h4 id="标签属性"><a href="#标签属性" class="headerlink" title="标签属性"></a>标签属性</h4><p>比如<code>&lt;p id=&quot;myId&quot;&gt;&lt;/p&gt;</code>,这里的id就是一个属性名，myId就是一个属性值。<br>注意，<code>id</code>的值是唯一的，不能定义两个相同的id值。<br>另外，双引号和单引号都是ok的。</p>
<h3 id="基本HTML文本结构"><a href="#基本HTML文本结构" class="headerlink" title="基本HTML文本结构"></a>基本HTML文本结构</h3><ol>
<li>必须以<code>&lt;!doctyp html&gt;</code>开头</li>
<li>meta标签放在head标签里，是一个开放标签，不需要关闭。比如<code>&lt;meta charset=&quot;utf-8&quot;&gt;</code></li>
<li>head标签里必须包含一个title标签</li>
<li>head标签结束后就到了body标签</li>
<li>浏览器读取网页是从上到下的顺序，所以，重要的定义要放在前面(以后写css这点很重要)</li>
</ol>
<h3 id="HTML内容模式"><a href="#HTML内容模式" class="headerlink" title="HTML内容模式"></a>HTML内容模式</h3><p><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-05_11:27:57.jpg" alt="2016-08-05_11:27:57.jpg"><br>比如，div 就是一个block-level元素，而 span 则是一个inline元素。<br>block-level元素自己要独占一行，inline则不会。<br>span可以嵌套在div里，但是div不能嵌套在span里，这就是两类元素的特性。<br>这两大类都不是HTML5里正式的内容，但是现在仍然在使用。</p>
<h2 id="HTML5基本标签"><a href="#HTML5基本标签" class="headerlink" title="HTML5基本标签"></a>HTML5基本标签</h2><h3 id="semantic-html-element"><a href="#semantic-html-element" class="headerlink" title="semantic html element"></a>semantic html element</h3><p>语义的，意味着这些标签可以帮助理解html的内容。<br>来，介绍几个：</p>
<ol>
<li>header 标签，主要用来放公司logo、标语、导航等</li>
<li>nav 标签，存放关于网站导航的内容</li>
<li>h1 标签，在h1到h6系列中，它最重要</li>
<li>section 标签</li>
<li>article 标签</li>
<li>aside 标签 (some information that relates to the main topic, i.e.,related posts)</li>
<li>footer 标签</li>
</ol>
<p>上面说的这些都是block-level元素。</p>
<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>废话不说了，看代码吧，下面是无序列表，注意哦，有列表嵌套：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>Milk<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>Donuts<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>Cookies</div><div class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span>Chocolate<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span>Sugar<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span>Peanut Butter<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>Pepto Bismol<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>来看一看有序列表，唯一的区别是<code>&lt;ul&gt;</code>变成了<code>&lt;ol&gt;</code>：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>Open box<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>Take out cookie<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>Make a Double Oreo</div><div class="line">        <span class="tag">&lt;<span class="name">ol</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span>Peel off the top part<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span>Place another cookie in the middle<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span>Put back the top part<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>Enjoy!<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="HTML-Character-Entity-References"><a href="#HTML-Character-Entity-References" class="headerlink" title="HTML Character Entity References"></a>HTML Character Entity References</h3><p>请看下图，其实不知道上面这个小标题是什么意思……惭愧<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-07_16:27:41.jpg" alt="2016-08-07_16:27:41.jpg"><br>意思就是，如果你的html文本里有<code>&lt;</code>、<code>&gt;</code>这类符号呢，需要转化一下，不然浏览器可能会解析错误，把文本解析成代码。<br>类似的reference还有很多，比如：<br>如果不想你的英文单词折行，可以在单词间加上<code>&amp;nbsp;</code><br><code>&amp;nbsp;</code>这个经常会被误用，写上好几个增加空格(我就这么干过)。如果想让两个单词之间多出空隙，最好的办法是选中其中一个单词，加上<code>margin-left(right)</code></p>
<p>最后呢，当然是要献上<a href="https://brajeshwar.github.io/entities/" target="_blank" rel="external">cheatsheet</a>啦，我自己找的。</p>
<h3 id="加超链"><a href="#加超链" class="headerlink" title="加超链"></a>加超链</h3><ol>
<li>站内链接</li>
<li>站外链接</li>
<li>锚点标签，<code>&lt;a herf=&quot;#idname&quot;&gt;#idname&lt;/a&gt;</code></li>
</ol>
<p><code>&lt;a&gt;</code>既是一个inline element也是一个block-level element，所以，a标签可以嵌套div标签</p>
<h3 id="图片展示"><a href="#图片展示" class="headerlink" title="图片展示"></a>图片展示</h3><p><code>&lt;img&gt;</code>也是一个inline element，记得定义图片的长宽。</p>
<h1 id="CSS入门"><a href="#CSS入门" class="headerlink" title="CSS入门"></a>CSS入门</h1><h2 id="Cascading-Style-Sheets-Basics-CSS基础"><a href="#Cascading-Style-Sheets-Basics-CSS基础" class="headerlink" title="Cascading Style Sheets Basics (CSS基础)"></a>Cascading Style Sheets Basics (CSS基础)</h2><p>见过<a href="http://www.csszengarden.com/" target="_blank" rel="external">这个网站</a>，刷新了我对css的认识，一直以为那些好看的网站都是靠JavaScript(很明显都是静态的啊，怎么需要劳烦js)。<br>在上面那个网站，可以看到相同的html，不同的css效果，真的是千差万别！<br>存放css的文件叫做stylesheet</p>
<h3 id="Element-Class-and-ID-Selectors"><a href="#Element-Class-and-ID-Selectors" class="headerlink" title="Element, Class, and ID Selectors"></a>Element, Class, and ID Selectors</h3><p>很简单啊，element selector就是<code>p</code>、<code>h1</code>……这种，class selector是<code>.blue(class=&quot;blue&quot;)</code>，id selector是<code>#name(id=name)</code><br>如果不同的selector共用同一个样式，它俩用逗号隔开就好了。<br>这三种selector的有效性也是递减的，就是，如果冲突了，后面的会继承前面的属性。</p>
<h3 id="Combining-Selectors"><a href="#Combining-Selectors" class="headerlink" title="Combining Selectors"></a>Combining Selectors</h3><ol>
<li><p>element with class selector</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span><span class="selector-class">.highlight</span> &#123;  </div><div class="line">  <span class="attribute">font-style</span>: italic;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>child selector</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* any article element which is a direct child of a section element,i.e., any article element whose immediate parent is a section element. */</span></div><div class="line"><span class="selector-tag">section</span> &gt; <span class="selector-tag">article</span> &#123;</div><div class="line">  <span class="attribute">color</span>: green;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">24px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>descendant selector</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* all li elements that are inside a section element. */</span></div><div class="line"><span class="selector-tag">section</span> <span class="selector-tag">li</span> &#123;</div><div class="line">  <span class="attribute">color</span>: green;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>2和3的区别在于，2中说的是直接的子集，3中则不限“直接”，可以是嵌套好几层的。</p>
<h3 id="Pseudo-Class-Selectors"><a href="#Pseudo-Class-Selectors" class="headerlink" title="Pseudo-Class Selectors"></a>Pseudo-Class Selectors</h3><p>有很多，说五个</p>
<ul>
<li>:link</li>
<li>:visited</li>
<li>:hover</li>
<li>:active</li>
<li>:nth-child(第一次用它，好神奇！)</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>, <span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;</div><div class="line">  <span class="attribute">text-decoration</span>: none;</div><div class="line">  <span class="attribute">background-color</span>: green;</div><div class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid blue;</div><div class="line">  <span class="attribute">color</span>: black;</div><div class="line">  <span class="attribute">display</span>: block;</div><div class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">  <span class="attribute">text-align</span>: center;</div><div class="line">  <span class="attribute">margin-bottom</span>: <span class="number">1px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>, <span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;</div><div class="line">  <span class="attribute">background-color</span>: red;</div><div class="line">  <span class="attribute">color</span>: purple;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">header</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(3)</span> &#123;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">24px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">section</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(odd)</span> &#123; <span class="comment">/* 应用于奇数行 */</span></div><div class="line">  <span class="attribute">background-color</span>: gray;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">section</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(4)</span><span class="selector-pseudo">:hover</span> &#123; <span class="comment">/* 应用于第四行*/</span></div><div class="line">  <span class="attribute">background-color</span>: green;</div><div class="line">  <span class="attribute">cursor</span>: pointer;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="CSS-Rules-Conflict-Resolution-and-Text-Styling"><a href="#CSS-Rules-Conflict-Resolution-and-Text-Styling" class="headerlink" title="CSS Rules Conflict Resolution and Text Styling"></a>CSS Rules Conflict Resolution and Text Styling</h2><p>css可以写在单独的文件夹里，也可以写在head里，还可以写在body中的selector后面。<br>第一种方法最推荐，第三种方法适合测试用。</p>
<h3 id="Conflict-Resolution"><a href="#Conflict-Resolution" class="headerlink" title="Conflict Resolution"></a>Conflict Resolution</h3><p>定义了很多css，冲突了怎么办呢？这就涉及到cascading algorithm<br>讲几个概念：</p>
<ul>
<li>origin precedence<br><strong>Last Declarationn Wins</strong></li>
<li>merge<br><strong>Declarationn Merge</strong> 指的是不同的属性比如字号和颜色合并</li>
<li>inheritance<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-09_17:15:11.jpg" alt="2016-08-09_17:15:11.jpg"></li>
<li>specificity<br><strong>Most Specific Selector Combination Wins</strong><br>看看下面这三张图就知道怎么打分了：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-09_17:22:29.jpg" alt="2016-08-09_17:22:29.jpg"><br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-09_17:23:05.jpg" alt="2016-08-09_17:23:05.jpg"><br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-09_17:23:24.jpg" alt="2016-08-09_17:23:24.jpg"></li>
</ul>
<p>id属性是高于class属性的。</p>
<h3 id="Styling-Text"><a href="#Styling-Text" class="headerlink" title="Styling Text"></a>Styling Text</h3><p>学到一个新样式<code>text-transform: capitalize;</code>这个样式还有很多其他属性。<br>另，字号的相对大小比如：<br><code>&lt;div style=&quot;font-size: 2em;&quot;&gt;&lt;/div&gt;</code><br>表示这个div里的字是当前设定的字体的两倍。</p>
<h2 id="The-Box-Model-and-Layout"><a href="#The-Box-Model-and-Layout" class="headerlink" title="The Box Model and Layout"></a>The Box Model and Layout</h2><h3 id="The-Box-Model"><a href="#The-Box-Model" class="headerlink" title="The Box Model"></a>The Box Model</h3><p>话说用CDT这么久，第一次知道这东西原来叫box……<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-10_21:49:13.jpg" alt="2016-08-10_21:49:13.jpg"><br>以前设定box宽度的时候，由于有padding、margin、border的存在，整个box要比设定的宽，到了CSS3时代，解决了这个问题，整个box的宽度包括了所有的东西，用一句话写就是：<code>box-sizing: border-box;</code>，但是如果把<code>border-box</code>变成<code>content-box</code>，就会变成以前那种。<br>如果你不想在同一个html里，每写一个box都定义一次<code>border-box</code>的话，把这句直接写在body里，是没用的，不会继承的。<br>于是我们要学一个新的selector：<code>*</code>，放在style的第一行。</p>
<p>当两个box并排摆在一起的时候，它俩之间的margin大小等于各自的margin-left+margin-right，但是当两个box上下摆在一起的时候，它俩之间的margin并不等于margin-top+margin-bottom，而是，等于大的那一个margin。</p>
<p>当我们给一个box限高了，里面的内容多了就会溢出来，那怎么办呢？用<code>overflow: hidden</code>，内容跑出来的部分就隐藏进去，但是这就遮住了，看不见了呀。用<code>overflow: auto</code>，内容不会跑出来，但是会多出一个滑动的按钮，可以滑动查看。这个css默认的值是<code>overflow: visible</code>，其实是没有任何变化的，content还是会跑出来。</p>
<h3 id="The-background-Property"><a href="#The-background-Property" class="headerlink" title="The background Property"></a>The background Property</h3><p>我们直接看代码吧。<br><figure class="highlight plain"><figcaption><span>&#123;</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">  width: 500px;</div><div class="line">  height: 500px;</div><div class="line">  background: url(&apos;yaakov.png&apos;) no-repeat top center;</div><div class="line">  background-color: blue;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>注意了，如果把<code>background-color: blue;</code>这句写在<code>background: url(&#39;yaakov.png&#39;) no-repeat top center;</code>的前面，是出现不了颜色的。</p>
<h3 id="Positioning-Elements-by-Floating"><a href="#Positioning-Elements-by-Floating" class="headerlink" title="Positioning Elements by Floating"></a>Positioning Elements by Floating</h3><p>讲得还蛮多，主要是怎么摆的问题，如果你在body里定义了<code>float: left;</code>，后面不想它乱跑了，可以写<code>clear: right</code>，如果不想因为上面的box变长，而下面的box被遮住，写<code>clear: both</code>。<br>还有好多，实战的时候注意下。</p>
<h3 id="Relative-and-Absolute-Element-Positioning"><a href="#Relative-and-Absolute-Element-Positioning" class="headerlink" title="Relative and Absolute Element Positioning"></a>Relative and Absolute Element Positioning</h3><p>这么说吧，如果定义的是<code>position: relative;</code>，那两个elements的位置就是相对的，不管怎么变都是相对存在的。<br>如果定义的是<code>position: absolute;</code>，那两个elements的位置就是绝对的，它俩就会重叠，因为他们彼此不知道对方的存在。<br>假如要设置某个部分为<code>position: absolute;</code>，那它的父类，应该设置为<code>position: relative;</code><br>啊，以前写好多个div摆一起的时候，被这种position折磨死了，这节课听得也不是很明白。<br>这张slide看看就好，反正我是没看懂，等要写的时候再摸索一遍吧<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-11_18:00:33.jpg" alt="2016-08-11_18:00:33.jpg"></p>
<h2 id="响应式设计入门"><a href="#响应式设计入门" class="headerlink" title="响应式设计入门"></a>响应式设计入门</h2><h3 id="Media-Queries"><a href="#Media-Queries" class="headerlink" title="Media Queries"></a>Media Queries</h3><p>其主要作用是让web适应不同的设备环境，比如大屏小屏呀，这是最基本的。<br>写法是这样<code>@media (max-width: 990px) {……}</code> 当它的值为true的时候大括号里的内容就会apply。<br><code>@media</code>可以用逻辑符号链接比如:<code>and</code>,<code>,(or)</code><br>下面这张图的意思是，定义了好几个<code>@media</code>的时候，注意不要让边界重合了。<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-11_18:15:36.jpg" alt="2016-08-11_18:15:36.jpg"><br>在网上找了一位朋友的文章，解释得很详细(因为写的是中文，哈哈。) <a href="http://www.cnblogs.com/mofish/archive/2012/05/23/2515218.html" target="_blank" rel="external">点这里</a><br>另，发现了CDT的一个新功能，点最左边那个长得像手机的图标，有惊喜！</p>
<h3 id="响应式设计"><a href="#响应式设计" class="headerlink" title="响应式设计"></a>响应式设计</h3><p>关于响应式设计，下图这个比喻好贴切！<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-11_21:34:58.jpg" alt="2016-08-11_21:34:58.jpg"><br>然后说到了网格(好像本科的时候麦哥教过960网格？)：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-11_21:36:22.jpg" alt="2016-08-11_21:36:22.jpg"><br>来看一下这段代码：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">@<span class="keyword">media</span> (min-width: <span class="number">1200px</span>) &#123;</div><div class="line">  <span class="selector-class">.col-lg-1</span>, <span class="selector-class">.col-lg-2</span>, <span class="selector-class">.col-lg-3</span>, <span class="selector-class">.col-lg-4</span>, <span class="selector-class">.col-lg-5</span>, <span class="selector-class">.col-lg-6</span>, <span class="selector-class">.col-lg-7</span>, <span class="selector-class">.col-lg-8</span>, <span class="selector-class">.col-lg-9</span>, <span class="selector-class">.col-lg-10</span>, <span class="selector-class">.col-lg-11</span>, <span class="selector-class">.col-lg-12</span> &#123;</div><div class="line">    <span class="attribute">float</span>: left;</div><div class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid green;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-class">.col-lg-1</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">8.33%</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-class">.col-lg-2</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">16.66%</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-class">.col-lg-3</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">25%</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-class">.col-lg-4</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">33.33%</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-class">.col-lg-5</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">41.66%</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-class">.col-lg-6</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-class">.col-lg-7</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">58.33%</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-class">.col-lg-8</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">66.66%</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-class">.col-lg-9</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">74.99%</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-class">.col-lg-10</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">83.33%</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-class">.col-lg-11</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">91.66%</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-class">.col-lg-12</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>解释一下 col指的是column, lg指的是large，上面那段是为large screen设置的，如果是为medium screen的话，lg就改成md。<br>如果你定义了大屏和中屏的话，body里的代码应该长这样：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row"</span>&gt;</div><div class="line">  <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-3 col-md-6"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Item 1<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-lg-3 col-md-6"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Item 2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-lg-3 col-md-6"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Item 3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-lg-3 col-md-6"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Item 4<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-lg-3 col-md-6"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Item 5<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-lg-3 col-md-6"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Item 6<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-lg-3 col-md-6"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Item 7<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-lg-3 col-md-6"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Item 8<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line">&lt;<span class="regexp">/div&gt;</span></div></pre></td></tr></table></figure></p>
<p>按理说12网格只能写4个3，2个6，不用担心，它们会自动换行排列的。<br>另外，把这个网页放到手机上，正常应该是每行只显示一块，但很可能手机浏览器没有解读出这个网页的响应式信息，把它当做中屏来展示了，这时候就要在head里加一行：<br><code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;</code></p>
<h2 id="Introduction-to-Twitter-Bootstrap"><a href="#Introduction-to-Twitter-Bootstrap" class="headerlink" title="Introduction to Twitter Bootstrap"></a>Introduction to Twitter Bootstrap</h2><h3 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h3><p>来了解一下,<a href="https://www.zhihu.com/question/19821825" target="_blank" rel="external">什么是 Twitter Bootstrap？</a> <a href="http://getbootstrap.com/" target="_blank" rel="external">官网在此</a></p>
<h3 id="The-Bootstrap-Grid-System"><a href="#The-Bootstrap-Grid-System" class="headerlink" title="The Bootstrap Grid System"></a>The Bootstrap Grid System</h3><p>啊，今天赶时间，请看下面的slide体会一下吧：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-13_16:00:03.jpg" alt="2016-08-13_16:00:03.jpg"><br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-13_16:00:27.jpg" alt="2016-08-13_16:00:27.jpg"><br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-13_16:01:28.jpg" alt="2016-08-13_16:01:28.jpg"><br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-13_16:01:06.jpg" alt="2016-08-13_16:01:06.jpg"><br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-13_16:01:28.jpg" alt="2016-08-13_16:01:28.jpg"></p>
<h2 id="作业-1"><a href="#作业-1" class="headerlink" title="作业"></a>作业</h2><p>要求如下：<a href="http://bit.ly/1SvqVyl" target="_blank" rel="external">http://bit.ly/1SvqVyl</a><br>我的作业：<a href="http://yibeichen.me/coursera_html_css_javascript/mod2_solution/">http://yibeichen.me/coursera_html_css_javascript/mod2_solution/</a><br>没想到这么小小的一个作业，竟然花了我一整天，大半天在敲敲改改，还去找配色方案了(强迫症也是没救了)，剩下个小半天全都死磕在git上，还是不太会用。今天主要是学怎么把master的内容merge到gh-pages。<br>参考文档：</p>
<ul>
<li><a href="https://www.zhihu.com/question/24156818" target="_blank" rel="external">怎么预览GitHub项目里的网页或Demo？</a></li>
<li><a href="http://www.cnblogs.com/yuanzm/p/3945814.html" target="_blank" rel="external">如何将你的github仓库部署到github pages</a></li>
</ul>
<h1 id="Coding-the-Static-Restaurant-Site"><a href="#Coding-the-Static-Restaurant-Site" class="headerlink" title="Coding the Static Restaurant Site"></a>Coding the Static Restaurant Site</h1><p>这一章是网站实战——一个餐厅的网站，从客户沟通到网站制作一整个系列的过程都讲得很清楚。</p>
<h2 id="Visit-with-the-Client-amp-Setup-Overview"><a href="#Visit-with-the-Client-amp-Setup-Overview" class="headerlink" title="Visit with the Client &amp; Setup Overview"></a>Visit with the Client &amp; Setup Overview</h2><p>给个建议：Google for ‘web development client questionnaire’<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-19_16:49:41.jpg" alt="2016-08-19_16:49:41.jpg"></p>
<h3 id="Design-Overview"><a href="#Design-Overview" class="headerlink" title="Design Overview"></a>Design Overview</h3><p><a href="https://balsamiq.com/" target="_blank" rel="external">Mockup工具——balsamiq</a></p>
<h3 id="Some-Ground-Rules-and-Overview-of-Setup"><a href="#Some-Ground-Rules-and-Overview-of-Setup" class="headerlink" title="Some Ground Rules and Overview of Setup"></a>Some Ground Rules and Overview of Setup</h3><p>记得启用browser sync，不记得怎么用的话请Google<br>如果要用一种电脑里没有的字体该怎么办？找Google！<br><a href="https://www.google.com/fonts" target="_blank" rel="external">https://www.google.com/fonts</a></p>
<h2 id="Coding-the-Navigation-Bar-of-the-Site"><a href="#Coding-the-Navigation-Bar-of-the-Site" class="headerlink" title="Coding the Navigation Bar of the Site"></a>Coding the Navigation Bar of the Site</h2><h3 id="Coding-Basics-of-Navbar-Header"><a href="#Coding-Basics-of-Navbar-Header" class="headerlink" title="Coding Basics of Navbar Header"></a>Coding Basics of Navbar Header</h3><p>又碰到两个div互相挤，怎么样把他们并排放呢？在第一个div的内容里的a标签上加一句<code>class=&quot;pull-left&quot;</code>这个是bootstrap里面自带的。<br>text-shadow，自行搜索怎么用。<br>鉴于这是一个响应式设计，如果希望在小屏不显示logo的话，还是在刚刚那个位置加<code>class=&quot;pull-left visible-md visible-lg&quot;</code>这句话的意思就是只在大屏和中屏显示logo</p>
<h3 id="Coding-Button-for-Future-Collapsible-Menu"><a href="#Coding-Button-for-Future-Collapsible-Menu" class="headerlink" title="Coding Button for Future Collapsible Menu"></a>Coding Button for Future Collapsible Menu</h3><p>来讨论一下小屏显示的menu按钮，还是直接用bootstrap，在button标签加一个<code>class=&quot;navbar-toggle collapsed&quot;</code>，不过要注意的是<code>collapsed</code>并不是bootstrap的内容，它是bootstrap的一个插件功能，意思是，当这个按钮被点击的时候，就collapsed。</p>
<h3 id="Coding-Nav-Menu-Buttons"><a href="#Coding-Nav-Menu-Buttons" class="headerlink" title="Coding Nav Menu Buttons"></a>Coding Nav Menu Buttons</h3><p>这里要用到icon font。<br>另外还有一个属性<code>class=&quot;hidden-xs&quot;</code>，代表的是，当屏幕变小(xs)的时候，这个部分会隐藏不见。</p>
<h3 id="Fixing-Navbar-Layout-Text-and-Dropdown-Menus"><a href="#Fixing-Navbar-Layout-Text-and-Dropdown-Menus" class="headerlink" title="Fixing Navbar Layout, Text, and Dropdown Menus"></a>Fixing Navbar Layout, Text, and Dropdown Menus</h3><p>这里出现一个<code>font-size: 5vw</code>，什么意思呢？<br>1vw = 1% of viewport width<br>这个单位是响应式的，可以随着屏幕宽度的变化而变化</p>
<h3 id="Coding-the-Jumbotron"><a href="#Coding-the-Jumbotron" class="headerlink" title="Coding the Jumbotron"></a>Coding the Jumbotron</h3><p>不同尺寸的屏幕下显示的图片尺寸也不同，所以要在css的不同的media queries下定义不同尺寸的背景图。<br>在html里引用图片地址的时候，用最小的那个，这样不会对浏览器加载造成太多负担。</p>
<h2 id="Coding-the-Homepage-and-the-Footer"><a href="#Coding-the-Homepage-and-the-Footer" class="headerlink" title="Coding the Homepage and the Footer"></a>Coding the Homepage and the Footer</h2><h3 id="Coding-Navigation-Tiles"><a href="#Coding-Navigation-Tiles" class="headerlink" title="Coding Navigation Tiles"></a>Coding Navigation Tiles</h3><p>来，介绍一个新工具，快速填充图片：<a href="http://placehold.it/" target="_blank" rel="external">http://placehold.it/</a> 用法如下：<br><code>&lt;img src=&quot;http://placehold.it/350x150&quot;&gt;</code><br>给图片加遮罩？css代码如下：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#menu-tile</span>, <span class="selector-id">#specials-tile</span>, <span class="selector-id">#map-tile</span> &#123;</div><div class="line">  <span class="attribute">height</span>: <span class="number">250px</span>;</div><div class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">  <span class="attribute">margin-bottom</span>: <span class="number">15px</span>;</div><div class="line">  <span class="attribute">position</span>: relative;</div><div class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#3F0C1F</span>;</div><div class="line">  <span class="attribute">overflow</span>: hidden;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>如何嵌套地图？Google提供嵌套代码，share link和embed map都要添加，记得修改宽高，和css里的保持一致。</p>
<h3 id="Coding-the-Footer"><a href="#Coding-the-Footer" class="headerlink" title="Coding the Footer"></a>Coding the Footer</h3><p><code>&lt;footer class=&quot;panel-footer&quot;&gt;</code>直接用element和class，有default样式。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#testimonials</span> <span class="selector-tag">p</span><span class="selector-pseudo">:nth-child(2)</span> &#123;</div><div class="line">  <span class="attribute">margin-top</span>: <span class="number">25px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>又用上了<code>nth-child(2)</code>这一句，意思是对testimonials的第二个p生效。</p>
<h2 id="Coding-the-Restaurant-Menu-Pages"><a href="#Coding-the-Restaurant-Menu-Pages" class="headerlink" title="Coding the Restaurant Menu Pages"></a>Coding the Restaurant Menu Pages</h2><h3 id="Coding-the-Menu-Categories"><a href="#Coding-the-Menu-Categories" class="headerlink" title="Coding the Menu Categories"></a>Coding the Menu Categories</h3><p>复制主页的index.html，头尾都不用变，更换一下main-content的内容。<br>定制了一个超小屏xxs，仿照xs来的</p>
<h3 id="Coding-the-Single-Menu-Category-Page"><a href="#Coding-the-Single-Menu-Category-Page" class="headerlink" title="Coding the Single Menu Category Page"></a>Coding the Single Menu Category Page</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;0813：为什么网速这么慢，今天写不完作业下周我就不记得怎么写了！&lt;br&gt;0809：算了下，以每天一小节的速度，学完整个课程还要14天，勉勉强强赶在上学前……&lt;br&gt;0807：到目前为止，课上讲的html还在我的知识储备内。(学代码最好的办法就是去写代码呀，忘了不要紧，被逼着写一回就全想起来了。)&lt;br&gt;0805：有一种当年自学html&amp;amp;css靠的都是野路子，这才是正规军的感觉。&lt;br&gt;0804：&lt;br&gt;老师长得太可爱啦，自带腮红！&lt;br&gt;你好呀，html&amp;amp;css，又见面了耶！(JavaScript你也好，然而我们并不熟。)&lt;br&gt;所有这种编程课，我最喜欢的都是第一节——安装各种工具。&lt;br&gt;
    
    </summary>
    
    
      <category term="web development" scheme="http://yibeichen.me/tags/web-development/"/>
    
      <category term="HTML" scheme="http://yibeichen.me/tags/HTML/"/>
    
      <category term="CSS" scheme="http://yibeichen.me/tags/CSS/"/>
    
      <category term="JavaScript" scheme="http://yibeichen.me/tags/JavaScript/"/>
    
      <category term="coursera" scheme="http://yibeichen.me/tags/coursera/"/>
    
  </entry>
  
  <entry>
    <title>Machine Learning 课程笔记 (未完)</title>
    <link href="http://yibeichen.me/2016/08/13/Machine-Learning/"/>
    <id>http://yibeichen.me/2016/08/13/Machine-Learning/</id>
    <published>2016-08-13T07:28:11.000Z</published>
    <updated>2016-08-18T08:50:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>笔记完成时间：0813(逻辑回归) 0806(Octave基本操作) 0805(多元线性回归) 0804(线代复习) 0803(一元线性回归) 0801(简介)<br>0806：写个作业要看15页的文档，好难过。(做完作业觉得智商为负。转置总弄错！)<br>0804：LaTex问题待解决。<br>0803：怎么用markdown写数学公式？<br>0801：抽风，笔记用英文开始，最后还是转向了中文。<br><a id="more"></a></p>
<hr>
<p>Coursera地址: <a href="https://www.coursera.org/learn/machine-learning" target="_blank" rel="external">机器学习</a></p>
<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>Machine Learning</p>
<ul>
<li>Grew out of work in AI</li>
<li>New capability for computers</li>
</ul>
<p>Tom Mitchell provides a more <strong>modern definition</strong>: “A computer program is said to learn from experience E with respect to some class of tasks T and performance measure P, if its performance at tasks in T, as measured by P, improves with experience E.”<br>Example: playing checkers.<br>E = the experience of playing many games of checkers<br>T = the task of playing checkers.<br>P = the probability that the program will win the next game.</p>
<p>Examples:</p>
<ul>
<li>Database mining<ul>
<li>Web click data</li>
<li>medical records</li>
<li>biology</li>
<li>engineering</li>
</ul>
</li>
<li>Applications can’t program by hand<ul>
<li>Autonomous helicopter</li>
<li>handwriting recognition</li>
<li>most of Natural Language Processing(NLP)</li>
<li>Computer Vision</li>
</ul>
</li>
<li>Self-customizing programs<ul>
<li>Amazon product recommendations</li>
</ul>
</li>
<li>Understanding human learning brain(brain, real AI)</li>
</ul>
<h2 id="Supervised-Learning"><a href="#Supervised-Learning" class="headerlink" title="Supervised Learning"></a>Supervised Learning</h2><p><em>probably the most common type of ML problem</em></p>
<h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><h4 id="Housing-price-prediction"><a href="#Housing-price-prediction" class="headerlink" title="Housing price prediction"></a>Housing price prediction</h4><p>Given this data, you have a friend who owns a house that is 750 square feet and hoping to sell the house and they want to know how much the can get for the house.<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-01_15:33:48.jpg" alt="2016-08-01_15:33:48.jpg"></p>
<p><strong>How can the learning algorithm help you?</strong></p>
<ul>
<li>straight line through the data<br>maybe about $150,000</li>
<li>a second-order polynomial<br>closer to $200,000</li>
</ul>
<p>How to chose and how to decide do you want to fit a straight line to the data or do you want to fit the quadratic function to the data.(<strong>talk later</strong>)</p>
<p><strong>What does this mean?</strong><br>Supervised learning refers to the fact that we gave the algorithm a data set in which the “right answers” were given.</p>
<ul>
<li>we give the algorithm a data set of houses in which for every example in this data set, we told it what is the right price so what is the actual price that, that house sold for and the toss of the algorithm was to just produce more of these right answers.</li>
<li>also called <strong>a regression problem</strong> which means trying to predict a <em>continuous(not discrete)</em> value output.</li>
</ul>
<h4 id="Breast-cancer-malignant-benign"><a href="#Breast-cancer-malignant-benign" class="headerlink" title="Breast cancer (malignant, benign)"></a>Breast cancer (malignant, benign)</h4><p>Look at medical records and try to predict of a breast cancer as malignant or benign.<br>Let’s say a friend who tragically has a breast tumor, according to the size of her tumor, can you estimate what is the chance that a tumor is malignant versus benign?<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-01_16:00:36.jpg" alt="2016-08-01_16:00:36.jpg"></p>
<p><strong>a classification problem</strong></p>
<ul>
<li>refers to we’re trying to predict a <em>discrete</em> value output: zero or one, malignant or benign.</li>
<li>sometimes you can have more than two values for the two possible values for the output.<ul>
<li>e.g. there are three types of breast cancers and so you may try to predict the discrete value of zero, one, two, or three with zero being benign, one means type one cancer, two means a second type of cancers, and three means the third type.</li>
</ul>
</li>
</ul>
<p><strong>another way to plot the data</strong><br>map it down to a real line and use different symbols to denote malignant versus benign examples.<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-01_16:29:37.jpg" alt="2016-08-01_16:29:37.jpg"></p>
<p>↑↑↑we use only one feature or one attribute <em>tumor size</em><br>↓↓↓we have more than one feature, more than one attribute <em>age and tumor size</em><br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-01_16:30:57.jpg" alt="2016-08-01_16:30:57.jpg"><br>given a data set like this, the learning algorithm mighy throw the straight line through the data to try to separate out the malignant tumors from the benign ones.</p>
<p><strong>How do you deal with an infinite numbers of feature?</strong><br>an algorithm called the Support Vector Machine</p>
<ul>
<li>allow a computer to deal with an infinite numbers of features.</li>
</ul>
<h3 id="Recap"><a href="#Recap" class="headerlink" title="Recap"></a>Recap</h3><ul>
<li>Supervised learning lets you get the <em>correct</em> data</li>
<li>a regression problem–predict a continuous(not discrete) value output</li>
<li>a classification problem–predict a discrete value output</li>
</ul>
<h2 id="Unsupervised-Learning"><a href="#Unsupervised-Learning" class="headerlink" title="Unsupervised Learning"></a>Unsupervised Learning</h2><p>We’re given data that that doesn’t have any labels or that all has the same label or really no labels. And we’re not told what to do with it and what each data point is.<br>Instead we’re just told, here is a data set. Can you find some structure in the data?<br>an Unsupervised Learning algorithm might decide that the data lives in two different clusters<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-01_16:55:25.jpg" alt="2016-08-01_16:55:25.jpg"></p>
<h3 id="clustering-algorithms"><a href="#clustering-algorithms" class="headerlink" title="clustering algorithms"></a>clustering algorithms</h3><h4 id="Examples-1"><a href="#Examples-1" class="headerlink" title="Examples"></a>Examples</h4><h5 id="Google-URLs"><a href="#Google-URLs" class="headerlink" title="Google URLs"></a>Google URLs</h5><p>you click different links then you get different stories.<br>So what Google News has done is look for tens of thousands of news stories and automatically cluster them together. The news stories that are all about the same topic get displayed together.</p>
<h5 id="DNA-microarray-data"><a href="#DNA-microarray-data" class="headerlink" title="DNA microarray data"></a>DNA microarray data</h5><p> The idea is put a group of different individuals and for each of them, you measure how much they do or do not have a certain gene.<br> These colors, red, green, gray and so on, they show the degree to which different individuals do or do not have a specific gene.<br> <img src="http://oapfne1kf.bkt.clouddn.com/2016-08-01_17:03:40.jpg" alt="2016-08-01_17:03:40.jpg"><br> What you can do is run a clustering algorithm to group individuals into different categories or into different types of people.  </p>
<h4 id="Applications"><a href="#Applications" class="headerlink" title="Applications"></a>Applications</h4><ul>
<li>organize large computer clusters<br>at large data centers, figure out which machines tend to work together and if you put them together, you can make your data center work more efficiently</li>
<li>social network analysis<br>given knowledge about which friends you email the most or given your Facebook friends or your Google+ circles, can we automatically identify which are cohesive groups of friends, also which are groups of people that all know each other?</li>
<li>market segmentation<br>look at the customer data set and automatically discover market segments and group customers into different market segments so that you can automatically and more efficiently sell or market your different market segments together?</li>
<li>surprisingly astronomical data analysis<br>gives surprisingly interesting useful theories of how galaxies are born.</li>
</ul>
<h3 id="cocktail-party-problem-algorithm"><a href="#cocktail-party-problem-algorithm" class="headerlink" title="cocktail party problem algorithm"></a>cocktail party problem algorithm</h3><p>(好了，我要上中文了)<br>想象有一个鸡尾酒会，房间里到处都是人，同时交谈，声音会重叠，你可能连站在你对面的那个人说的话都听不见。<br>那么重新想象一个只有两个人1和2的鸡尾酒会，他们同时交谈，房间里有两个麦克风A和B，放在不同的位置，因为距离不同，所以两个麦克风对这两个人的录音效果也不同。可能有在麦克风A那里1的声音大2的声音小，在B那里则是1的声音小2的声音大。<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-01_17:33:12.jpg" alt="2016-08-01_17:33:12.jpg"><br>但是A和B都记录了两种声音，output的时候就会感受到声音的重叠。<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-01_17:34:07.jpg" alt="2016-08-01_17:34:07.jpg"><br>假如两个人同时用不同的语言法语和英语数数，那么output的混音就是什么都听不见了，所以我们需要把法语和英语分开输出。</p>
<p>这就是传说中的“鸡尾酒会问题算法”。<br>这么一个看上去简简单单的应用，区分两条音轨，用Java可能要写成千上万条代码。但是聪明机智锲而不舍的研究者们折腾出了下面这个，仅仅一条代码瞬间解决问题↓↓↓<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-01_17:24:09.jpg" alt="2016-08-01_17:24:09.jpg"><br>(看不懂这个公式)</p>
<h3 id="Octave"><a href="#Octave" class="headerlink" title="Octave"></a>Octave</h3><p><strong>[W,s,v] = svd((repmat(sum(x.<em>x,1), size(x,1),1).</em>x)*x’)</strong><br>用的是Octave，也就是我们这门课要用的编程环境。<br>Octave/Matlab 和 Java/C++ 高下立见是吧。(还有我的Python也被黑了)</p>
<ul>
<li>SVD(singular value decomposition)–linear algebra routine which is built into octave</li>
<li>using MATLAB to prototype is a really good way to do this</li>
</ul>
<h1 id="Linear-Regression-with-One-Variable-一元线性回归"><a href="#Linear-Regression-with-One-Variable-一元线性回归" class="headerlink" title="Linear Regression with One Variable (一元线性回归)"></a>Linear Regression with One Variable (一元线性回归)</h1><h2 id="Model-and-Cost-Function"><a href="#Model-and-Cost-Function" class="headerlink" title="Model and Cost Function"></a>Model and Cost Function</h2><h3 id="Model-Representation"><a href="#Model-Representation" class="headerlink" title="Model Representation"></a>Model Representation</h3><p>Housing Price Predict</p>
<ul>
<li>supervised learning algorithm</li>
<li>linear regression</li>
</ul>
<ol>
<li>Training set (this is your data set)</li>
<li>Notation (used throughout the course)<ul>
<li>m = number of training examples</li>
<li>x’s = input variables / features</li>
<li>y’s = output variable “target” variables<ul>
<li>(x,y) - single training example</li>
<li>(x^{i}, y^{i}) - specific example (i^{th} training example)<ul>
<li>i is an index to training set</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ol>
<p><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-03_11:50:42.jpg" alt="2016-08-03_11:50:42.jpg"><br>(把这一整张都截图下来不算侵权吧？忐忑)<br>这个函数的名字叫做hypothesis，跟科研中的“hypothesis”(假设)的含义有很大区别，反正约定俗称就这样称呼了，不用太惊讶。</p>
<p>在预测房价这个问题中，一个自变量x(房子的面积)，一个因变量y(房价)，被称为一元线性回归, univariate也是一元的意思。<br>那么，怎么来表示函数h(hypothesis的缩写)呢？<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-03_12:52:15.jpg" alt="2016-08-03_12:52:15.jpg"><br>就是一元一次函数啦：y=b+kx</p>
<h3 id="Cost-Function-成本函数"><a href="#Cost-Function-成本函数" class="headerlink" title="Cost Function (成本函数)"></a>Cost Function (成本函数)</h3><p>顾名思义，成本函数，当然是要降低成本，所以这个函数越小越好。</p>
<p>也就是，根据样本数据，拟合一条直线出来。通常，这些样本数据的分布并不是非常完美的，它们大致会落在一条直线的附近。这条直线具体长什么样，取决于h函数的参数。<br>参数选得好，h函数做预测就会比较精确。而成本函数就是用来评估参数的好坏。<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-03_13:27:49.jpg" alt="2016-08-03_13:27:49.jpg"><br>有没有觉得跟标准差的公式很相似？<br>道理是一样的，标准差也是用来描述一组数据的波动状况呀，越小表示数据越稳定。<br>所以呢，这个函数的另一个名字叫做 squared error function。</p>
<p>hθ(x)是关于变量x的函数，J(θ1)是关于参数θ的函数。<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-03_2016-08-03_14:59:51.jpg" alt="2016-08-03_2016-08-03_14:59:51.jpg"><br>对于每一个θ1，都有一个对应的J(θ1)曲线<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-03_15:00:09.jpg" alt="2016-08-03_15:00:09.jpg"><br>而我们的目标就是找到一个θ1，使得J(θ1)最小化，这张图上的最小值是θ1=1，我们就可以用这个θ1=1来设定我们的拟合函数h。</p>
<p>上面这个案例是简化了算法，将θ0设定为0，接下来就回到原始的复杂数据上，来感受一下更普遍一点的线性回归。<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-03_19:21:13.jpg" alt="2016-08-03_19:21:13.jpg"><br>这下我们有了两个参数θ0,θ1，J(θ0,θ1)的图形就不再是一条线了，而是下面这种三维曲面图：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-03_19:25:25.jpg" alt="2016-08-03_19:25:25.jpg"><br>不过，为了便于理解，接下来还是用轮廓图讲解：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-03_19:28:36.jpg" alt="2016-08-03_19:28:36.jpg"><br>右边图中的椭圆，就是J(θ0,θ1)值相同的所有点的集合。<br>同心圆最中间那个圈的中心，就是函数J的最小值。</p>
<h2 id="Parameter-Learning"><a href="#Parameter-Learning" class="headerlink" title="Parameter Learning"></a>Parameter Learning</h2><h3 id="Gradient-Descent-梯度下降"><a href="#Gradient-Descent-梯度下降" class="headerlink" title="Gradient Descent (梯度下降)"></a>Gradient Descent (梯度下降)</h3><p>这种算法在机器学习中应用得很广，不仅仅是一元线性回归，下面这个就是常用的做法：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-03_21:06:28.jpg" alt="2016-08-03_21:06:28.jpg"><br>假设有个函数J(不一定是线性回归)，要求它的成本函数，通常是要先设定θ0,θ1，把它们都初始为0，然后一点点改变这两个参数，使得成本函数的值最低，图形如下：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-03_21:06:55.jpg" alt="2016-08-03_21:06:55.jpg"><br>为了更好地理解梯度下降，你可以把图上的这两个高点想象成公园的两座小山，你站在其中一座山的某一点上，环顾四周，问自己：“假如要以最快的速度下山，我该走哪个方向呢？”你找到了一个方向，往前走了一步，现在你站在新的起点上，再一次问自己刚刚那个相同的问题。然后又迈出了一步……如此重复这几个步骤，直到你抵达局部最低点。<br>这个算法的有趣之处在于，如果你的起点偏离了一些，你得到的局部最优解也是不同的。</p>
<p>接下来是梯度下降算法的定义：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-03_21:22:28.jpg" alt="2016-08-03_21:22:28.jpg"><br>这张图特意保留了笔记，助于日后唤醒记忆。<br>α 指的是learning rate，它控制着我们更新参数θj的幅度。<br>α 旁边的那串是导数项(derivative term)<br>要注意的是赋值的时候要同步更新 <strong>simultaneous update</strong><br>做课间练习的时候我还错了！明明右边的算法是错的，我还是用了它……</p>
<p>接下来讲了偏导数，不懂，没关系，课程还是可以继续下去！<br>至于导数，现学：就是求曲线上一点的切线的斜率，如果斜率为正，那就是正导数。下面这两个图就是一个正导数和一个负导数：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-03_21:39:01.jpg" alt="2016-08-03_21:39:01.jpg"></p>
<p>接下来看看α的大小对梯度下降的影响：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-03_21:41:31.jpg" alt="2016-08-03_21:41:31.jpg"><br>如果它的值过大，θ1会跑得很快，可能永远也找不到最优解。<br>如果它的值过小，θ1跑得会慢一点，但肯定不会错过最低点。</p>
<p>假如我们初始化的θ1已经是最低点了，再用梯度下降这个公式会怎么样呢？<br>保持不变，因为导数为0了呀。<br>正是由于导数的存在，所以在越接近最低点的时候θ1的值变化得越小，因为斜率越小呀，所以不用总是改变α的值。</p>
<h3 id="Gradient-Descent-For-Linear-Regression"><a href="#Gradient-Descent-For-Linear-Regression" class="headerlink" title="Gradient Descent For Linear Regression"></a>Gradient Descent For Linear Regression</h3><p>先复习一下这两个算法，如何将梯度下降应用到线性回归的成本函数中呢？最重要的部分是导数那块：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-03_21:51:46.jpg" alt="2016-08-03_21:51:46.jpg"><br>来，让我们推导一下：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-03_21:54:22.jpg" alt="2016-08-03_21:54:22.jpg"><br>再代入一下：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-03_21:58:42.jpg" alt="2016-08-03_21:58:42.jpg"><br>还记得吗？梯度下降的图形有两个山头，所以它有好几个局部最优解，但是成本函数的图形是一个 <strong>凸函数</strong>，又称 <strong>弓形函数</strong>，只有一个全局最优解。所以呢，用梯度下降来计算成本函数，只会得到一个全局最优解。</p>
<p>两种算法结合在一起构成的新的算法，就是线性回归算法，又称为批量梯度下降 <strong>“Batch” Gradient Descent</strong>。<br>“批量”意味着，下降过程中用到了所有样本数据。<br>也有一些其他的梯度下降方法，并不会用到所有的数据，而只是用了这些数据的子集。以后的课程会介绍。</p>
<p>线性代数中有一种称为正规方程 <strong>normal equations</strong> 的方法，可以不用梯度下降，也能求出J的最小值。不过，梯度下降更适用于large data。</p>
<h1 id="Linear-Algebra-Review"><a href="#Linear-Algebra-Review" class="headerlink" title="Linear Algebra Review"></a>Linear Algebra Review</h1><h2 id="Matrices-and-Vectors-矩阵和向量"><a href="#Matrices-and-Vectors-矩阵和向量" class="headerlink" title="Matrices and Vectors (矩阵和向量)"></a>Matrices and Vectors (矩阵和向量)</h2><h3 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h3><p>矩阵可以理解为一个二维数组，矩阵的维度计算：行数乘以列数，比如4X2矩阵(R4X2,注意数字是上标)。<br>如何来表示一个特定的矩阵元素呢？以下图为例：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-04_18:39:42.jpg" alt="2016-08-04_18:39:42.jpg"><br>所以，A11=1402, A12=191, A43=undefined (注意，数字是下标)</p>
<h3 id="向量"><a href="#向量" class="headerlink" title="向量"></a>向量</h3><p>向量是一个nX1的矩阵，n是行数，1是列数，向量的维度计算以行数为参考，比如4维向量(R4,数字是上标)。<br>向量内的元素引用公式为：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-04_CodeCogsEqn.png" alt="2016-08-04_CodeCogsEqn.png"><br>({y}^{i}={i}^{th}$)<br>通常有两种向量索引表示方法：1-索引和0-索引，如下图：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-04_18:57:29.jpg" alt="2016-08-04_18:57:29.jpg"><br>很像Python里的数组，用的是0-indexed。<br>在数学上，用1-indexed比较多，在机器学习中0-indexed则更广泛些。</p>
<p>最后，在矩阵和向量的使用过程中，通常会用大写字母来表示矩阵，用小写字母表示数字或向量。</p>
<h2 id="Addition-and-Scalar-Multiplication-加法和标量乘法"><a href="#Addition-and-Scalar-Multiplication-加法和标量乘法" class="headerlink" title="Addition and Scalar Multiplication (加法和标量乘法)"></a>Addition and Scalar Multiplication (加法和标量乘法)</h2><h3 id="矩阵加法"><a href="#矩阵加法" class="headerlink" title="矩阵加法"></a>矩阵加法</h3><p>两个矩阵相加，就是把两个矩阵里的元素逐个相加，只有两个维度相同的矩阵才可以相加。</p>
<h3 id="标量乘法"><a href="#标量乘法" class="headerlink" title="标量乘法"></a>标量乘法</h3><p>scalar指的是real number，也就是说，一个实数和一个矩阵相乘，就是把矩阵中的每个元素都和这个实数相乘。除法也是同理。乘除前后的矩阵维度是不变的。</p>
<h3 id="综合运算-combination-of-operands"><a href="#综合运算-combination-of-operands" class="headerlink" title="综合运算(combination of operands)"></a>综合运算(combination of operands)</h3><p>也很简单啦，和实数的综合运算规律一样：先乘除后加减。</p>
<h2 id="Matrix-Vector-Multiplication-矩阵向量乘法"><a href="#Matrix-Vector-Multiplication-矩阵向量乘法" class="headerlink" title="Matrix Vector Multiplication(矩阵向量乘法)"></a>Matrix Vector Multiplication(矩阵向量乘法)</h2><p>来看一个例子，一个3X2的矩阵和一个2X1向量相乘会得到一个3*1向量。<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-04_19:38:23.jpg" alt="2016-08-04_19:38:23.jpg"><br>注意了，这里讲的是一个m x n矩阵和一个n x 1矩阵(n维向量)相乘，得到一个m维向量。<br>具体做法是：把矩阵A的第一行元素和向量x里对应的元素相乘后相加，得到向量y的第一个元素，再把矩阵第二行元素和向量x对应的元素相乘后相加，得到向量y的第二个元素……以此类推。<br>来看一下前几节课说的房价预测的案例，怎么用矩阵向量乘法来快速计算呢？如下图：<img src="http://oapfne1kf.bkt.clouddn.com/2016-08-04_19:48:35.jpg" alt="2016-08-04_19:48:35.jpg"><br>把它们弄成矩阵和向量，就可以很容易地用计算机语言比如Octave(Python也可以)来实现了：<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:, <span class="number">1000</span>,</div><div class="line">  prediction(<span class="built_in">i</span>):……</div></pre></td></tr></table></figure></p>
<p>上面这行代码可能是Octave的，总之这样写代码很简洁高效。</p>
<h2 id="Matrix-Matrix-Multiplication-矩阵和矩阵相乘"><a href="#Matrix-Matrix-Multiplication-矩阵和矩阵相乘" class="headerlink" title="Matrix Matrix Multiplication (矩阵和矩阵相乘)"></a>Matrix Matrix Multiplication (矩阵和矩阵相乘)</h2><p>矩阵和矩阵相乘，可以把第二个矩阵拆分为多个向量，就变成了矩阵和向量相乘，最后把得到的向量组合成矩阵：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-04_19:57:46.jpg" alt="2016-08-04_19:57:46.jpg"><br>注意，相乘的两个矩阵是有特点的，前一个矩阵的列数等于后一个矩阵的行数。<br>再用房价预测的案例，当有多个假设函数的时候，怎么用矩阵和矩阵乘法来计算：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-04_20:02:28.jpg" alt="2016-08-04_20:02:28.jpg"><br>一次矩阵计算就可以得到12个预测结果，而且很多编程语言都有丰富的线性代数库，用起来非常方便。</p>
<h2 id="Matrix-Multiplication-Properties"><a href="#Matrix-Multiplication-Properties" class="headerlink" title="Matrix Multiplication Properties"></a>Matrix Multiplication Properties</h2><p>介绍一些关于矩阵乘法的特性：</p>
<ol>
<li>乘法交换律对矩阵并不适用。(《上帝掷骰子吗？》讲到了是薛定谔还是谁？就是通过矩阵的交换乘法发现了量子的特征？啊呀，不记得了。)</li>
<li>矩阵符合乘法结合律。</li>
</ol>
<h3 id="单位矩阵-identity-matrix"><a href="#单位矩阵-identity-matrix" class="headerlink" title="单位矩阵 (identity matrix)"></a>单位矩阵 (identity matrix)</h3><p>这样来理解吧，在实数乘法中，1乘以任何数都等于任何数，所以1就是一个identity，而在矩阵界也有这样的数：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-04_20:24:45.jpg" alt="2016-08-04_20:24:45.jpg"><br>看看这个销魂的板书，这种单位矩阵的特点就是，对角线都是1，其他部分全部是0.</p>
<h2 id="Inverse-and-Transpose-求倒和转置"><a href="#Inverse-and-Transpose-求倒和转置" class="headerlink" title="Inverse and Transpose (求倒和转置)"></a>Inverse and Transpose (求倒和转置)</h2><h3 id="求倒运算"><a href="#求倒运算" class="headerlink" title="求倒运算"></a>求倒运算</h3><p>实数界除了0以外的数都有倒数，那么矩阵界呢？<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-04_20:28:58.jpg" alt="2016-08-04_20:28:58.jpg"><br>注意，只有方阵才有导数，如果方阵的所有元素都是0，也是没有倒数的，矩阵和它的倒数相乘得到的是单位矩阵，所以其实是根据单位矩阵来推算矩阵倒数，很多编程软件都有求逆矩阵的软件库。</p>
<p>另外，对于那些没有倒数的矩阵，他们被称为奇异(singular)矩阵或者退化(degenerate)矩阵。</p>
<h3 id="转置运算"><a href="#转置运算" class="headerlink" title="转置运算"></a>转置运算</h3><p>最直观的理解就是，沿着矩阵的对角线画一条线，再以这条线为轴将矩阵翻转。来继续看一看销魂的板书吧：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-04_20:38:21.jpg" alt="2016-08-04_20:38:21.jpg"><br>如何检验转置运算的对错？看第一个和最后一个元素，它俩是不变的。</p>
<h1 id="Linear-Regression-with-Multiple-Variables"><a href="#Linear-Regression-with-Multiple-Variables" class="headerlink" title="Linear Regression with Multiple Variables"></a>Linear Regression with Multiple Variables</h1><h2 id="Multivariate-Linear-Regression-多元线性回归"><a href="#Multivariate-Linear-Regression-多元线性回归" class="headerlink" title="Multivariate Linear Regression (多元线性回归)"></a>Multivariate Linear Regression (多元线性回归)</h2><h3 id="Multiple-Features-多变量"><a href="#Multiple-Features-多变量" class="headerlink" title="Multiple Features (多变量)"></a>Multiple Features (多变量)</h3><p>上一个案例：房价预测，只有一个变量是x(房子的面积)。现在，变成多变量就是x1(房间面积)、x2(房子楼层)、x3(房子的年数)……<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-05_21:15:45.jpg" alt="2016-08-05_21:15:45.jpg"><br>这个图很好看懂吧？多个变量可以凑成一个向量。<br>为了帮助理解，上标表示第几行，下标表示第几列。<br>那么函数怎么表示呢？一个变量是一元一次函数，多个变量当然就是多元一次函数啦。<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-05_21:24:06.jpg" alt="2016-08-05_21:24:06.jpg"><br>图上第一行就是这个多元一次函数，手写部分是简化这个函数的步骤，还记得上节课说的转置运算吗？这个函数最终被简化为矩阵θ的倒数和矩阵x的乘积。<br>注意，这里引进了x_0，并设定它等于1.</p>
<h3 id="Gradient-Descent-for-Multiple-Variables"><a href="#Gradient-Descent-for-Multiple-Variables" class="headerlink" title="Gradient Descent for Multiple Variables"></a>Gradient Descent for Multiple Variables</h3><p>这节自然就是要讲用梯度下降来解决多元线性回归问题了。<br>首先，我们来看一下从一元变成多元，成本函数发生了什么样的变化：<br>注意，多个参数和多个变量都被写成了向量的形式。<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-05_21:30:28.jpg" alt="2016-08-05_21:30:28.jpg"><br>接下来再看看梯度下降的公式有什么变化：<br>仔细看一下会发现，左右两边其实是一样的，运算的规则没有什么区别。<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-05_2016-08-05_2016-08-05_2016-08-05_2016-08-05_2016-08-05_2016-08-05_2016-08-05_2016-08-05_21:33:11.jpg" alt="2016-08-05_2016-08-05_2016-08-05_2016-08-05_2016-08-05_2016-08-05_2016-08-05_2016-08-05_2016-08-05_21:33:11.jpg"></p>
<h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><p>来，我们讲一讲梯度下降在实例中的应用</p>
<h4 id="Feature-Scaling-特征缩放"><a href="#Feature-Scaling-特征缩放" class="headerlink" title="Feature Scaling (特征缩放)"></a>Feature Scaling (特征缩放)</h4><p>这到底是什么呢？<br>这么说吧，它的目标就是要确保多个不同的特征(变量)在一个相似的范围内。<br>比如房价预测问题中，有两个变量x1(房间面积0-2000㎡)、x2(房间数量1-5)，这两个变量的取值相差太大了，这样画出来的成本函数就是那种非常细长的椭圆，再用梯度下降来算的话，会特别特别得慢。<br>那特征缩放是怎么做呢？<br>把x1除以2000、x2除以5，使得这两个变量的范围都在[0，1]，这样的话，画出的成本函数图就比较圆了，梯度下降就会更快。</p>
<p>通常，我们把各个变量的范围通过特征缩放，控制在[-1,1]左右，上下有误差没关系，只要各个变量之间的差别不大就行。<br>这也是有公式可以用的，注意公式里出现的两个数，一个是平均值，一个是极差。<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-05_22:03:22.jpg" alt="2016-08-05_22:03:22.jpg"></p>
<h4 id="Learning-Rate-学习率α"><a href="#Learning-Rate-学习率α" class="headerlink" title="Learning Rate (学习率α)"></a>Learning Rate (学习率α)</h4><p>还记得吧，α是梯度下降那个公式里的，所以这一小节主要讲两点：</p>
<ol>
<li>如何确保梯度下降是正确运行的，也就是debugging</li>
<li>如何选择α的值</li>
</ol>
<p>下面这张图提供了两种方法来检验梯度下降是否正确：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-05_22:12:59.jpg" alt="2016-08-05_22:12:59.jpg"></p>
<ol>
<li>看左边，以迭代的步数(不同的案例这个数是不同的)为横坐标，J(θ)的值为纵坐标，画出图形，正确的情况就是，每一次梯度下降都会使J(θ)减小，当图形无限接近x轴的时候，差不多就是求出最优解的时候了。如果图形是上升的曲线，差不多你的梯度下降就是错的了。</li>
<li>看右边，用的是公式，如果每次迭代J(θ)的值减少的量小于10^{-3}，那么差不多就是快求出解了，但是这个问题在于10^{-3}这个数很难界定。</li>
</ol>
<p>所以呢，当我们发现梯度下降不太对的时候，就可以考虑换一下α的值了。比如，上图的图形如果是上升的，α的值就应该调小一点。<br>同样，如果图形是”W”型的曲线，α的值也应该调小。<br>当然啦，α太小了就会变得很慢很慢，图形的坡度也会变小。</p>
<p>建议：挑选α的值可以隔3倍试一试。比如：<br>……, 0.001, 0.003, 0.01, 0.03, 0.1, 0.3, 1, ……</p>
<h3 id="Features-and-Polynomial-多项式-Regression"><a href="#Features-and-Polynomial-多项式-Regression" class="headerlink" title="Features and Polynomial (多项式) Regression"></a>Features and Polynomial (多项式) Regression</h3><p>首先，我们来讲怎么选择特征。<br>还是拿房价预测的例子吧，假如有两个变量，一个是房子临街的宽度，一个是房子的深度，但在设函数的时候，我们可以把变量定为宽度和深度的乘积，这样就变成了一个一元线性回归问题。</p>
<p>多项式指的是什么呢？其实就是多次啦。<br>假如有一个案例只有一个变量，但是你发现用一次函数或者二次函数都不能很好地拟合这个数据集，那么你可以用三次函数，这样你就有了x、x²、x³，然后你可以重新定义一个有三个变量的函数，这三个变量分别就是x_1=x、x_2=x²、x_3=x³.不过要注意的是，这样一来三个变量的取值范围可能差别会很大，在梯度下降的时候别忘了缩放。<br>除了多项式，你还可以用根号呀，用一个变量表示x，另一个变量表示x的平方根，不过同样也要注意取值范围。</p>
<p>讲了这么多，其实是想说明，碰到回归问题不是只有一元线性回归这一种做法，有很多解决问题的方案，注意变换看问题的角度。</p>
<h2 id="Computing-Parameters-Analytically"><a href="#Computing-Parameters-Analytically" class="headerlink" title="Computing Parameters Analytically"></a>Computing Parameters Analytically</h2><h3 id="Normal-Equation-正规方程"><a href="#Normal-Equation-正规方程" class="headerlink" title="Normal Equation (正规方程)"></a>Normal Equation (正规方程)</h3><p>在这之前，我们讲的都是用梯度下降求最优解，可能要迭代很多次才能收敛到一个最小值，而正规方程则提供了一种新方法，一步求得最优解。<br>先考虑一下实数情况下，J(θ)是关于θ的一元二次函数，怎么求最解呢？微积分的方法是求θ的导数，再把导数置0，就可以求出答案了。<br>那假如θ是一个向量呢，难道要把所有θ的导数都求出来置0吗？这样也可以，但是好麻烦。</p>
<p>那正规方程怎么弄呢？构造向量，转置运算！<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-06_11:58:45.jpg" alt="2016-08-06_11:58:45.jpg"><br>看见上图最后一行的公式了吧，是不是有熟悉的T出现了？下面的图解释了一下怎么转置：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-06_12:01:59.jpg" alt="2016-08-06_12:01:59.jpg"><br>我们再回过头看看公式，到底是什么意思呢？<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-06_12:05:59.jpg" alt="2016-08-06_12:05:59.jpg"><br>X的转置乘以X，再对乘积取导数，然后又乘以X的转置，再乘以y。<br>其实还是很好理解的对吧。</p>
<p>既然正规方程看上去简洁很多，那是不是就全部用它求解呢？我们来看一下梯度下降和正规方程的对比：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-06_12:12:17.jpg" alt="2016-08-06_12:12:17.jpg"><br>总结一下，当n大于1万的时候，我们用梯度下降，小于1万我们用正规方程。这说的是线性回归，当涉及到其他更复杂的回归问题的时候，正规方程可能没这么好用，还是梯度下降更方便。</p>
<h3 id="Normal-Equation-Noninvertibility-正规方程不可逆性"><a href="#Normal-Equation-Noninvertibility-正规方程不可逆性" class="headerlink" title="Normal Equation Noninvertibility (正规方程不可逆性)"></a>Normal Equation Noninvertibility (正规方程不可逆性)</h3><p><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-06_CodeCogsEqn.png" alt="2016-08-06_CodeCogsEqn.png"><br>不可逆的问题考虑的是，括号里的乘积得到的矩阵是不可逆的怎么办呢？这样的矩阵被称为奇异或退化矩阵(前面说求倒运算的时候也提到过)。<br>我们来看一下，什么情况下，X的转置和X的乘积是不可逆的：</p>
<ol>
<li>数据中有冗余的变量。比如，房价预测的问题中，一个变量是平方英尺为单位的面积，另一个则是平方米为单位的面积。</li>
<li>变量太多了。比如，变量比样本量还多，数据只有10个，变量却有100个。这时候就要删除一些变量了。这个问题还可以通过regularization的方法来解决，以后会讲到。</li>
</ol>
<p>所以，如果发现你得到一个不可逆的矩阵，那就回过头去检查上面两种情况，不过通常，不可逆矩阵出现的概率很小。Octave里有两个函数<code>pinv()</code>和<code>inv()</code>，可以用来求倒数。</p>
<h1 id="Octave-Tutorial"><a href="#Octave-Tutorial" class="headerlink" title="Octave Tutorial"></a>Octave Tutorial</h1><h2 id="Basic-Operations"><a href="#Basic-Operations" class="headerlink" title="Basic Operations"></a>Basic Operations</h2><p><code>%%</code>在Octave里表示注释<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="comment">%% Change Octave prompt  </span></div><div class="line">PS1(<span class="string">'&gt;&gt; '</span>);</div><div class="line"><span class="comment">%% Change working directory in windows example:</span></div><div class="line">cd <span class="string">'c:/path/to/desired/directory name'</span></div><div class="line"><span class="comment">%% Note that it uses normal slashes and does not use escape characters for the empty spaces.</span></div><div class="line"></div><div class="line"><span class="comment">%% elementary operations</span></div><div class="line"><span class="number">5</span>+<span class="number">6</span></div><div class="line"><span class="number">3</span><span class="number">-2</span></div><div class="line"><span class="number">5</span>*<span class="number">8</span></div><div class="line"><span class="number">1</span>/<span class="number">2</span></div><div class="line"><span class="number">2</span>^<span class="number">6</span></div><div class="line"><span class="number">1</span> == <span class="number">2</span>  <span class="comment">% false</span></div><div class="line"><span class="number">1</span> ~= <span class="number">2</span>  <span class="comment">% true.  note, not "!="</span></div><div class="line"><span class="number">1</span> &amp;&amp; <span class="number">0</span></div><div class="line"><span class="number">1</span> || <span class="number">0</span></div><div class="line">xor(<span class="number">1</span>,<span class="number">0</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">%% variable assignment</span></div><div class="line">a = <span class="number">3</span>; <span class="comment">% semicolon suppresses output</span></div><div class="line">b = <span class="string">'hi'</span>;</div><div class="line">c = <span class="number">3</span>&gt;=<span class="number">1</span>;</div><div class="line"></div><div class="line"><span class="comment">% Displaying them:</span></div><div class="line">a = <span class="built_in">pi</span></div><div class="line"><span class="built_in">disp</span>(a)</div><div class="line"><span class="built_in">disp</span>(sprintf(<span class="string">'2 decimals: %0.2f'</span>, a))</div><div class="line"><span class="built_in">disp</span>(sprintf(<span class="string">'6 decimals: %0.6f'</span>, a))</div><div class="line">format long</div><div class="line">a</div><div class="line">format short</div><div class="line">a</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">%%  vectors and matrices</span></div><div class="line">A = [<span class="number">1</span> <span class="number">2</span>; <span class="number">3</span> <span class="number">4</span>; <span class="number">5</span> <span class="number">6</span>]</div><div class="line"></div><div class="line">v = [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</div><div class="line">v = [<span class="number">1</span>; <span class="number">2</span>; <span class="number">3</span>]</div><div class="line">v = [<span class="number">1</span>:<span class="number">0.1</span>:<span class="number">2</span>]  <span class="comment">% from 1 to 2, with stepsize of 0.1. Useful for plot axes</span></div><div class="line">v = <span class="number">1</span>:<span class="number">6</span>        <span class="comment">% from 1 to 6, assumes stepsize of 1 (row vector)</span></div><div class="line"></div><div class="line">C = <span class="number">2</span>*<span class="built_in">ones</span>(<span class="number">2</span>,<span class="number">3</span>)  <span class="comment">% same as C = [2 2 2; 2 2 2]</span></div><div class="line">w = <span class="built_in">ones</span>(<span class="number">1</span>,<span class="number">3</span>)    <span class="comment">% 1x3 vector of ones</span></div><div class="line">w = <span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">3</span>)</div><div class="line">w = <span class="built_in">rand</span>(<span class="number">1</span>,<span class="number">3</span>)  <span class="comment">% drawn from a uniform distribution</span></div><div class="line">w = <span class="built_in">randn</span>(<span class="number">1</span>,<span class="number">3</span>) <span class="comment">% drawn from a normal distribution (mean=0, var=1)</span></div><div class="line">w = <span class="number">-6</span> + <span class="built_in">sqrt</span>(<span class="number">10</span>)*(<span class="built_in">randn</span>(<span class="number">1</span>,<span class="number">10000</span>));  <span class="comment">% (mean = -6, var = 10) - note: add the semicolon</span></div><div class="line">hist(w)     <span class="comment">% plot histogram using 10 bins (default)</span></div><div class="line">hist(w,<span class="number">50</span>)  <span class="comment">% plot histogram using 50 bins</span></div><div class="line"><span class="comment">% note: if hist() crashes, try "graphics_toolkit('gnu_plot')"</span></div><div class="line"></div><div class="line">I = <span class="built_in">eye</span>(<span class="number">4</span>)    <span class="comment">% 4x4 identity matrix</span></div><div class="line"></div><div class="line"><span class="comment">% help function</span></div><div class="line">help <span class="built_in">eye</span></div><div class="line">help <span class="built_in">rand</span></div><div class="line">help help</div></pre></td></tr></table></figure></p>
<h2 id="Moving-Data-Around"><a href="#Moving-Data-Around" class="headerlink" title="Moving Data Around"></a>Moving Data Around</h2><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">%% dimensions</div><div class="line">sz = size(A) % <span class="number">1</span>x2 matrix: [(<span class="built_in">number</span> <span class="keyword">of</span> rows) (<span class="built_in">number</span> <span class="keyword">of</span> columns)]</div><div class="line">size(A,<span class="number">1</span>)  % <span class="built_in">number</span> <span class="keyword">of</span> rows</div><div class="line">size(A,<span class="number">2</span>)  % <span class="built_in">number</span> <span class="keyword">of</span> cols</div><div class="line"><span class="built_in">length</span>(v)  % size <span class="keyword">of</span> longest dimension</div><div class="line"></div><div class="line"></div><div class="line">%% loading data</div><div class="line">pwd    % show current <span class="built_in">directory</span> (current path)</div><div class="line">cd <span class="string">'C:\Users\ang\Octave files'</span>   % change <span class="built_in">directory</span></div><div class="line">ls     % list <span class="built_in">files</span> <span class="keyword">in</span> current <span class="built_in">directory</span></div><div class="line"><span class="built_in">load</span> q1y.dat    % alternatively, <span class="built_in">load</span>(<span class="string">'q1y.dat'</span>)</div><div class="line"><span class="built_in">load</span> q1x.dat</div><div class="line">who    % list variables <span class="keyword">in</span> workspace</div><div class="line">whos   % list variables <span class="keyword">in</span> workspace (<span class="keyword">detailed</span> view)</div><div class="line"><span class="built_in">clear</span> q1y       % <span class="built_in">clear</span> <span class="keyword">command</span> <span class="title">without</span> <span class="title">any</span> <span class="title">args</span> <span class="title">clears</span> <span class="title">all</span> <span class="title">vars</span></div><div class="line">v = q1x(<span class="number">1</span>:<span class="number">10</span>);  % <span class="keyword">first</span> <span class="number">10</span> elements <span class="keyword">of</span> q1x (counts down <span class="keyword">the</span> columns)</div><div class="line">save hello.mat v;   % save <span class="built_in">variable</span> v <span class="keyword">into</span> <span class="built_in">file</span> hello.mat</div><div class="line">save hello.txt v -ascii; % save <span class="keyword">as</span> ascii</div><div class="line">% fopen, fread, fprintf, fscanf also work  [[<span class="keyword">not</span> needed <span class="keyword">in</span> class]]</div><div class="line"></div><div class="line">%% indexing</div><div class="line">A(<span class="number">3</span>,<span class="number">2</span>)  % indexing is (row,col)</div><div class="line">A(<span class="number">2</span>,:)  % <span class="built_in">get</span> <span class="keyword">the</span> <span class="number">2</span>nd row.</div><div class="line">        % <span class="string">":"</span> means every <span class="keyword">element</span> along that dimension</div><div class="line">A(:,<span class="number">2</span>)  % <span class="built_in">get</span> <span class="keyword">the</span> <span class="number">2</span>nd col</div><div class="line">A([<span class="number">1</span> <span class="number">3</span>],:) % print all  <span class="keyword">the</span> elements <span class="keyword">of</span> rows <span class="number">1</span> <span class="keyword">and</span> <span class="number">3</span></div><div class="line"></div><div class="line">A(:,<span class="number">2</span>) = [<span class="number">10</span>; <span class="number">11</span>; <span class="number">12</span>]     % change <span class="keyword">second</span> column</div><div class="line">A = [A, [<span class="number">100</span>; <span class="number">101</span>; <span class="number">102</span>]]; % append column vec</div><div class="line">A(:) % Select all elements <span class="keyword">as</span> <span class="keyword">a</span> column vector.</div><div class="line"></div><div class="line">% Putting data together</div><div class="line">A = [<span class="number">1</span> <span class="number">2</span>; <span class="number">3</span> <span class="number">4</span>; <span class="number">5</span> <span class="number">6</span>]</div><div class="line">B = [<span class="number">11</span> <span class="number">12</span>; <span class="number">13</span> <span class="number">14</span>; <span class="number">15</span> <span class="number">16</span>] % same dims <span class="keyword">as</span> A</div><div class="line">C = [A B]  % concatenating A <span class="keyword">and</span> B matrices side <span class="keyword">by</span> side</div><div class="line">C = [A, B] % concatenating A <span class="keyword">and</span> B matrices side <span class="keyword">by</span> side</div><div class="line">C = [A; B] % Concatenating A <span class="keyword">and</span> B top <span class="keyword">and</span> bottom</div></pre></td></tr></table></figure>
<h2 id="Computing-on-Data"><a href="#Computing-on-Data" class="headerlink" title="Computing on Data"></a>Computing on Data</h2><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">%%</span> initialize variables</div><div class="line">A = [<span class="number">1</span> <span class="number">2</span>;<span class="number">3</span> <span class="number">4</span>;<span class="number">5</span> <span class="number">6</span>]</div><div class="line">B = [<span class="number">11</span> <span class="number">12</span>;<span class="number">13</span> <span class="number">14</span>;<span class="number">15</span> <span class="number">16</span>]</div><div class="line">C = [<span class="number">1</span> <span class="number">1</span>;<span class="number">2</span> <span class="number">2</span>]</div><div class="line">v = [<span class="number">1</span>;<span class="number">2</span>;<span class="number">3</span>]</div><div class="line"></div><div class="line"><span class="symbol">%%</span> <span class="built_in">matrix</span> operations</div><div class="line">A * C  <span class="symbol">%</span> <span class="built_in">matrix</span> multiplication</div><div class="line">A .* B <span class="symbol">%</span> element-wise multiplication</div><div class="line"><span class="symbol">%</span> A .* C  <span class="keyword">or</span> A * B gives <span class="built_in">error</span> - wrong <span class="built_in">dimensions</span></div><div class="line">A .^ <span class="number">2</span> <span class="symbol">%</span> element-wise square of each element <span class="keyword">in</span> A</div><div class="line"><span class="number">1</span>./v   <span class="symbol">%</span> element-wise reciprocal</div><div class="line"><span class="built_in">log</span>(v)  <span class="symbol">%</span> <span class="built_in">functions</span> like this operate element-wise on vecs <span class="keyword">or</span> matrices</div><div class="line"><span class="built_in">exp</span>(v)</div><div class="line"><span class="built_in">abs</span>(v)</div><div class="line"></div><div class="line">-v  <span class="symbol">%</span> -<span class="number">1</span>*v</div><div class="line"></div><div class="line">v + ones(<span class="built_in">length</span>(v), <span class="number">1</span>)  </div><div class="line"><span class="symbol">%</span> v + <span class="number">1</span>  <span class="symbol">%</span> same</div><div class="line"></div><div class="line">A'  <span class="symbol">%</span> <span class="built_in">matrix</span> <span class="built_in">transpose</span></div><div class="line"></div><div class="line"><span class="symbol">%%</span> misc useful <span class="built_in">functions</span></div><div class="line"></div><div class="line"><span class="symbol">%</span> <span class="built_in">max</span>  (<span class="keyword">or</span> <span class="built_in">min</span>)</div><div class="line">a = [<span class="number">1</span> <span class="number">15</span> <span class="number">2</span> <span class="number">0.5</span>]</div><div class="line">val = <span class="built_in">max</span>(a)</div><div class="line">[val,<span class="literal">ind</span>] = <span class="built_in">max</span>(a) <span class="symbol">%</span> val -  maximum element of the <span class="built_in">vector</span> a <span class="keyword">and</span> index - index value where maximum occur</div><div class="line">val = <span class="built_in">max</span>(A) <span class="symbol">%</span> <span class="keyword">if</span> A <span class="built_in">is</span> <span class="built_in">matrix</span>, returns <span class="built_in">max</span> from each column</div><div class="line"></div><div class="line"><span class="symbol">%</span> <span class="built_in">compare</span> <span class="built_in">values</span> <span class="keyword">in</span> a <span class="built_in">matrix</span> &amp; find</div><div class="line">a &lt; <span class="number">3</span> <span class="symbol">%</span> checks which <span class="built_in">values</span> <span class="keyword">in</span> a are less than <span class="number">3</span></div><div class="line">find(a &lt; <span class="number">3</span>) <span class="symbol">%</span> gives location of elements less than <span class="number">3</span></div><div class="line">A = magic(<span class="number">3</span>) <span class="symbol">%</span> generates a magic <span class="built_in">matrix</span> - <span class="keyword">not</span> much used <span class="keyword">in</span> ML algorithms</div><div class="line">[r,c] = find(A&gt;=<span class="number">7</span>)  <span class="symbol">%</span> <span class="built_in">row</span>, column <span class="built_in">indices</span> <span class="keyword">for</span> <span class="built_in">values</span> matching comparison</div><div class="line"></div><div class="line"><span class="symbol">%</span> <span class="built_in">sum</span>, prod</div><div class="line"><span class="built_in">sum</span>(a)</div><div class="line">prod(a)</div><div class="line"><span class="built_in">floor</span>(a) <span class="symbol">%</span> <span class="keyword">or</span> ceil(a)</div><div class="line"><span class="built_in">max</span>(rand(<span class="number">3</span>),rand(<span class="number">3</span>))</div><div class="line"><span class="built_in">max</span>(A,[],<span class="number">1</span>) -  maximum along <span class="built_in">columns</span>(defaults to <span class="built_in">columns</span> - <span class="built_in">max</span>(A,[]))</div><div class="line"><span class="built_in">max</span>(A,[],<span class="number">2</span>) - maximum along rows</div><div class="line">A = magic(<span class="number">9</span>)</div><div class="line"><span class="built_in">sum</span>(A,<span class="number">1</span>)</div><div class="line"><span class="built_in">sum</span>(A,<span class="number">2</span>)</div><div class="line"><span class="built_in">sum</span>(<span class="built_in">sum</span>( A .* eye(<span class="number">9</span>) ))</div><div class="line"><span class="built_in">sum</span>(<span class="built_in">sum</span>( A .* flipud(eye(<span class="number">9</span>)) ))</div><div class="line"></div><div class="line"></div><div class="line"><span class="symbol">%</span> Matrix inverse (pseudo-inverse)</div><div class="line">pinv(A)        <span class="symbol">%</span> inv(A'*A)*A'</div></pre></td></tr></table></figure>
<h2 id="Plotting-Data"><a href="#Plotting-Data" class="headerlink" title="Plotting Data"></a>Plotting Data</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">%% plotting</div><div class="line">t = [<span class="number">0</span>:<span class="number">0</span>.<span class="number">01</span>:<span class="number">0</span>.<span class="number">98</span>]<span class="comment">;</span></div><div class="line">y1 = sin(<span class="number">2</span>*pi*<span class="number">4</span>*t)<span class="comment">;</span></div><div class="line">plot(t,y1)<span class="comment">;</span></div><div class="line">y2 = cos(<span class="number">2</span>*pi*<span class="number">4</span>*t)<span class="comment">;</span></div><div class="line">hold on<span class="comment">;  % "hold off" to turn off</span></div><div class="line">plot(t,y2,<span class="string">'r'</span>)<span class="comment">;</span></div><div class="line">xlabel(<span class="string">'time'</span>)<span class="comment">;</span></div><div class="line">ylabel(<span class="string">'value'</span>)<span class="comment">;</span></div><div class="line">legend(<span class="string">'sin'</span>,<span class="string">'cos'</span>)<span class="comment">;</span></div><div class="line">title(<span class="string">'my plot'</span>)<span class="comment">;</span></div><div class="line">print -dpng <span class="string">'myPlot.png'</span></div><div class="line"><span class="keyword">close; </span>          % <span class="keyword">or, </span> <span class="string">"close all"</span> to <span class="keyword">close </span>all figs</div><div class="line">figure(<span class="number">1</span>)<span class="comment">; plot(t, y1);</span></div><div class="line">figure(<span class="number">2</span>)<span class="comment">; plot(t, y2);</span></div><div class="line">figure(<span class="number">2</span>), clf<span class="comment">;  % can specify the figure number</span></div><div class="line"><span class="keyword">subplot(1,2,1); </span> % <span class="keyword">Divide </span>plot into <span class="number">1</span>x2 grid, access <span class="number">1</span>st element</div><div class="line">plot(t,y1)<span class="comment">;</span></div><div class="line"><span class="keyword">subplot(1,2,2); </span> % <span class="keyword">Divide </span>plot into <span class="number">1</span>x2 grid, access <span class="number">2</span>nd element</div><div class="line">plot(t,y2)<span class="comment">;</span></div><div class="line">axis([<span class="number">0</span>.<span class="number">5</span> <span class="number">1</span> -<span class="number">1</span> <span class="number">1</span>])<span class="comment">;  % change axis scale</span></div><div class="line"></div><div class="line">%% <span class="keyword">display </span>a matrix (<span class="keyword">or </span>image)</div><div class="line">figure<span class="comment">;</span></div><div class="line">imagesc(magic(<span class="number">15</span>)), colorbar, colormap gray<span class="comment">;</span></div><div class="line">% comma-chaining function calls.  </div><div class="line">a=<span class="number">1</span>,<span class="keyword">b=2,c=3</span></div><div class="line">a=<span class="number">1</span><span class="comment">;b=2;c=3;</span></div></pre></td></tr></table></figure>
<h2 id="Control-Statements-for-while-if-statement"><a href="#Control-Statements-for-while-if-statement" class="headerlink" title="Control Statements: for, while, if statement"></a>Control Statements: for, while, if statement</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">v = <span class="built_in">zeros</span>(<span class="number">10</span>,<span class="number">1</span>);</div><div class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">10</span>,</div><div class="line">    v(<span class="built_in">i</span>) = <span class="number">2</span>^<span class="built_in">i</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"><span class="comment">% Can also use "break" and "continue" inside for and while loops to control execution.</span></div><div class="line"></div><div class="line"><span class="built_in">i</span> = <span class="number">1</span>;</div><div class="line"><span class="keyword">while</span> <span class="built_in">i</span> &lt;= <span class="number">5</span>,</div><div class="line">  v(<span class="built_in">i</span>) = <span class="number">100</span>;</div><div class="line">  <span class="built_in">i</span> = <span class="built_in">i</span>+<span class="number">1</span>;</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="built_in">i</span> = <span class="number">1</span>;</div><div class="line"><span class="keyword">while</span> true,</div><div class="line">  v(<span class="built_in">i</span>) = <span class="number">999</span>;</div><div class="line">  <span class="built_in">i</span> = <span class="built_in">i</span>+<span class="number">1</span>;</div><div class="line">  <span class="keyword">if</span> <span class="built_in">i</span> == <span class="number">6</span>,</div><div class="line">    <span class="keyword">break</span>;</div><div class="line">  <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> v(<span class="number">1</span>)==<span class="number">1</span>,</div><div class="line">  <span class="built_in">disp</span>(<span class="string">'The value is one!'</span>);</div><div class="line"><span class="keyword">elseif</span> v(<span class="number">1</span>)==<span class="number">2</span>,</div><div class="line">  <span class="built_in">disp</span>(<span class="string">'The value is two!'</span>);</div><div class="line"><span class="keyword">else</span></div><div class="line">  <span class="built_in">disp</span>(<span class="string">'The value is not one or two!'</span>);</div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<h2 id="Functions"><a href="#Functions" class="headerlink" title="Functions"></a>Functions</h2><p>首先，你在写字板上写了一个函数，保存格式为“functionName.m”<br>比如：<br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">squareThisNumber</span><span class="params">(x)</span></span></div><div class="line"><span class="title">y</span> = <span class="title">x</span>^2;</div></pre></td></tr></table></figure></p>
<p>然后，让Octave运行这个函数，有两种做法：</p>
<ol>
<li><p>用cd设置函数的位置，这样Octave才能找到它</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">% Navigate <span class="built_in">to</span> <span class="built_in">directory</span>:</div><div class="line">   cd /path/<span class="built_in">to</span>/<span class="function"><span class="keyword">function</span></span></div><div class="line"></div><div class="line">   % Call <span class="keyword">the</span> <span class="function"><span class="keyword">function</span>:</span></div><div class="line">   functionName(args)</div></pre></td></tr></table></figure>
</li>
<li><p>用路径搜索的命令，这个属于高级一点的，不会用也没关系</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">% To <span class="built_in">add</span> <span class="keyword">the</span> path <span class="keyword">for</span> <span class="keyword">the</span> current session <span class="keyword">of</span> Octave:</div><div class="line">    addpath(<span class="string">'/path/to/function/'</span>)</div><div class="line">% To remember <span class="keyword">the</span> path <span class="keyword">for</span> future sessions <span class="keyword">of</span> Octave, <span class="keyword">after</span> executing addpath above, also <span class="built_in">do</span>:</div><div class="line">    savepath</div></pre></td></tr></table></figure>
</li>
</ol>
<p>Octave有个优势在于，可以定义一个函数，返回多个值或参数<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="params">[y1, y2]</span> = <span class="title">squareandCubeThisNo</span><span class="params">(x)</span></span></div><div class="line">    y1 = x^<span class="number">2</span></div><div class="line">    y2 = x^<span class="number">3</span></div></pre></td></tr></table></figure></p>
<p>上面这个函数的调用方式如下：<br><code>[a,b] = squareandCubeThisNo(x)</code></p>
<h2 id="Vectorization"><a href="#Vectorization" class="headerlink" title="Vectorization"></a>Vectorization</h2><p>向量化是一种很方便的运算方式，代码写得更少，出错也少，举个例子<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-06_CodeCogsEqn-1.png" alt="2016-08-06_CodeCogsEqn-1.png"><br>这个求和函数，正常的做法可能是用if语句写循环，类似这种：<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">prediction = <span class="number">0.0</span>;</div><div class="line"><span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:n+<span class="number">1</span>,</div><div class="line">  prediction += theta(<span class="built_in">j</span>) * x(<span class="built_in">j</span>);</div><div class="line"><span class="keyword">end</span>;</div></pre></td></tr></table></figure></p>
<p>但是，把它向量化，设定两个向量θ和x，函数就可以表示为θ的转置乘以x，用代码写出来就是：<br><code>prediction = theta&#39; * x;</code></p>
<h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><p>主要是考察了成本函数和梯度下降，其实有两种做法：</p>
<ol>
<li>用向量解</li>
<li>不用向量，普通解法</li>
</ol>
<p>用向量的优势在于，一句代码就可以，但涉及向量的转置，以及向量乘法不符合交换律，所以我做错了很多遍，现在还是糊涂的。<br>先看computeCost这个<br>正确答案是<br><code>J = 1/(2*m)*sum((X*theta - y).^2);</code><br>不好意思，这个没用向量，不过我用向量写的是<br><code>J = 1/(2*m)*(theta&#39;*X - y)^2);</code><br>首先，我的问题在于平方前没加“.”，然后转置运算错了，至今没有弄清楚到底应该转谁！<br>听说这样写也行：<br><code>J = 1/(2*m)*sum((theta&#39;*X&#39;-y&#39;).^2);</code><br>这里转置了三次呀！为我的智商捉急。</p>
<p>再看gradientDescent这个<br>正确答案1：<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">gradJ = X'*(<span class="name">X*theta</span> - y)/m<span class="comment">;</span></div><div class="line">theta = theta - alpha*gradJ<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>正确答案2：<br><figure class="highlight gcode"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">temp<span class="number">1</span> = theta<span class="comment">(1)</span> - <span class="comment">(alpha / m)</span> * sum<span class="comment">((X * theta - y)</span>.* X<span class="comment">(:,1)</span>);  </div><div class="line">temp<span class="number">2</span> = theta<span class="comment">(2)</span> - <span class="comment">(alpha / m)</span> * sum<span class="comment">((X * theta - y)</span>.* X<span class="comment">(:,2)</span>);  </div><div class="line">theta<span class="comment">(1)</span> = temp<span class="number">1</span>;  </div><div class="line">theta<span class="comment">(2)</span> = temp<span class="number">2</span>;</div></pre></td></tr></table></figure></p>
<p>答案1用了向量，答案2则是普通解法。<br>很不幸，我还是转置错了，等等，为什么这个向量就没用sum求和呢？刚才cost怎么就得用sum呢！</p>
<p>另外，还有好几道选做的多元线性回归题目，没做，可以等全学完了再回头做做玩玩。</p>
<h1 id="Logistic-Regression-逻辑回归"><a href="#Logistic-Regression-逻辑回归" class="headerlink" title="Logistic Regression (逻辑回归)"></a>Logistic Regression (逻辑回归)</h1><h2 id="Classification-and-Representation"><a href="#Classification-and-Representation" class="headerlink" title="Classification and Representation"></a>Classification and Representation</h2><h3 id="分类问题"><a href="#分类问题" class="headerlink" title="分类问题"></a>分类问题</h3><p>比如：是不是垃圾邮件、肿瘤是良性还是恶性的……<br>这类问题中，我们想要预测的y，有两个值{0,1}，其中0：“Negative Class”(负类)，1：“Positive Class”(正类)<br>之后我们会讨论多分类问题，y有多个值{0，1，2，3……}，不过目前我们还是讨论二元分类问题。<br>先来说一下为什么线性回归不适合这种分类问题，看下图：<br>样本拟合的直线很可能会因为一个额外的样本量而发生改变，比如从红色线移到蓝色线，直线改变了，拟合结果也就不准确了。<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-08_17:20:24.jpg" alt="2016-08-08_17:20:24.jpg"><br>还有一点是，通常分类问题中y = 0 or 1，但用线性回归可能会出现h<em>θ(x)&gt;1 or &lt;0<br>所以呢，逻辑回归出场了，它的取值就可以保证0&lt;=h</em>θ(x)&lt;=1</p>
<h3 id="Hypothesis-Representation"><a href="#Hypothesis-Representation" class="headerlink" title="Hypothesis Representation"></a>Hypothesis Representation</h3><p>逻辑回归中的函数长这样：<br>看右边的图，两边无限接近于0到1，因为图像长得像S，所以又被称为Sigmid函数，跟Logistic函数是一个意思啦，可以换着用。<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-08_17:28:46.jpg" alt="2016-08-08_17:28:46.jpg"><br>公式如下：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-08_CodeCogsEqn.png" alt="2016-08-08_CodeCogsEqn.png"><br>其实这个函数的意思呢，是表示一个概率，比如病人的肿瘤是恶性(y=1)的可能性有多少？带进去算一算，差不多0.7吧(注意，那他的肿瘤是良性的概率就是1-0。7)。这句话写成数学公式就可以表示为：h_θ(x)= P(y=1|x,θ)，后面这就是个概率公式啊！看图↓<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-08_17:32:26.jpg" alt="2016-08-08_17:32:26.jpg"></p>
<h3 id="Decision-Boundary-决策边界"><a href="#Decision-Boundary-决策边界" class="headerlink" title="Decision Boundary (决策边界)"></a>Decision Boundary (决策边界)</h3><p>刚刚我们在例子里用公式，其实预测的是y=1的概率，那么到底应该什么时候预测y=1什么时候预测y=0呢？(总觉得这俩都差不多，一定是我没搞懂！)图中给了一个解决方案，当h_θ(x)&gt;=0.5就预测y=1的，反之则预测y=0.<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-08_17:52:19.jpg" alt="2016-08-08_17:52:19.jpg"><br>根据上面这个公式及理论，来看看下面这个例子：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-08_17:59:47.jpg" alt="2016-08-08_17:59:47.jpg"><br>看到坐标轴上的线了吗，那个就是决策边界，是根据参数和假设函数算出来的。这个图看上去好像那条线是根据样本数据的分布画出来的，事实上，把样本数据去掉也是一样的，它是算出来的，不是看到数据在图上的分布画的。(感觉我解释得有点艰难……)<br>再来看一个更复杂一点的案例，这次决策边界不是线性的了。<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-08_18:06:59.jpg" alt="2016-08-08_18:06:59.jpg"><br>看到了吧，由于参数的选择，最后得到的是一个圆，所以就可以预测圆里面的是y=0，圆外面的是y=1.<br>还有更复杂的，图形画出来就更诡异了：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-08_18:07:58.jpg" alt="2016-08-08_18:07:58.jpg"><br>上面这两个案例都是多项式，前面我们讲过的。</p>
<h2 id="Logistic-Regression-Model"><a href="#Logistic-Regression-Model" class="headerlink" title="Logistic Regression Model"></a>Logistic Regression Model</h2><h3 id="成本函数"><a href="#成本函数" class="headerlink" title="成本函数"></a>成本函数</h3><p><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-08_20:29:27.jpg" alt="2016-08-08_20:29:27.jpg"><br>看到了吗，图上用了一个函数嵌套，当我们考察里面这个函数cost的时候，看它的图形，就可以判断可不可以用梯度下降，当图形是凸形的时候，先降后升，才能找到一个全局最优解。<br>上面说的是线性回归的成本函数，来看看逻辑回归的，我们需要分类讨论下：</p>
<ol>
<li>当y=1的时候，函数图像如下(这个是根据对数函数的图像来的)，这个图形的意思是：当h<em>θ(x)=1，y=1，所以成本为0啊，预测准确了呀，但是当h</em>θ(x)=0的时候y还等于1，那就是你跟病人说你的肿瘤是良性的没问题，但实际上人家就是恶性的，你的预测错了，所以成本就非常之大，趋向无穷大！<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-08_20:38:27.jpg" alt="2016-08-08_20:38:27.jpg"></li>
<li>当y=0的时候，图像如下，跟上面的道理是一样的<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-08_20:47:42.jpg" alt="2016-08-08_20:47:42.jpg"><h3 id="简化成本函数和梯度下降"><a href="#简化成本函数和梯度下降" class="headerlink" title="简化成本函数和梯度下降"></a>简化成本函数和梯度下降</h3>首先，我们来看一下成本函数推导：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-10_2016-08-10_15:30:56.jpg" alt="2016-08-10_2016-08-10_15:30:56.jpg"><br>再来看一下正式的公式：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-10_15:32:35.jpg" alt="2016-08-10_15:32:35.jpg"><br>接下来看看梯度下降：<br>仔细观察这张图就会发现逻辑回归和线性回归的梯度下降公式似乎是一样的，的确长一样，不过这里的h_θ(x)不一样了。同样推荐向量化和特征缩放。<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-10_15:34:15.jpg" alt="2016-08-10_15:34:15.jpg"><h3 id="Advanced-Optimization-高级优化"><a href="#Advanced-Optimization-高级优化" class="headerlink" title="Advanced Optimization (高级优化)"></a>Advanced Optimization (高级优化)</h3>通常呢，要优化J_(θ)(图上写的那两个)的值，我们需要写一些代码来不断更新参数的值，比如在梯度下降中是这样的：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-10_15:44:33.jpg" alt="2016-08-10_15:44:33.jpg"><br>但除了梯度下降之外，还有一些其他更高级的优化方法，它们的有点就是不用更新α的值，但是它们相对也复杂很多，不过，使用这个算法并不用完全理解它们的内在运作方式。<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-10_2016-08-10_15:45:00.jpg" alt="2016-08-10_2016-08-10_15:45:00.jpg"><br>来看一下怎么用：<br>右边的function开始那几段是写在.m文件里给Octave调用的，下面的options那几段是要输入在Octave里的。要注意的是，有一句初始化θ的命令，θ必须是d维的向量，d大于等于2.<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-10_15:52:25.jpg" alt="2016-08-10_15:52:25.jpg"><br>现在说一下怎么应用到逻辑回归问题中去，就是代码怎么写的问题啦，注意一下gradient的下标<h2 id="Multiclass-Classification"><a href="#Multiclass-Classification" class="headerlink" title="Multiclass Classification"></a>Multiclass Classification</h2>这一节是讲怎么将逻辑回归应用到多分类问题中，涉及到“一对多”(one-vs-all)的分类算法。<br>先来看三个例子：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-10_2016-08-10_2016-08-10_16:00:27.jpg" alt="2016-08-10_2016-08-10_2016-08-10_16:00:27.jpg"><br>下图是二元问题和多分类问题training set的图示：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-10_16:06:06.jpg" alt="2016-08-10_16:06:06.jpg"><br>二元问题可以画一条线，那三元问题怎么办呢？分成三个二元问题：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-10_16:12:31.jpg" alt="2016-08-10_16:12:31.jpg"><br>这样我们就得到三个分类器了，那对于出现一个新的x，到底用哪个分类器预测呢？<br>把x代入到这些分类器中，选择概率最大的那个。(很好，我听得稀里糊的)<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-10_16:12:31.jpg" alt="2016-08-10_16:12:31.jpg"><h1 id="Regularization"><a href="#Regularization" class="headerlink" title="Regularization"></a>Regularization</h1><h2 id="Solving-the-Problem-of-Overfitting"><a href="#Solving-the-Problem-of-Overfitting" class="headerlink" title="Solving the Problem of Overfitting"></a>Solving the Problem of Overfitting</h2><h3 id="The-Problem-of-Overfitting-过度拟合问题"><a href="#The-Problem-of-Overfitting-过度拟合问题" class="headerlink" title="The Problem of Overfitting (过度拟合问题)"></a>The Problem of Overfitting (过度拟合问题)</h3>先看线性回归问题中的过度拟合<br>下图第三个图就是过度拟合的例子，现有的多项式似乎很好地拟合了所有training set中的数据，但它波动太大了，很难确定它是不是能正确预测training set外的数据。而图二就刚好，图一则是欠拟合。所以，过度拟合一般发生在特征过多的情况下……就是下面那一大段英文啦。<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-10_16:29:58.jpg" alt="2016-08-10_16:29:58.jpg"><br>逻辑回归中的过度拟合道理也是相似的<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-10_16:34:40.jpg" alt="2016-08-10_16:34:40.jpg"><br>那么过度拟合的问题该怎么解决呢？两个办法</li>
</ol>
<ul>
<li>减少特征的量，因为这是导致过度拟合的原因啊，但是删除某些特征也就意味着失去了某些信息</li>
<li>用正则化的方法(也就是这一节要讲的方法)，不减少特征，但使每一项的参数值变小，也就减小了每个特征的影响，但保证了其完整性。</li>
</ul>
<h3 id="成本函数-1"><a href="#成本函数-1" class="headerlink" title="成本函数"></a>成本函数</h3><p>这里说的是正则化的成本函数，它有两个目标：</p>
<ul>
<li>充分拟合training set</li>
<li>降低参数θ的值，使拟合函数趋于简单</li>
</ul>
<p><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-12_15:59:41.jpg" alt="2016-08-12_15:59:41.jpg"><br>上面的成本函数，比线性回归的多了一项，所以，要求得最小值，意味着两项的值都要很小，从而降低了θ的值。而λ 是正则化参数(regularization parameter)。<br>如果λ非常大，会发生什么呢？<br>所有的θ都会被惩罚，变得很小，那就不能很好地拟合训练集了，变成了underfitting</p>
<h3 id="Regularized-Linear-Regression-正则化线性回归"><a href="#Regularized-Linear-Regression-正则化线性回归" class="headerlink" title="Regularized Linear Regression (正则化线性回归)"></a>Regularized Linear Regression (正则化线性回归)</h3><p>再来看看正则化的梯度下降。<br>这张图中，把θ_0分离开了，因为在成本函数中，我们要惩罚的是θ_j，而j是从1开始的。<br>所以从θ_1开始算起，在原来梯度下降的公式上又加了一项，如下图：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-12_16:14:01.jpg" alt="2016-08-12_16:14:01.jpg"><br>公式整理如下：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-12_16:18:03.jpg" alt="2016-08-12_16:18:03.jpg"><br>其中，下面这项始终是＜1的，这就一步一步降低了θ_j的值。<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-12_2016-08-12_16:18:42.jpg" alt="2016-08-12_2016-08-12_16:18:42.jpg"><br>接下来把梯度下降的公式向量化：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-12_16:21:21.jpg" alt="2016-08-12_16:21:21.jpg"><br>λ后面的是一个(n+1)(n+1)维的矩阵，长得很像单位矩阵，但是它的第一个元素是0不是1.</p>
<h3 id="Regularized-Logistic-Regression-正则化逻辑回归"><a href="#Regularized-Logistic-Regression-正则化逻辑回归" class="headerlink" title="Regularized Logistic Regression (正则化逻辑回归)"></a>Regularized Logistic Regression (正则化逻辑回归)</h3><p>来复习一下，逻辑回归的成本函数：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-12_16:40:29.jpg" alt="2016-08-12_16:40:29.jpg"><br>把它正则化，则是要加上下面这一项：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-12_16:41:06.jpg" alt="2016-08-12_16:41:06.jpg"><br>再来看一下，代码里是怎么做的：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-12_16:44:41.jpg" alt="2016-08-12_16:44:41.jpg"><br>用的还是<code>fminunc</code></p>
<h2 id="作业-1"><a href="#作业-1" class="headerlink" title="作业"></a>作业</h2><p>声明一下，并不是独立完成的，参考了许多位大神的代码，致谢！</p>
<h3 id="先说ex2"><a href="#先说ex2" class="headerlink" title="先说ex2"></a>先说ex2</h3><p>第一步是画图，不会用plotData，于是用了<code>help plot</code>，勉强写了几句，但是不成功，折腾了半天意识到：</p>
<ul>
<li>Octave不在乎空格，但是在乎全角半角，一切标点都要用英文的</li>
<li>只要用了<code>;</code>，换不换行都不重要</li>
</ul>
<p>最后的答案是：<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">pos=find(<span class="name">y==1</span>)<span class="comment">;</span></div><div class="line">neg=find(<span class="name">y==0</span>)<span class="comment">;</span></div><div class="line">plot(<span class="name">X</span>(<span class="name">pos</span>,<span class="number">1</span>),X(<span class="name">pos</span>,<span class="number">2</span>),'k+')<span class="comment">;</span></div><div class="line">plot(<span class="name">X</span>(<span class="name">neg</span>,<span class="number">1</span>),X(<span class="name">neg</span>,<span class="number">2</span>),'ko','MarkerFaceColor', 'm')<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>给圆点加了颜色，不然不好看，plot还有很多其他属性property-value，比如：<br>“linestyle”,”linewidth”, “color”, “marker”, “markersize”, “markeredgecolor”,”markerfacecolor”</p>
<p>尴尬，折腾半天回去看pdf才发现，这一段已经写好了……<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">% Find Indices of <span class="keyword">Positive</span> <span class="keyword">and</span> <span class="keyword">Negative</span> Examples</div><div class="line">pos = find(y==<span class="number">1</span>); neg = find(y == <span class="number">0</span>);</div><div class="line">% Plot Examples</div><div class="line"><span class="function"><span class="title">plot</span>(<span class="params">X(pos, 1</span>)</span>, X(pos, <span class="number">2</span>), <span class="string">'k+'</span>,<span class="string">'LineWidth'</span>, <span class="number">2</span>, ...</div><div class="line">     <span class="string">'MarkerSize'</span>, <span class="number">7</span>);</div><div class="line"><span class="function"><span class="title">plot</span>(<span class="params">X(neg, 1</span>)</span>, X(neg, <span class="number">2</span>), <span class="string">'ko'</span>, <span class="string">'MarkerFaceColor'</span>, <span class="string">'y'</span>, ...</div><div class="line">     <span class="string">'MarkerSize'</span>, <span class="number">7</span>);</div></pre></td></tr></table></figure></p>
<p>还是直接贴代码+解释吧<br>sigmoid.m里该填的代码：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">g = (<span class="number">1</span> + e.^(<span class="number">-1</span> *z)).^(<span class="number">-1</span>);</div></pre></td></tr></table></figure></p>
<p>这句就是把数学公式改成程序语言。<br>costFunction.m里该填的代码：<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">h=sigmoid(<span class="name">X*theta</span>)<span class="comment">;</span></div><div class="line">J=1/m*(<span class="name">-1*y</span>'*log(<span class="name">h</span>)-(<span class="number">1</span>-y')*log(1-h));</div><div class="line">grad=1/m*(<span class="name">h-y</span>)'*X<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>这是用程序语言把三个函数分别表示出来，拟合函数、成本函数、梯度下降<br>predict.m里该填的代码：<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">h=sigmoid(X*theta);</div><div class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:m</div><div class="line">    <span class="keyword">if</span> h(<span class="built_in">i</span>)&gt;=<span class="number">0.5</span></div><div class="line">       p(<span class="built_in">i</span>)=<span class="number">1</span>;</div><div class="line">    <span class="keyword">else</span></div><div class="line">       p(<span class="built_in">i</span>)=<span class="number">0</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div></pre></td></tr></table></figure></p>
<p>对着代码解释就是很轻松啊，然而当初想的时候，差点被折腾死，<code>i</code>是我随便用的一个，估计用其他字母也都可以。<code>1：m</code>这句有点像Python里面的list的用法。</p>
<h3 id="接下来是ex2-reg"><a href="#接下来是ex2-reg" class="headerlink" title="接下来是ex2_reg"></a>接下来是ex2_reg</h3><p>这个涉及到了正则化，只用补充一个costFunctionReg.m的代码：<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">h=sigmoid(X*theta);</div><div class="line">J=<span class="number">1</span>/m*(-y'*<span class="built_in">log</span>(h)-(<span class="number">1</span>-y')*<span class="built_in">log</span>(<span class="number">1</span>-h))+lambda/(<span class="number">2</span>*m)*(theta(<span class="number">2</span>:<span class="keyword">end</span>)'*theta(<span class="number">2</span>:<span class="keyword">end</span>));</div><div class="line">grad=<span class="number">1</span>/m*[(h-y)<span class="string">'*X]+lambda/m*theta'</span>;</div><div class="line">grad(<span class="number">1</span>)=grad(<span class="number">1</span>)-lambda/m*theta(<span class="number">1</span>);</div></pre></td></tr></table></figure></p>
<p>就是这个，折腾了我半天，总提示我syntax error。看到<code>theta(2:end)&#39;*theta(2:end)</code>了吗，本来我写的是平方，但是显然向量只能写成两个相乘的方式，平方不行。<br>另外，先定义grad，再定义grad(1)，后面等于前面的减去一项。<br>转置的问题还是不太清楚，为什么<code>grad=1/m*[(h-y)&#39;*X]+lambda/m*theta&#39;;</code>这里的theta要转置！<br>PS：整整一周啊！陷入对智商的重大怀疑中，其实老师讲的已经很易懂了……</p>
<h1 id="Neural-Networks-Representation"><a href="#Neural-Networks-Representation" class="headerlink" title="Neural Networks: Representation"></a>Neural Networks: Representation</h1><h2 id="Motivations"><a href="#Motivations" class="headerlink" title="Motivations"></a>Motivations</h2><h3 id="Non-linear-Hypotheses"><a href="#Non-linear-Hypotheses" class="headerlink" title="Non-linear Hypotheses"></a>Non-linear Hypotheses</h3><p>为什么有了线性回归和逻辑回归算法还要学神经网络算法？<br>主要适用于非线性问题，为了准确描述此类问题通常需要用到多项式，如果特征很多，多项式会变得非常非常长。<br>比如说计算机识别图像这个案例。和人眼不同，计算机看到的图像是一堆像素，所以这个识别图像问题到计算机这就变成了：给你一组汽车的图片作为training set，训练出一个分类器，再给你一张照片，判断它是不是汽车。只不过，这里的x是像素……超级多的像素。<br>感受一下下面这张图：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-18_16:01:27.jpg" alt="2016-08-18_16:01:27.jpg"></p>
<h3 id="Neurons-and-the-Brain"><a href="#Neurons-and-the-Brain" class="headerlink" title="Neurons and the Brain"></a>Neurons and the Brain</h3><p>神经网络算法源于人们想拥有一种模仿大脑的算法。<br>视频里举了很多例子，比如传感器、声纳等等。</p>
<h2 id="Neural-Networks"><a href="#Neural-Networks" class="headerlink" title="Neural Networks"></a>Neural Networks</h2><h3 id="Model-Representation-I"><a href="#Model-Representation-I" class="headerlink" title="Model Representation I"></a>Model Representation I</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;笔记完成时间：0813(逻辑回归) 0806(Octave基本操作) 0805(多元线性回归) 0804(线代复习) 0803(一元线性回归) 0801(简介)&lt;br&gt;0806：写个作业要看15页的文档，好难过。(做完作业觉得智商为负。转置总弄错！)&lt;br&gt;0804：LaTex问题待解决。&lt;br&gt;0803：怎么用markdown写数学公式？&lt;br&gt;0801：抽风，笔记用英文开始，最后还是转向了中文。&lt;br&gt;
    
    </summary>
    
    
      <category term="coursera" scheme="http://yibeichen.me/tags/coursera/"/>
    
      <category term="machine learning" scheme="http://yibeichen.me/tags/machine-learning/"/>
    
  </entry>
  
  <entry>
    <title>Introduction to Classical Music 课程笔记 (未完)</title>
    <link href="http://yibeichen.me/2016/08/09/Introduction-to-Classical-Music/"/>
    <id>http://yibeichen.me/2016/08/09/Introduction-to-Classical-Music/</id>
    <published>2016-08-09T13:41:53.000Z</published>
    <updated>2016-08-10T13:43:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>我用的教材是Craig Wright的<a href="https://www.amazon.cn/%E8%81%86%E5%90%AC%E9%9F%B3%E4%B9%90-%E5%85%8B%E9%9B%B7%E6%A0%BC%E2%80%A2%E8%8E%B1%E7%89%B9/dp/B007TQNEYW/ref=sr_1_1?ie=UTF8&amp;qid=1470288686&amp;sr=8-1&amp;keywords=%E8%81%86%E5%90%AC%E9%9F%B3%E4%B9%90" target="_blank" rel="external">《聆听音乐》</a>，Craig Wright就是这门课的老师，老先生真是儒雅有风度。不过，他推荐的是：<a href="https://www.amazon.com/Essential-Listening-Digital-Downloads-Printed/dp/1285856791/ref=sr_1_2?ie=UTF8&amp;qid=1470288731&amp;sr=8-2&amp;keywords=CRAIG+WRIGHT" target="_blank" rel="external">《The Essential Listening to Music》</a>，但是这本没有中文版，不太方便使用。</p>
<p>7月20日开始记笔记，断断续续更新中。<br>刚开始扒英文字幕当笔记，很快就发现，这些英文我是不会再看第二眼了，于是改成中文，但笔记量也因此少了很多。第三周开始，感觉记笔记已经有点困难了，担心会半途而废，啊，笔记可以少记，课一定要听完呀！<br><a id="more"></a><br>Coursera地址: <a href="https://www.coursera.org/learn/introclassicalmusic" target="_blank" rel="external">古典音乐导论</a><br>Spotify playlist: <a href="https://open.spotify.com/embed?uri=spotify:user:gauravkumar87:playlist:6sPZCTmf5razbg3CfCXsuF" target="_blank" rel="external">点这里</a></p>
<h1 id="What-Is-Music"><a href="#What-Is-Music" class="headerlink" title="What Is Music?"></a>What Is Music?</h1><h2 id="Why-we-Like-What-we-Like"><a href="#Why-we-Like-What-we-Like" class="headerlink" title="Why we Like What we Like"></a>Why we Like What we Like</h2><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>Art is life, art is another life, a life of imagination.</p>
<blockquote>
<p>Music is what feelings sound like. —— Victor Hugo</p>
</blockquote>
<p>It’s very difficult to hate someone who passionately loves the same music that you do.</p>
<h3 id="Popular-Music-and-Classic-Music-Compared"><a href="#Popular-Music-and-Classic-Music-Compared" class="headerlink" title="Popular Music and Classic Music Compared"></a>Popular Music and Classic Music Compared</h3><p>Five important way</p>
<ul>
<li>P often uses electric instruments, electric guitars and electric keyboards<br>  C uses acoustic instruments, instruments generating sounds from natural materials</li>
<li>P often includes lyrics that describe the emotion of the music<br>  C is usually purely instrumental</li>
<li>P tends to have a strong beat<br>  C may be more subdued</li>
<li>P is often short and repetitious<br>  C is longer</li>
<li>P is often performed without music notation<br>  C is often performed  with a score</li>
</ul>
<h3 id="Music-and-Emotions"><a href="#Music-and-Emotions" class="headerlink" title="Music and Emotions"></a>Music and Emotions</h3><p>You can’t see it. You can’t touch it or feel it. You can’t hold it in your hand. But it can touch you, it can grab you, it can move you to cry or move you to dance with joy.<br>Music is the poetry of the air.<br>Classic object, timeless  music.(ad for a classic watch)</p>
<h3 id="How-Do-We-Hear-Music-Sound-Waves-and-the-Ear"><a href="#How-Do-We-Hear-Music-Sound-Waves-and-the-Ear" class="headerlink" title="How Do We Hear Music? Sound Waves and the Ear"></a>How Do We Hear Music? Sound Waves and the Ear</h3><p>Music is the rational organization of sounds and silences passing through time.</p>
<p>We have large sound waves, and smaller sound waves. Large ones generate low pitches. Small ones generate high pitches. </p>
<p>A very long string creates an equally long sound and a low sound.<br>The low note on the piano is vibrating at about 30 times per second while the highest note on the piano is vibrating about 4,000 times per second. </p>
<h4 id="how-we-process-musical-information"><a href="#how-we-process-musical-information" class="headerlink" title="how we process musical information"></a>how we process musical information</h4><p>sound wave enter the inner ear → electro chemical implies (occurs in a small organ —— the basilar membrane (tonotopic))<br>filaments, called cilia are activated by particular sound waves → send a signal to brain<br>sound goes to the brain → through first the primary auditory nerve → to the left and right side of the cortex (the processing of sound occurs → respond to particular frequencies)</p>
<p>How we hear the sound and how we feel about the music (the limbic system, including the amygdala) are the responsibilities of different parts of the brain.</p>
<p>Music is like candy for the mind.</p>
<h3 id="Music-Thrills-Us-Music-Chills-Us"><a href="#Music-Thrills-Us-Music-Chills-Us" class="headerlink" title="Music Thrills Us, Music Chills Us"></a>Music Thrills Us, Music Chills Us</h3><p><strong>We have a direct physiological response to music</strong><br>Most of us are musical maniacs. We can’t get enough of music. And we respond to it very deeply.<br>You may cry when you listen to music. You may get chills.<br>Neuroscientists have shown that there is a scientific reason for these chills.</p>
<p>At the moment of the chills, there is a radical shift in blood flow in certain key spots of the brain, sometimes more, sometimes less blood flows in the frontal cortex, in the amygdala and in the hippocampus, for example. </p>
<h3 id="Why-We-Like-What-We-Like-It’s-Nurture"><a href="#Why-We-Like-What-We-Like-It’s-Nurture" class="headerlink" title="Why We Like What We Like? It’s Nurture"></a>Why We Like What We Like? It’s Nurture</h3><p>How do we get the musical expectations (template) that we have when we come to listen to a piece of music.<br>Two ways through nurture and through nature.<br><strong>By nurture</strong><br>The culture you grow up decides the kind of music you hear and like</p>
<h3 id="It’s-Nurture-The-Syntax-of-Western-Music"><a href="#It’s-Nurture-The-Syntax-of-Western-Music" class="headerlink" title="It’s Nurture: The Syntax of Western Music"></a>It’s Nurture: The Syntax of Western Music</h3><p>Language and music work the same way<br><strong>some rules</strong></p>
<ul>
<li>Leading Tone: Pulls toward the Home Pitch or Tonic</li>
<li>Large Leap: A large leap is reversed by the following pitch (Big leap, always back in the opposite direction)</li>
<li>Harmony: The Harmony must fit with the Melody</li>
<li>Chord Progression: The harmonies usually return hame to tonic</li>
</ul>
<p><strong>sum up</strong><br>Every culture around the world establishes a norm, a template for what the music of that culture should sound like, how it should go. These are not physical attributes of the music, they are cultural. They are human and they are local and they are somewhat arbitrary. </p>
<h3 id="Why-We-Like-What-We-Like-It’s-Nature"><a href="#Why-We-Like-What-We-Like-It’s-Nature" class="headerlink" title="Why We Like What We Like? It’s Nature"></a>Why We Like What We Like? It’s Nature</h3><p>Universal principals about the physics and the acoustic of sound:</p>
<ul>
<li>the overtone series, which does indeed involve good vibrations.</li>
</ul>
<p>In Indonesian gamelan music, Chinese music, every music, classical or pop. We all have the same overtones and therefore the basic notion of consonances. We all have the same basic notion of consonance. Because when I play these fundamental notes, this fundamental. </p>
<p><strong>Also sprach Zarathustra《查拉图斯特拉如是说》</strong><br>It’s a big piece for a western symphony orchestra. The name is German and it sounds very impressive, very intimidating. It’s about the dawn of a superman, a superhero who is equated with the rising of the sun and the advent of the new age. </p>
<p><strong>How it depict</strong></p>
<ol>
<li>Start with low rumblings down underneath to suggest primordial slime. </li>
<li>Then the sound of the trumpet. </li>
<li>Since time immemorial, the trumpet has been associated with the military, the army, with royalty, with power, with the hero. </li>
<li>And this powerful sound is moving upwards. </li>
<li>It reaches a midway point and then seems to fall back as if the super hero is not quite equal to the task. </li>
<li>Then he tries again, but is now able to reach.</li>
<li>And hold onto the sought after goal. </li>
<li>Eventually we move onto the end, to the conclusion of this opening section where we end with this, a chord progression. </li>
<li>Remember, a syntax tells us we’ve got to go home. </li>
</ol>
<h1 id="How-Music-Works-it’s-Magic"><a href="#How-Music-Works-it’s-Magic" class="headerlink" title="How Music Works, it’s Magic"></a>How Music Works, it’s Magic</h1><h2 id="We’ve-All-Got-Rhythm"><a href="#We’ve-All-Got-Rhythm" class="headerlink" title="We’ve All Got Rhythm"></a>We’ve All Got Rhythm</h2><h3 id="Beat-Meter-and-Rhythm"><a href="#Beat-Meter-and-Rhythm" class="headerlink" title="Beat, Meter, and Rhythm"></a>Beat, Meter, and Rhythm</h3><h4 id="Rhythm"><a href="#Rhythm" class="headerlink" title="Rhythm"></a>Rhythm</h4><p>Well we’ve all got rhythm. Rhythm, along with melody, harmony, tone, color, texture and form, are the essential elements of music.<br><em>We’ll be exploring these elements in our next several sessions.</em><br>We’ll start with rhythm, because rhythm provides a framework, a framework in time in which sounds, pitches, can rest. </p>
<blockquote>
<p>“Classical music is music  without Africa”—— Brian Eno</p>
</blockquote>
<p>↓ ↓ ↓<br>music without a strong rhythmic profile → in most part he is right<br>but here’s an example of classical music in which there is a pretty clear beat<br>↓ ↓ ↓<br>Pomp and Circumstance March (Edward Elgar) → a graduation ceremony</p>
<p>classic music often has a suppressed beat, or the sound of the beat is weak</p>
<h4 id="Grouping-Beats"><a href="#Grouping-Beats" class="headerlink" title="Grouping Beats"></a>Grouping Beats</h4><p>In music, we group the endless flow of beats to make sense of them. </p>
<h4 id="Meter"><a href="#Meter" class="headerlink" title="Meter"></a>Meter</h4><p>When we group beats into regularly recurring units, we create meter in music. Meter is simply a pattern of regularly recurring beats. The lines that separate the groups are called bar lines or measure lines. </p>
<p>Each unit constitutes a bar or a measure.<br>Bar lines tend to make western music on a grid.<br>Other cultures don’t have this kind of grid, and as a result their music is a good deal more flexible. </p>
<p><strong> What are the two axes, or coordinates, of music? </strong><br>Pitch and duration (otherwise said, sound and time)</p>
<h3 id="Introduction-to-Musical-Notation"><a href="#Introduction-to-Musical-Notation" class="headerlink" title="Introduction to Musical Notation"></a>Introduction to Musical Notation</h3><p>Western music is the only musical culture that uses musical notation in a controlling way.<br>那么它们是怎么形成的呢？<br>公元900年左右，一群修道院里的音乐家们决定要把音乐记录在纸上（they try to capture and freeze sound onto paper）</p>
<p>The musical scribes are trying to represent the high and low flow of the music by graphic symbols.<br>They look like worms, squiggling across the page, but they’re called, these little aggregates are called neumes, neumes that represented a collection of pitches.<br>If the voice produced a high pitch, they wrote a visually higher symbol.<br>Eventually, these neumes were separated into individual discrete pitches called <strong>notae</strong>, hence our word note, a symbol for a pitch.<br>But these notes, originally, were only indicators of pitch, not duration. </p>
<p>……好难懂，上中文！<br>最开始的时候，只有全音符，后来出了二分音符，再后来出了四分音符，然后八分音符，十六分音符……越来越复杂</p>
<p>Musical notation signs placed higher vertically represent high sounding pitches. Lower signs mean lower sounding pitches.<br>Notation that gets increasingly darker with more flags on it represents that that music is moving faster up and down, left to right.<br>Darker means faster.<br><strong>Whiter Slower, Darker Faster</strong></p>
<h3 id="Rhythm-What-is-It"><a href="#Rhythm-What-is-It" class="headerlink" title="Rhythm: What is It?"></a>Rhythm: What is It?</h3><p>Rhythm is the organization of time into compelling patterns of long and short sounds. </p>
<p>duple meter → 强弱、强弱、强弱<br>triple meter → 强弱弱、强弱弱、强弱弱<br>一般都是通过伴奏声部来区分节拍的，有的时候并没有专门的演奏beat的人，这就要靠“听”来理解了。<br>Well, our ear, actually our brain, digest this complex of information and extrapolates it from it a basic structural framework underlying the music. So kinda platonic mental reality over arching structure that no one actually hears. No one actually sees but it’s there. </p>
<h3 id="Hearing-the-Downbeat-Feeling-the-Emotion"><a href="#Hearing-the-Downbeat-Feeling-the-Emotion" class="headerlink" title="Hearing the Downbeat, Feeling the Emotion"></a>Hearing the Downbeat, Feeling the Emotion</h3><p>bass(left hand)  melody(right hand)</p>
<h4 id="syncopation-切分音"><a href="#syncopation-切分音" class="headerlink" title="syncopation (切分音)"></a>syncopation (切分音)</h4><p>源自希腊词根syncope，意思是cut off, compress</p>
<h4 id="downbeat-强拍"><a href="#downbeat-强拍" class="headerlink" title="downbeat 强拍"></a>downbeat 强拍</h4><p>The most stressed and always the first sound of every measure. It’s called the downbeat among other reasons, because the conductor’s hand always goes down with the first beat in every measure.<br>Composers tell us where the downbeat is. Through duration, through accent, through range, and through change of harmony.</p>
<p>Most frequently, <strong>chord</strong>(和弦) changes come on the downbeat.</p>
<h3 id="Tempo-and-How-We-Feel-About-It"><a href="#Tempo-and-How-We-Feel-About-It" class="headerlink" title="Tempo (and How We Feel About It)"></a>Tempo (and How We Feel About It)</h3><p>Tempo - one last thing that has to do with duration in music</p>
<p>some tempos, such as Adagio and Andante, are often related to our bodies: Adagio can be compared to a slow heartbeat, while Andante is often compared to a slow walking tempo.</p>
<p>Cognitive psychologists have done studies that show that we respond emotionally much more favorably to music that is every so slightly off the beat, ever so slightly off pitch now and then. <em>Next time you listen to your favorite pop singer, just listen to how he or she can be slightly off pitch at one moment or slightly off tempo at one moment, and then pull it back on.</em> That moment of intentional imperfection of the beat or the pitch, that adds emotional intensity to our musical experience.</p>
<p>Predictably, reality is on the beat. Art is slightly off the beat, slightly off beat.<br>Art makes reality a lot more exciting.</p>
<h2 id="Melody-is-the-Star"><a href="#Melody-is-the-Star" class="headerlink" title="Melody is the Star"></a>Melody is the Star</h2><h3 id="What-is-Melody"><a href="#What-is-Melody" class="headerlink" title="What is Melody?"></a>What is Melody?</h3><p>When we listen to music, most of us hear music only as the melody. We don’t focus on the inner parts or the bass.<br>There may be an acoustical reason for this. High pitches may be more easy to perceive than lower and potentially murkier ones.</p>
<h3 id="Melodic-Notation-and-Scales"><a href="#Melodic-Notation-and-Scales" class="headerlink" title="Melodic Notation and Scales"></a>Melodic Notation and Scales</h3><h4 id="Notation"><a href="#Notation" class="headerlink" title="Notation"></a>Notation</h4><p>这一段讲的是五线谱是如何“进化”的</p>
<h4 id="Scale（音阶）"><a href="#Scale（音阶）" class="headerlink" title="Scale（音阶）"></a>Scale（音阶）</h4><p>Scale in music is simply a pattern of adjacent pitches going up or down the keyboard. Different cultures have different scales.<br>Much of Chinese music is written in a five note scale, so called pentatonic scale（五声音阶）.<br>Melodies in western music, are written in scales of seven pitches.</p>
<p> 为什么钢琴键长得这么不规律？<br> 要追溯到柏拉图和亚里士多德时代。They privileged mathematics above all else, and as a result, we end up with seven pitches in our scale.（看不懂这句）<br><strong>Why seven notes？</strong><br>因为古希腊时代的人非常着迷于用数学解释一切东西，尤其是音乐。但是视频里解释了半天，还是没弄懂为什么是一个八度内有七个音。早期的七个音和现代钢琴的白键相同，后来又插入了黑键的五个音。<br>We end up here within an octave, we end up with 12 equal pitches. But we still use this term of seven note scale, cuz we have seven notes within the scale of the major scale and seven notes within the scale of the minor scale.</p>
<h3 id="Major-and-Minor-Scales-大调音阶和小调音阶"><a href="#Major-and-Minor-Scales-大调音阶和小调音阶" class="headerlink" title="Major and Minor Scales (大调音阶和小调音阶)"></a>Major and Minor Scales (大调音阶和小调音阶)</h3><p>Octave duplication. The eighth note is the same as the first.</p>
<p>All major scales sound the same way because they have the same pattern of whole and half steps. All minor scales sound the same way for the same reason.</p>
<p>The major and minor scales involve two different sequences of intervals. Again, an interval of music is simply the distance from one pitch to another. In each major and minor scale there are five adjacent intervals that we call whole tones（全音） and two intervals of half tones（半音） or half steps.</p>
<p>大调音阶的全音、半音排列顺序是1-1-1/2-1-1-1-1/2<br>小调音阶的全音、半音排列顺序是1-1/2-1-1-1/2-1-1</p>
<h3 id="The-Chromatic-Scale-半音阶"><a href="#The-Chromatic-Scale-半音阶" class="headerlink" title="The Chromatic Scale (半音阶)"></a>The Chromatic Scale (半音阶)</h3><p>与在每个八度内仅仅使用七个音的大、小调音阶相反，半音阶需要使用全部12个音。<br>源于希腊词cbroma，意思是“色彩”——增加了五个音确实丰富了旋律的色彩。<br>所有12个音高的间距都是半音。</p>
<p>很少有作品是完全用半音阶写的，欧文·柏林的《白色的圣诞》是以半音阶开始随后进入大调。</p>
<p>Chromaticism adds richness, variety, and often tension to the music. Or it releases tension from the music.</p>
<h3 id="How-We-Feel-About-the-Music-Mode-and-Mood"><a href="#How-We-Feel-About-the-Music-Mode-and-Mood" class="headerlink" title="How We Feel About the Music: Mode and Mood"></a>How We Feel About the Music: Mode and Mood</h3><p>Scales in music provide an oral context for us. They tell us where we are in the melody. Oddly, most of the time when we listen to music, we aren’t aware of this scale. Particularly those two little half steps that are in the scale.<br>But a scale provides something akin to a global positioning system for us. A musical GPS for recognizing where we are in a melody.</p>
<p>Major happy, minor sad. Decided by culture instead of physics.<br>大调听上去是明亮、愉快和乐观的，而小调听起来则是暗淡、悲观甚至不祥的。<br>但是，在波兰发现了很多欢快的舞曲是用小调写的，所以这是nurture而不是nature。</p>
<h4 id="mode"><a href="#mode" class="headerlink" title="mode"></a>mode</h4><p>The first interval of a third in the scale is very important in determining the mode, major versus minor. If we change the mode from major to minor, we change the mood of the music entirely.<br>比如，插入一个降号，完成从大调到小调的转变。</p>
<h3 id="Melodic-Structure-The-Tonic"><a href="#Melodic-Structure-The-Tonic" class="headerlink" title="Melodic Structure: The Tonic"></a>Melodic Structure: The Tonic</h3><p>如何写出优秀的音乐作品呢？不是靠魔法，也没有公式或法则，但优秀的作品的确有一些共通(commonalities)之处。</p>
<p>All melodies have a sense of tonality(调性), they are organized around a primary pitch or tone. That primary pitch is called the tonic(主调).</p>
<p>All melodies begin and end on the tonic.</p>
<h3 id="Modulation-转调-Changing-the-Tonic-of-the-Key"><a href="#Modulation-转调-Changing-the-Tonic-of-the-Key" class="headerlink" title="Modulation(转调): Changing the Tonic (of the Key)"></a>Modulation(转调): Changing the Tonic (of the Key)</h3><p>很多流行音乐几乎从头到尾都只用一个调(朗朗上口呀)，但是古典音乐会变调，因为古典音乐都很长，如果一成不变很快就会让人听睡着的。<br>转调使音乐有了一种有力度的运动感。<br>转调很难被听出来。</p>
<p>一个流行音乐不变调的例子：《I get around》（The Beach Boys）但是到了结尾的时候给了一个deceptive cadence。</p>
<h3 id="Phrase-Structure-in-Music-乐句结构-Beethoven’s-Ode-to-Joy-欢乐颂"><a href="#Phrase-Structure-in-Music-乐句结构-Beethoven’s-Ode-to-Joy-欢乐颂" class="headerlink" title="Phrase Structure in Music(乐句结构): Beethoven’s Ode to Joy (欢乐颂)"></a>Phrase Structure in Music(乐句结构): Beethoven’s Ode to Joy (欢乐颂)</h3><p>前后呼应的两个句子被称为前句(antecedent)和后句(consequent phrases)<br>Antecedent and consequent phrase structure is endemic to melody in all Western music.<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-01_22:07:07.jpg" alt="2016-08-01_22:07:07.jpg"></p>
<p>然后分析了一下为什么《欢乐颂》是个名曲，曲调其实很简单，但是贝多芬的高明之处在哪里呢？<br>四个乐句依次分析：</p>
<ul>
<li>第二句在最后一小节同第一句稍有不同，降了一个音</li>
<li>第三个乐句末，展现了贝多芬的功力——<strong>syncopation</strong><br>This should, you would think, be a half note and this would start on the down beat over here, but he brings, in effect, the sound of the down beat in a beat early. Gives it a little bit of pep there at that particular point.</li>
<li>第四句是第二句的复制<br>All pieces, classical or pop, one way or the other end on the tonic.</li>
</ul>
<h2 id="The-Harmony-of-Music-and-Life"><a href="#The-Harmony-of-Music-and-Life" class="headerlink" title="The Harmony of Music (and Life)"></a>The Harmony of Music (and Life)</h2><h3 id="Harmony-A-Distinctly-Western-Phenomenon"><a href="#Harmony-A-Distinctly-Western-Phenomenon" class="headerlink" title="Harmony: A Distinctly Western Phenomenon"></a>Harmony: A Distinctly Western Phenomenon</h3><p>旋律在上，和声在下。和弦(chord)伴随和声在下。<br>和弦分为协和和弦(consonance)和不协和和弦(dissonance)，西方音乐中最基本的和弦是三和弦(triad)，由三个音高组成。<br>在所有的和弦中，最重要的是主音(tonic)，也就是主和弦；其次重要的是属和弦(dominant)，它总是建立在音阶的第五音上；在属和弦的下方是下属和弦(subdominant)，建立在音阶第四级音上。<br>和弦之间彼此“拉”着前进，最终全部倾向于强有力的主和弦。</p>
<h3 id="Chord-Progressions-和声进行-and-Cadences-终止"><a href="#Chord-Progressions-和声进行-and-Cadences-终止" class="headerlink" title="Chord Progressions (和声进行) and Cadences (终止)"></a>Chord Progressions (和声进行) and Cadences (终止)</h3><p>和弦的变化通常是为了配合旋律的，所以和弦的行进目的很明确，一个进行到下一个，朝着主和弦前进。<br>和声进行的尾声，我们称之为终止(cadence)。有一种称为伪终止(deceptive cadence)，让你误以为已经到了basic tonic，其实是把你代入到了其他地方。还有一种是pause cadence，音乐在某个地方暂停了，但又暗示我们该继续前进。</p>
<h3 id="Melody-and-Harmony-Working-Together"><a href="#Melody-and-Harmony-Working-Together" class="headerlink" title="Melody and Harmony Working Together"></a>Melody and Harmony Working Together</h3><p>老师演奏了一段普契尼的歌剧，讲的是Peter asked The Father to show mercy on him? 差不多是这样一个圣经故事吧。一边演奏一边提示，哪里是正格终止，哪里是伪终止等等，通过这段音乐来展现旋律和和声的配合，音乐之美。<br>当我们聆听一段音乐的时候，同时存在着三种聆听方式：</p>
<ul>
<li>analytical → what’s going on?</li>
<li>technical → how well are they doing it?</li>
<li>emotional → how do I feel about the music and the performance of it？</li>
</ul>
<h3 id="Major-and-Minor-Triads"><a href="#Major-and-Minor-Triads" class="headerlink" title="Major and Minor Triads"></a>Major and Minor Triads</h3><p>大三弦和小三弦，比如：CEG是大三弦，而CEbG就是小三弦，E降了半个音。<br>在音调上的差别也很明显，大三弦比小三弦音调更高，更有力度，有一种上升的感觉。<br>这次欣赏的是John Adams的《Black Gondolas》。</p>
<p>在贝多芬的《月光曲》中，他不是同时演奏三和弦，而是在时间上先后演奏，这种破碎的或断续的三和弦被称为琶音(arpeggio)，词根arpa源自意大利文，意思是”竖琴”，因为在竖琴演奏中，就是先后演奏和弦中的所有音而不是同时。<br>琶音听起来更加活跃。</p>
<h3 id="Hearing-the-Harmony"><a href="#Hearing-the-Harmony" class="headerlink" title="Hearing the Harmony"></a>Hearing the Harmony</h3><p>通常我们听音乐，听的都是旋律，那听和声就意味着要听base。<br>所有不断重复的和声、旋律、节奏，都称之为ostinato，这是一个意大利词，意思是固执的东西。<br>两首试听：《Duke of Earl》、《Canon》<br>第三首是Bach的乐曲，只有和声，没有旋律，而且不是重复的和声，Bach把这些和弦变成了琶音。100年后，有个法国作曲家，为这段和声加上了旋律，amazing！它俩配合得很棒。Bach的这部分手稿现藏于耶鲁大学的图书馆。</p>
<h1 id="The-Sound-of-Music"><a href="#The-Sound-of-Music" class="headerlink" title="The Sound of Music"></a>The Sound of Music</h1><h2 id="Tone-Color"><a href="#Tone-Color" class="headerlink" title="Tone Color"></a>Tone Color</h2><h3 id="Why-Do-Instruments-Sound-Differently-One-From-Another"><a href="#Why-Do-Instruments-Sound-Differently-One-From-Another" class="headerlink" title="Why Do Instruments Sound Differently, One From Another?"></a>Why Do Instruments Sound Differently, One From Another?</h3><p>这节课我听了两遍，写几个关键词吧<br>amplitude<br>overtone<br>pitch<br>volume<br>synthesizer<br>好了，把笔记写成这样是因为真的不知道该怎么写了。<br>为什么不同的乐器音色不同呢？因为他们的材质不同呀，这事声学上的概念了，这节课讲的是音乐上的东西，但是，说不定讲声学，我听得更懂些。</p>
<h3 id="Musorgsky-Makes-a-Wagon-Move-in-Music"><a href="#Musorgsky-Makes-a-Wagon-Move-in-Music" class="headerlink" title="Musorgsky Makes a Wagon Move in Music"></a>Musorgsky Makes a Wagon Move in Music</h3><p>Musorgsky是俄罗斯的作曲家。<br>怎么样让音乐展现出一幅图景呢？怎样让音乐动起来？<br>视频中放了Musorgsky的一首曲子，首先从最低音的乐器开始，然后到高音乐器最后再回到低音乐器。crescendo<br>低音代表的是长波长，持续的时间久，高音代表短波长，持续时间短。</p>
<h3 id="The-Four-Families-of-Instruments"><a href="#The-Four-Families-of-Instruments" class="headerlink" title="The Four Families of Instruments"></a>The Four Families of Instruments</h3><p>这一节请参看教材48页，非常详细。<br>四大乐器家族：弦乐、木管、铜管和打击乐<br>先说弦乐：</p>
<ul>
<li>小提琴violin</li>
<li>中提琴viola</li>
<li>大提琴cello</li>
<li>低音提琴double bass</li>
</ul>
<p>在Spotify上找了一下马友友的音乐，好听！</p>
<iframe src="https://embed.spotify.com/?uri=spotify%3Aalbum%3A3Nq0LrPYIXzWTPvXevNx0Z" width="300" height="180" frameborder="0" allowtransparency="true"></iframe>

<p>木管乐器：</p>
<ul>
<li>长笛flute</li>
<li>短笛piccolo</li>
<li>单簧管clarinet</li>
<li>低音单簧管bass clarinet</li>
<li>双簧管oboe</li>
<li>英国管English horn</li>
<li>大管bassoon</li>
<li>低音大管contrabassoon</li>
<li>萨克斯管saxophone</li>
</ul>
<p>铜管乐器：</p>
<ul>
<li>小号trumpet</li>
<li>长号trombone</li>
<li>法国号French horn</li>
<li>大号tuba</li>
</ul>
<p>打击乐percussion：<br>没有可以辨别的音高，主要是为其他乐器的音响增添色彩。</p>
<ul>
<li>定音鼓timpani</li>
<li>小军鼓snare drum</li>
<li>低音鼓bass drum</li>
<li>钹cymbals</li>
<li>木琴xylophone</li>
<li>钟琴glockenspiel</li>
<li>钢片琴celesta</li>
</ul>
<h3 id="Building-a-Symphony-Orchestra"><a href="#Building-a-Symphony-Orchestra" class="headerlink" title="Building a Symphony Orchestra"></a>Building a Symphony Orchestra</h3><p>请看这张图，慢慢欣赏：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-07_18:29:51.jpg" alt="2016-08-07_18:29:51.jpg"><br>指挥家的乐队总谱真的好复杂……<br>视频里耶鲁大学的本科生演奏了贝多芬的第三交响曲Eroica。</p>
<h2 id="Texture-Form-and-Style"><a href="#Texture-Form-and-Style" class="headerlink" title="Texture, Form, and Style"></a>Texture, Form, and Style</h2><p>在这一节里，充分感受到音乐和绘画、建筑等艺术之间的相似。</p>
<h3 id="Musical-Texture-音乐的织体"><a href="#Musical-Texture-音乐的织体" class="headerlink" title="Musical Texture (音乐的织体)"></a>Musical Texture (音乐的织体)</h3><p>分三种：</p>
<ul>
<li>单音 monophony</li>
<li>复调 polyphony (最复杂)</li>
<li>主调 homophony</li>
</ul>
<p>卡农(canon)是一个音乐术语，不是一个人也不是一首曲子的名字……</p>
<h3 id="Musical-Form-音乐曲式"><a href="#Musical-Form-音乐曲式" class="headerlink" title="Musical Form (音乐曲式)"></a>Musical Form (音乐曲式)</h3><p>作曲家运用一下四种手法创造曲式：</p>
<ul>
<li>陈述 statement</li>
<li>反复 repetition</li>
<li>对比 contrast</li>
<li>变奏 variation</li>
</ul>
<p><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-09_20:57:46.jpg" alt="2016-08-09_20:57:46.jpg"><br>曲式共有五种：</p>
<ul>
<li>分节歌形式 strophic form</li>
<li>主题与变奏 theme and variations</li>
<li>二部曲式 binary form</li>
<li>三部曲式 ternary form</li>
<li>回旋曲式 rondo form<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-09_21:29:51.jpg" alt="2016-08-09_21:29:51.jpg"><br>  音乐和建筑的相通之处：<br>  <img src="http://oapfne1kf.bkt.clouddn.com/2016-08-09_21:30:13.jpg" alt="2016-08-09_21:30:13.jpg"></li>
</ul>
<h3 id="Musical-Style"><a href="#Musical-Style" class="headerlink" title="Musical Style"></a>Musical Style</h3><p>八种风格，中间有重叠：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-09_21:37:42.jpg" alt="2016-08-09_21:37:42.jpg"></p>
<h1 id="Music-Back-in-the-Day"><a href="#Music-Back-in-the-Day" class="headerlink" title="Music Back in the Day"></a>Music Back in the Day</h1><h2 id="Music-in-the-Middle-Ages"><a href="#Music-in-the-Middle-Ages" class="headerlink" title="Music in the Middle Ages"></a>Music in the Middle Ages</h2><p>中世纪，西欧是当时的中心，法国是中心的中心。</p>
<blockquote>
<p>All art in the Middle Ages was functional art.<br>                《The Waning of the Middle Ages》</p>
</blockquote>
<p>比如所有的雕塑都有自己存在的目的，伟人的雕塑是为了彰显他们exemplary life，耶稣的雕塑是为了inspire the viewer to a greater devotion；音乐也是一样，赞美诗offered an opportunity for the reflection, of the message of Christ, the Christian message.</p>
<h3 id="Gregorian-Chant-格里高利圣咏"><a href="#Gregorian-Chant-格里高利圣咏" class="headerlink" title="Gregorian Chant (格里高利圣咏)"></a>Gregorian Chant (格里高利圣咏)</h3><p>也称素歌plainsong，是一大批无伴奏的声乐曲，它有一种无限的、来世的性质，没有规律没有节拍不能跟着拍手跺脚或跳舞，所有人都在同度齐唱，被认为是单音音乐，没有乐器伴奏。<br>音节式syllabic singing：歌词的每个音阶只唱一个或两个音<br>花腔式melismatic singing：歌词的一个音节唱很多音<br>有时，一个音节式段落会让位于花腔式段落。<br>圣咏的两个功用：<br>It is firstly a medium for a projection of sacred texts. And secondly a vehicle for spiritual contemplation.</p>
<blockquote>
<p>It communicated the message of the church, it allowed for the transmission of the word of god, as they the faithful understood the word and understood God. And it transmitted the theology, the message of the church. Chant then, was a medium for the broadcast, literally, the broadcast of the word, in a resonant acoustical environment, such as a stone or stucco church, one can project, one can impel a text better.<br>Chant also allowed for a period of reflection upon the subject of the preceding reading. A sermon or a passage of scripture would be followed by a reflective chant. Time for contemplation. This music for reflection upon a preceding religious theme, was generally melismatic. Now melismatic chant is one in which there are many notes for just one syllable of text. And in melismatic chant, the range tends to be a lot broader, it’s more virtuosic. So simple chanting for readings, that’s syllabic chant. More complex chant for moments of personal feeling and reflection, that’s melismatic chant.</p>
</blockquote>
<h3 id="Hildergard-Von-Bingen"><a href="#Hildergard-Von-Bingen" class="headerlink" title="Hildergard Von Bingen"></a>Hildergard Von Bingen</h3><p>宾根的希德加是格里高利圣咏最卓越的贡献者之一<br>她在自己的一生中表现出作为剧作家、诗人、音乐家、生物学家、药理学家和幻想家的卓越才智和想象力。<br>事实上，她才是第一位“文艺复兴的人”。</p>
<h3 id="早期的复调音乐"><a href="#早期的复调音乐" class="headerlink" title="早期的复调音乐"></a>早期的复调音乐</h3><p>以法国巴黎和兰斯的圣母院最为出名。<br>其中的代表人物是纪尧姆·德·马肖，他既是作曲家也是抒情诗人，最著名的作品是《圣母弥撒曲》。</p>
<h3 id="宫廷舞蹈音乐"><a href="#宫廷舞蹈音乐" class="headerlink" title="宫廷舞蹈音乐"></a>宫廷舞蹈音乐</h3><p>和宗教音乐相对应的就是世俗音乐了secular music。<br>当时的流行音乐都是一些不识字的人创作的，因为识字的是教士他们都去作圣咏了，所以流行音乐被创作了但是不能记录下来。<br>很好，这节课光顾着看视频了，什么都没记下来，来不及呀。视频里是通过一张张中世纪的插图来讲解音乐的，老师请来了他的好朋友，另一位老师，两位都超级有魅力，互相斗外语(没说法语吧应该，我没听到呀，千万别是我没听懂)。另外，要被艺术之美感动哭了。<br>参考教材P85.</p>
<h2 id="Music-in-the-Renaissance"><a href="#Music-in-the-Renaissance" class="headerlink" title="Music in the Renaissance"></a>Music in the Renaissance</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我用的教材是Craig Wright的&lt;a href=&quot;https://www.amazon.cn/%E8%81%86%E5%90%AC%E9%9F%B3%E4%B9%90-%E5%85%8B%E9%9B%B7%E6%A0%BC%E2%80%A2%E8%8E%B1%E7%89%B9/dp/B007TQNEYW/ref=sr_1_1?ie=UTF8&amp;amp;qid=1470288686&amp;amp;sr=8-1&amp;amp;keywords=%E8%81%86%E5%90%AC%E9%9F%B3%E4%B9%90&quot;&gt;《聆听音乐》&lt;/a&gt;，Craig Wright就是这门课的老师，老先生真是儒雅有风度。不过，他推荐的是：&lt;a href=&quot;https://www.amazon.com/Essential-Listening-Digital-Downloads-Printed/dp/1285856791/ref=sr_1_2?ie=UTF8&amp;amp;qid=1470288731&amp;amp;sr=8-2&amp;amp;keywords=CRAIG+WRIGHT&quot;&gt;《The Essential Listening to Music》&lt;/a&gt;，但是这本没有中文版，不太方便使用。&lt;/p&gt;
&lt;p&gt;7月20日开始记笔记，断断续续更新中。&lt;br&gt;刚开始扒英文字幕当笔记，很快就发现，这些英文我是不会再看第二眼了，于是改成中文，但笔记量也因此少了很多。第三周开始，感觉记笔记已经有点困难了，担心会半途而废，啊，笔记可以少记，课一定要听完呀！&lt;br&gt;
    
    </summary>
    
    
      <category term="coursera" scheme="http://yibeichen.me/tags/coursera/"/>
    
      <category term="music" scheme="http://yibeichen.me/tags/music/"/>
    
  </entry>
  
  <entry>
    <title>Hexo插件测试 (未完)</title>
    <link href="http://yibeichen.me/2016/08/04/Test-for-Plugins/"/>
    <id>http://yibeichen.me/2016/08/04/Test-for-Plugins/</id>
    <published>2016-08-04T14:34:12.000Z</published>
    <updated>2016-08-04T14:45:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>测试了几个插件：<br>0804(网易云音乐代码嵌套) 0730(Spotify代码嵌套)</p>
<p>玩心起了就折腾一下，不过，玩物总会丧志。<br><a id="more"></a></p>
<h1 id="音乐插件"><a href="#音乐插件" class="headerlink" title="音乐插件"></a>音乐插件</h1><h2 id="代码嵌套"><a href="#代码嵌套" class="headerlink" title="代码嵌套"></a>代码嵌套</h2><h3 id="Spotify"><a href="#Spotify" class="headerlink" title="Spotify"></a>Spotify</h3><p>网站提供的代码如下：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="selector-tag">iframe</span> src=<span class="string">"https://embed.spotify.com/?uri=spotify%3Atrack%3A3v8PlUFGQQDBIk1J86waCo"</span> <span class="attribute">width</span>=<span class="string">"300"</span> height=<span class="string">"380"</span> frameborder=<span class="string">"0"</span> allowtransparency=<span class="string">"true"</span>&gt;</div><div class="line">&lt;/iframe&gt;</div></pre></td></tr></table></figure></p>
<p>效果如图：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-07-30_14:48:19.jpg" alt="2016-07-30_14:48:19.jpg"><br>没开VPN是显示不出来的。<br>看着挺美，但是问题在于，点击会跳转到Spotify官网，不能当前页播放。</p>
<h3 id="网易云音乐"><a href="#网易云音乐" class="headerlink" title="网易云音乐"></a>网易云音乐</h3><p>打开网页版网易云音乐，进入歌曲播放页面，可以看到代码嵌套，可以设置播放框宽度，以及是否自动播放，代码如下：<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;iframe frameborder=<span class="string">"no"</span> <span class="built_in">border</span>=<span class="string">"0"</span> marginwidth=<span class="string">"0"</span> marginheight=<span class="string">"0"</span> <span class="built_in">width</span>=<span class="string">"330"</span> <span class="built_in">height</span>=<span class="string">"86"</span> src=<span class="string">"http://music.163.com/outchain/player?type=2&amp;id=63875&amp;auto=1&amp;height=66"</span>&gt;&lt;/iframe&gt;</div></pre></td></tr></table></figure></p>
<p>效果如图：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-08-04_22:43:21.jpg" alt="2016-08-04_22:43:21.jpg"><br>体验请戳→<a href="http://yibeichen.me/2016/08/04/An-Illusion/">《黄粱一梦》</a><br>暂时不知道怎么改宽度。<br>颜值不敌Spotify，但是还算实用。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;测试了几个插件：&lt;br&gt;0804(网易云音乐代码嵌套) 0730(Spotify代码嵌套)&lt;/p&gt;
&lt;p&gt;玩心起了就折腾一下，不过，玩物总会丧志。&lt;br&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://yibeichen.me/tags/Hexo/"/>
    
      <category term="plugin" scheme="http://yibeichen.me/tags/plugin/"/>
    
  </entry>
  
  <entry>
    <title>黄粱一梦</title>
    <link href="http://yibeichen.me/2016/08/04/An-Illusion/"/>
    <id>http://yibeichen.me/2016/08/04/An-Illusion/</id>
    <published>2016-08-04T13:24:20.000Z</published>
    <updated>2016-08-04T14:21:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>“黄粱一梦二十年”，应该是陈升的《牡丹亭》，网易云音乐找不到这首，只有一首《黄粱一梦二十年》，都行都行，有这句就好。</p>
<p>哇塞，我怎么想到了这么一个伤春悲秋的题目？其实，跟一梦黄粱一点关系都没有，是某件事情突然让我想到了”illusion”这个词，再一想，中文里最门当户对的词语就是“黄粱一梦”啦。</p>
<p>为了这个题目，特意去搜索了一下怎么给hexo添加音乐，原来这么简单！之前我是有多懒啊天。<br><a id="more"></a></p>
<p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=63875&auto=1&height=66"></iframe><br>（为什么播放框被拉这么长，好难看。）</p>
<p>事情是这样的。</p>
<p>我现在用的是11寸的Air，好小啊！<br>当时买的时候，根本没有考虑过要做编程，只是想着方便携带，方便码字。<br>结果呢，现在开始敲代码了。<br>想象一下，这么小的屏幕，一边放编辑器，一边放浏览器，天哪，根本摆不下。<br>默默想起当年某厂的前端同事们，一人都是俩显示屏，一横一竖，帅呆了。竖着的那个专门拿来敲代码，横着的那个查看渲染效果，每次从他们的工位旁经过(每次都是故意绕路)，看着一行行五颜六色的代码刷刷刷地落下来，羡慕得不行。</p>
<p>自然是心痒了，想买个外接显示屏。<br>上网比较了一下，Dell的某系列真是太棒了！具体参数就不说了，因为我也没弄懂，光顾着发痴了。总之就是理想中的爱人呀，颜值才华俱佳，然而最便宜也要2000+，什么27寸5000+的我就当没看见。</p>
<p>某天跟我妈小小地试探了一下，结果被无情轰回来，想都别想。<br>怎么办，我是轻易说放弃的人吗？不买就不买嘛！哼！我拿iPad当外接显示屏。<br>一番比较之后，选中了duet。这个app实在太精明了，Mac版免费，但iPad版付费，怎么办？1000块我没有，难道还没有100块吗，于是花了123买了它。<br>从此呢，就变成Air敲代码，iPad查看网页效果。</p>
<p>下午发了一门新的课程笔记，结果发现课程名太长，发出来折行了，不好看，动了折腾NexT页面宽度的心思。<br>把宽度从700px调到了900px。<br>iPad太小了，看不出效果，于是把Chrome拽回到了Air上。<br>天哪！<br>怎么这么美，这么宽敞，这么大屏，一瞬间感觉我的Air从11寸变成了27寸。</p>
<p>很好。<br>很快就反应过来，这是幻觉，心理学上肯定对此有一整套的解释和论证，反正不是什么新鲜事。<br>不过呢，既然我没钱买外接显示屏，但又真的非常需要一个，用这种方式欺骗一下自己也是可以的，视觉上的假象大概是可以安慰一下大脑中的神经吧。</p>
<p>所以，就从“幻觉”到了“illusion”，又到了“黄粱一梦”，然后是“黄粱一梦二十年”，最后就是“陈升和《牡丹亭》”。</p>
<p>这篇文章好像没什么用，是谁说的来着，既然要在互联网上写东西，拜托写点有用的吧。反正我不同意这句，因为我常写些没用的，总不能自己打脸吧。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;“黄粱一梦二十年”，应该是陈升的《牡丹亭》，网易云音乐找不到这首，只有一首《黄粱一梦二十年》，都行都行，有这句就好。&lt;/p&gt;
&lt;p&gt;哇塞，我怎么想到了这么一个伤春悲秋的题目？其实，跟一梦黄粱一点关系都没有，是某件事情突然让我想到了”illusion”这个词，再一想，中文里最门当户对的词语就是“黄粱一梦”啦。&lt;/p&gt;
&lt;p&gt;为了这个题目，特意去搜索了一下怎么给hexo添加音乐，原来这么简单！之前我是有多懒啊天。&lt;br&gt;
    
    </summary>
    
    
      <category term="nonsense" scheme="http://yibeichen.me/tags/nonsense/"/>
    
  </entry>
  
  <entry>
    <title>一个玩笑之一个变量的线性回归</title>
    <link href="http://yibeichen.me/2016/08/03/A-Joke/"/>
    <id>http://yibeichen.me/2016/08/03/A-Joke/</id>
    <published>2016-08-03T04:15:16.000Z</published>
    <updated>2016-08-04T14:02:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>抽空写两句玩笑话，不过，我的笑点素来很奇怪，可能一点也不好笑。<br><a id="more"></a><br>今天学ML，讲到linear regression with one variable，直译就是“一个变量的线性回归”。</p>
<p>笔记里写下这几个字的时候，觉得有点不对劲，脑洞一大就会想到“一个女人一生中的二十四个小时”、“一个陌生女子的来信”、“一个村庄里的中国”、“一桩事先张扬的凶杀案”……</p>
<p>这联想到的都是什么呀？</p>
<p>这可是严肃的数学问题！</p>
<p>查了一下，对应的术语是“一元线性回归”。砰，瞬间回到高中课堂：“同学们，今天我们来讲一元二次方程/一元二次函数/一元二次不等式……”这才对嘛，这才是一个正确的名称对应一个正当的联想。</p>
<p>好吧，看看“一个变量的”和“一元”，越看越觉得前面那个实在太蠢了，可是又好萌呀。就好比，有个小学生吭哧吭哧说了一长串，你用一个成语，四个字，就概括了意思。干净，利落，帅气！可是就没有第一个萌呀。想象一下那个小学生丰富的面部表情，一边说上句一边歪着头想下一句，一只眼看着你，一只眼往回收，疯狂运转脑细胞。多可爱呀。</p>
<p>有一回夜间散步，自言自语，为白天跟别人争论的事情气愤，他怎么能那么想呢。想了一大串安慰自己不要生气的话，人家又不是我呀，怎么能懂，越想越激动，走路都要跳起来了。突然，有几个字掉下来，“夏虫不可语冰”。天哪，古人真是神，就这么六个字，完全破开了心结。不过，倒也觉得有一盆凉水泼下来，瞬间就冷静了，被一股理性击中，从蹦蹦跳跳的小学生变成了成年人。<br>真是好无聊，一下子就严肃了起来，刚才虽然蠢，可是有孩子气的可爱呀。</p>
<p>“一个变量的线性回归”，越想越觉得萌。</p>
<hr>
<p>我应该建个“分类”页，开一栏叫做“胡言乱语”，这篇就摆第一个。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;抽空写两句玩笑话，不过，我的笑点素来很奇怪，可能一点也不好笑。&lt;br&gt;
    
    </summary>
    
    
      <category term="nonsense" scheme="http://yibeichen.me/tags/nonsense/"/>
    
  </entry>
  
  <entry>
    <title>记一次失败的尝试</title>
    <link href="http://yibeichen.me/2016/07/31/A-Failed-Try/"/>
    <id>http://yibeichen.me/2016/07/31/A-Failed-Try/</id>
    <published>2016-07-31T08:21:07.000Z</published>
    <updated>2016-08-04T13:18:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章是关于为Hexo添加站内搜索的，很不幸，失败了，所以这篇文章也没有什么参考价值，引以为戒好了。<br><a id="more"></a><br>尝试了两种方法：Swiftype Search 和Local Search，严格说来也不能算失败，但是结果实在不能令人满意。</p>
<p>一个一个说：</p>
<h1 id="Swiftype"><a href="#Swiftype" class="headerlink" title="Swiftype"></a>Swiftype</h1><p>分两步：</p>
<h2 id="Swiftype内设置"><a href="#Swiftype内设置" class="headerlink" title="Swiftype内设置"></a>Swiftype内设置</h2><ul>
<li>注册账号</li>
<li>添加搜索引擎（官网上有清晰的引导）</li>
<li>自定义搜索引擎样式</li>
<li>获取key</li>
</ul>
<h2 id="Hexo内设置"><a href="#Hexo内设置" class="headerlink" title="Hexo内设置"></a>Hexo内设置</h2><p>在站点_config.yml添加 <code>Swiftype_key: yourswiftypekey</code></p>
<p>按理说这样设置以后就ok了，结果网站的menu变成了这样：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-07-31_16:30:14.jpg" alt="2016-07-31_16:30:14.jpg"><br>WHAT!!!<br>为什么会有两个搜索！TELL ME WHY!!!</p>
<p>其实最开始是没有搜索框的，只有“搜索”这个菜单，为了把文字换成搜索框，我就去折腾NexT的配置文件了，找到一个Swiftype.swig,把里面的代码换成了网站提供的，事实上没有什么差别，唯一不同的地方就是swig本来是没有key的。然后，网页就同时出现了搜索框和“搜索”字样。</p>
<p>好了，我现在不想要搜索框了，只要一个“搜索”就ok啊，然而，无论我怎么改，把swig改回去，在Swiftype里把engine删了重设又删又重设，都没有一点用。</p>
<p>算了算了，我不要这个了，改成Local Search，OK？</p>
<h1 id="Local-Search"><a href="#Local-Search" class="headerlink" title="Local Search"></a>Local Search</h1><p>安装插件<br><code>$ npm install hexo-generator-search --save</code></p>
<p>在站点的_config.yml中增加<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">search:</div><div class="line">  path: search.<span class="keyword">xml</span></div><div class="line">  <span class="title">field</span>: post</div></pre></td></tr></table></figure></p>
<p>效果如图：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-07-31_16:47:55.jpg" alt="2016-07-31_16:47:55.jpg"></p>
<p>搜索框长这么难看就算了，搜索结果还不精确。似乎只能抓取首页的，其他页面比如“工具”的内容就没办法检索到，以cheatsheet为例：<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-07-31_16:51:13.jpg" alt="2016-07-31_16:51:13.jpg"></p>
<p>样式我不会改，可能要修改node_modules内的文件，看不懂。</p>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>好了，就是这样一个悲伤的故事。<br>我只想要一个简单实用又好看（要求高？）的搜索啊！</p>
<p>折腾了整整一天，竟然就是这个结果。</p>
<hr>
<p>妹妹：姐姐你不休息一会呀？<br>我：玩的时候为什么要休息？<br>妹妹：你不是在工作吗？<br>我：我没在工作，我在玩……</p>
<p>玩物丧志，懂？</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章是关于为Hexo添加站内搜索的，很不幸，失败了，所以这篇文章也没有什么参考价值，引以为戒好了。&lt;br&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://yibeichen.me/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>7 Steps to Mastering Machine Learning With Python</title>
    <link href="http://yibeichen.me/2016/07/30/Seven-Steps-Machine-Learning-Python/"/>
    <id>http://yibeichen.me/2016/07/30/Seven-Steps-Machine-Learning-Python/</id>
    <published>2016-07-30T09:49:46.000Z</published>
    <updated>2016-07-30T10:22:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>8月份准备学习machine learning，试了一下用Google搜索“machine learning tutorial”，找到了一篇不错的文章，拿来存着。<br><a id="more"></a><br>原文链接：<a href="http://www.kdnuggets.com/2015/11/seven-steps-machine-learning-python.html" target="_blank" rel="external">http://www.kdnuggets.com/2015/11/seven-steps-machine-learning-python.html</a></p>
<blockquote>
<p>There are many Python machine learning resources freely available online. Where to begin? How to proceed? Go from zero to Python machine learning hero in 7 steps!<br><strong>By <a href="http://www.kdnuggets.com/author/matt-mayo" target="_blank" rel="external">Matthew Mayo</a>, KDnuggets.</strong></p>
</blockquote>
<p>Getting started. Two of the most de-motivational words in the English language. The first step is often the hardest to take, and when given too much choice in terms of direction it can often be debilitating.</p>
<p>Where to begin?</p>
<p>This post aims to take a newcomer from minimal knowledge of machine learning in Python all the way to knowledgeable practitioner in 7 steps, all while using freely available materials and resources along the way. The prime objective of this outline is to help you wade through the numerous free options that are available; there are many, to be sure, but which are the best? Which complement one another? What is the best order in which to use selected resources?</p>
<p>Moving forward, I make the assumption that you are not an expert in:</p>
<ul>
<li>Machine learning</li>
<li>Python</li>
<li>Any of Python’s machine learning, scientific computing, or data analysis libraries</li>
</ul>
<p>It would probably be helpful to have some basic understanding of one or both of the first 2 topics, but even that won’t be necessary; some extra time spent on the earlier steps should help compensate.</p>
<h1 id="Step-1-Basic-Python-Skills"><a href="#Step-1-Basic-Python-Skills" class="headerlink" title="Step 1: Basic Python Skills"></a>Step 1: Basic Python Skills</h1><p>If we intend to leverage Python in order to perform machine learning, having some base understanding of Python is crucial. Fortunately, due to its widespread popularity as a general purpose programming language, as well as its adoption in both scientific computing and machine learning, coming across beginner’s tutorials is not very difficult. Your level of experience in both Python and programming in general are crucial to choosing a starting point.</p>
<p>First, you need Python installed. Since we will be using scientific computing and machine learning packages at some point, I suggest that you <a href="http://docs.continuum.io/anaconda/install" target="_blank" rel="external">install Anaconda</a>. It is an industrial-strength Python implementation for Linux, OSX, and Windows, complete with the required packages for machine learning, including numpy, scikit-learn, and matplotlib. It also includes iPython Notebook, an interactive environment for many of our tutorials. I would suggest Python 2.7, for no other reason than it is still the dominant installed version.</p>
<p>learn-pythonIf you have no knowledge of programming, my suggestion is to start with the following free online book, then move on to the subsequent materials:</p>
<ul>
<li><a href="http://learnpythonthehardway.org/book/" target="_blank" rel="external">Python The Hard Way</a> by Zed A. Shaw</li>
</ul>
<p>If you have experience in programming but not with Python in particular, or if your Python is elementary, I would suggest one or both of the following:</p>
<ul>
<li><a href="https://www.youtube.com/playlist?list=PLfZeRfzhgQzTMgwFVezQbnpc1ck0I6CQl" target="_blank" rel="external">Google Developers Python Course </a>(highly recommended for visual learners)</li>
<li><a href="http://www.engr.ucsb.edu/~shell/che210d/python.pdf" target="_blank" rel="external">An Introduction to Python for Scientific Computing</a> (from UCSB Engineering) by M. Scott Shell (a great scientific Python intro ~60 pages)</li>
</ul>
<p>And for those looking for a 30 minute crash course in Python, here you go:</p>
<ul>
<li><a href="http://learnxinyminutes.com/docs/python/" target="_blank" rel="external">Learn X in Y Minutes (X = Python)</a></li>
</ul>
<p>Of course, if you are an experienced Python programmer you will be able to skip this step. Even if so, I suggest keeping the very readable <a href="https://www.python.org/doc/" target="_blank" rel="external">Python documentation</a> handy.</p>
<h1 id="Step-2-Foundational-Machine-Learning-Skills"><a href="#Step-2-Foundational-Machine-Learning-Skills" class="headerlink" title="Step 2: Foundational Machine Learning Skills"></a>Step 2: Foundational Machine Learning Skills</h1><p>KDnuggets’ own Zachary Lipton has pointed out that there is a lot of variation in what people consider a “data scientist.” This actually is a reflection of the field of machine learning, since much of what data scientists do involves using machine learning algorithms to varying degrees. Is it necessary to intimately understand kernel methods in order to efficiently create and gain insight from a support vector machine model? Of course not. Like almost anything in life, required depth of theoretical understanding is relative to practical application. Gaining an intimate understanding of machine learning algorithms is beyond the scope of this article, and generally requires substantial amounts of time investment in a more academic setting, or via intense self-study at the very least.</p>
<p>The good news is that you don’t need to possess a PhD-level understanding of the theoretical aspects of machine learning in order to practice, in the same manner that not all programmers require a theoretical computer science education in order to be effective coders.</p>
<p>Andrew Ng’s Coursera course often gets rave reviews for its content; my suggestion, however, is to browse the course notes compiled by a former student of the online course’s previous incarnation. Skip over the Octave-specific notes (a Matlab-like language unrelated to our Python pursuits). Be warned that these are not “official” notes, but do seem to capture the relevant content from Andrew’s course material. Of course, if you have the time and interest, now would be the time to take <a href="https://www.coursera.org/learn/machine-learning" target="_blank" rel="external">Andrew Ng’s Machine Learning course on Coursera</a>.</p>
<ul>
<li><a href="http://www.holehouse.org/mlclass/" target="_blank" rel="external">Unofficial Andrew Ng course notes</a></li>
</ul>
<p>There all sorts of video lectures out there if you prefer, alongside Ng’s course mentioned above. I’m a fan of Tom Mitchell, so here’s a link to his recent lecture videos (along with Maria-Florina Balcan), which I find particularly approachable:</p>
<ul>
<li><a href="http://www.cs.cmu.edu/~ninamf/courses/601sp15/lectures.shtml" target="_blank" rel="external">Tom Mitchell Machine Learning Lectures</a></li>
</ul>
<p>You don’t need all of the notes and videos at this point. A valid strategy involves moving forward to particular exercises below, and referencing applicable sections of the above notes and videos when appropriate. For example, when you come across an exercise implementing a regression model below, read the appropriate regression section of Ng’s notes and/or view Mitchell’s regression videos at that time.</p>
<h1 id="Step-3-Scientific-Python-Packages-Overview"><a href="#Step-3-Scientific-Python-Packages-Overview" class="headerlink" title="Step 3: Scientific Python Packages Overview"></a>Step 3: Scientific Python Packages Overview</h1><p>Alright. We have a handle on Python programming and understand a bit about machine learning. Beyond Python there are a number of open source libraries generally used to facilitate practical machine learning. In general, these are the main so-called scientific Python libraries we put to use when performing elementary machine learning tasks (there is clearly subjectivity in this):</p>
<ul>
<li><a href="http://www.numpy.org/" target="_blank" rel="external">numpy</a> - mainly useful for its N-dimensional array objects</li>
<li><a href="http://pandas.pydata.org/" target="_blank" rel="external">pandas</a> - Python data analysis library, including structures such as dataframes</li>
<li><a href="http://matplotlib.org/" target="_blank" rel="external">matplotlib</a> - 2D plotting library producing publication quality figures</li>
<li><a href="http://scikit-learn.org/stable/" target="_blank" rel="external">scikit-learn</a> - the machine learning algorithms used for data analysis and data mining tasks</li>
</ul>
<p>A good approach to learning these is to cover this material:</p>
<ul>
<li><a href="http://www.scipy-lectures.org/" target="_blank" rel="external">Scipy Lecture Notes</a> by Gaël Varoquaux, Emmanuelle Gouillart, and Olav Vahtras</li>
</ul>
<p>This pandas tutorial is good, and to the point:</p>
<ul>
<li><a href="http://pandas.pydata.org/pandas-docs/stable/10min.html" target="_blank" rel="external">10 Minutes to Pandas</a></li>
</ul>
<p>You will see some other packages in the tutorials below, including, for example, Seaborn, which is a data visualization library based on matplotlib. The aforementioned packages are (again, subjectively) the core of a wide array of machine learning tasks in Python; however, understanding them should let you adapt to additional and related packages without confusion when they are referenced in the following tutorials.</p>
<h1 id="Step-4-Getting-Started-with-Machine-Learning-in-Python"><a href="#Step-4-Getting-Started-with-Machine-Learning-in-Python" class="headerlink" title="Step 4: Getting Started with Machine Learning in Python"></a>Step 4: Getting Started with Machine Learning in Python</h1><p>Python. Check.<br>Machine learning fundamentals. Check.<br>Numpy. Check.<br>Pandas. Check.<br>Matplotlib. Check.</p>
<p>The time has come. Let’s start implementing machine learning algorithms with Python’s de facto standard machine learning library, scikit-learn.</p>
<p>Many of the following tutorials and exercises will be driven by the iPython (Jupyter) Notebook, which is an interactive environment for executing Python. These iPython notebooks can optionally be viewed online or downloaded and interacted with locally on your own computer.</p>
<ul>
<li><a href="http://cs231n.github.io/ipython-tutorial/" target="_blank" rel="external">iPython Notebook Overview</a> from Stanford</li>
</ul>
<p>Also note that the tutorials below are from a number of online sources. All Notebooks have been attributed to the authors; if, for some reason, you find that someone has not been properly credited for their work, <a href="https://twitter.com/mattmayo13" target="_blank" rel="external">please let me know</a> and the situation will be rectified ASAP. In particular, I would like to tip my hat to <a href="http://www.astro.washington.edu/users/vanderplas/" target="_blank" rel="external">Jake VanderPlas</a>, <a href="http://www.randalolson.com/" target="_blank" rel="external">Randal Olson</a>, <a href="http://donnemartin.com/" target="_blank" rel="external">Donne Martin</a>, <a href="https://twitter.com/justmarkham" target="_blank" rel="external">Kevin Markham</a>, and <a href="http://www.colinraffel.com/" target="_blank" rel="external">Colin Raffel</a> for their fantastic freely-available resources.</p>
<p>Our first tutorials for getting our feet wet with scikit-learn follow. I suggest doing all of these in order before moving to the following steps.</p>
<p>A general introduction to scikit-learn, Python’s most-used general purpose machine learning library, covering the k-nearest neighbors algorithm:</p>
<ul>
<li><a href="http://nbviewer.ipython.org/github/donnemartin/data-science-ipython-notebooks/blob/master/scikit-learn/scikit-learn-intro.ipynb" target="_blank" rel="external">An Introduction to scikit-learn</a> by Jake VanderPlas</li>
</ul>
<p>A more in-depth and expanded introduction, including a starter project with a well-known dataset from start to finish:</p>
<ul>
<li><a href="http://nbviewer.ipython.org/github/rhiever/Data-Analysis-and-Machine-Learning-Projects/blob/master/example-data-science-notebook/Example%20Machine%20Learning%20Notebook.ipynb" target="_blank" rel="external">Example Machine Learning Notebook</a> by Randal Olson</li>
</ul>
<p>A focus on strategies for evaluating different models in scikit-learn, covering train/test dataset splits:</p>
<ul>
<li><a href="https://github.com/justmarkham/scikit-learn-videos/blob/master/05_model_evaluation.ipynb" target="_blank" rel="external">Model Evaluation</a> by Kevin Markham</li>
</ul>
<h1 id="Step-5-Machine-Learning-Topics-with-Python"><a href="#Step-5-Machine-Learning-Topics-with-Python" class="headerlink" title="Step 5: Machine Learning Topics with Python"></a>Step 5: Machine Learning Topics with Python</h1><p>With a foundation having been laid in scikit-learn, we can move on to some more in-depth explorations of the various common, and useful, algorithms. We start with k-means clustering, one of the most well-known machine learning algorithms. It is a simple and often effective method for solving unsupervised learning problems:</p>
<ul>
<li><a href="https://github.com/jakevdp/sklearn_pycon2015/blob/master/notebooks/04.2-Clustering-KMeans.ipynb" target="_blank" rel="external">k-means Clustering</a> by Jake VanderPlas</li>
</ul>
<p>Next, we move back toward classification, and take a look at one of the most historically popular classification methods:</p>
<ul>
<li><a href="http://thegrimmscientist.com/2014/10/23/tutorial-decision-trees/" target="_blank" rel="external">Decision Trees</a> via <a href="http://thegrimmscientist.com/" target="_blank" rel="external">The Grimm Scientist</a></li>
</ul>
<p>From classification, we look at continuous numeric prediction:</p>
<ul>
<li><a href="http://nbviewer.ipython.org/github/donnemartin/data-science-ipython-notebooks/blob/master/scikit-learn/scikit-learn-linear-reg.ipynb" target="_blank" rel="external">Linear Regression</a> by Jake VanderPlas</li>
</ul>
<p>We can then leverage regression for classification problems, via logistic regression:</p>
<ul>
<li><a href="http://nbviewer.ipython.org/github/justmarkham/gadsdc1/blob/master/logistic_assignment/kevin_logistic_sklearn.ipynb" target="_blank" rel="external">Logistic Regression</a> by Kevin Markham</li>
</ul>
<h1 id="Step-6-Advanced-Machine-Learning-Topics-with-Python"><a href="#Step-6-Advanced-Machine-Learning-Topics-with-Python" class="headerlink" title="Step 6: Advanced Machine Learning Topics with Python"></a>Step 6: Advanced Machine Learning Topics with Python</h1><p>We’ve gotten our feet wet with scikit-learn, and now we turn our attention to some more advanced topics. First up are support vector machines, a not-necessarily-linear classifier relying on complex transformations of data into higher dimensional space.</p>
<ul>
<li><a href="https://github.com/jakevdp/sklearn_pycon2015/blob/master/notebooks/03.1-Classification-SVMs.ipynb" target="_blank" rel="external">Support Vector Machines</a> by Jake VanderPlas</li>
</ul>
<p>Next, random forests, an ensemble classifier, are examined via a Kaggle Titanic Competition walk-through:</p>
<ul>
<li><a href="https://github.com/jakevdp/sklearn_pycon2015/blob/master/notebooks/03.1-Classification-SVMs.ipynb" target="_blank" rel="external">Kaggle Titanic Competition (with Random Forests)</a> by Donne Martin</li>
</ul>
<p>Dimensionality reduction is a method for reducing the number of variables being considered in a problem. Principal Component Analysis is a particular form of unsupervised dimensionality reduction:</p>
<ul>
<li><a href="https://github.com/jakevdp/sklearn_pycon2015/blob/master/notebooks/04.1-Dimensionality-PCA.ipynb" target="_blank" rel="external">Dimensionality Reduction</a> by Jake VanderPlas</li>
</ul>
<p>Before moving on to the final step, we can take a moment to consider that we have come a long way in a relatively short period of time.</p>
<p>Using Python and its machine learning libraries, we have covered some of the most common and well-known machine learning algorithms (k-nearest neighbors, k-means clustering, support vector machines), investigated a powerful ensemble technique (random forests), and examined some additional machine learning support tasks (dimensionality reduction, model validation techniques). Along with some foundational machine learning skills, we have started filling a useful toolkit for ourselves.</p>
<p>We will add one more in-demand tool to that kit before wrapping up.</p>
<h1 id="Step-7-Deep-Learning-in-Python"><a href="#Step-7-Deep-Learning-in-Python" class="headerlink" title="Step 7: Deep Learning in Python"></a>Step 7: Deep Learning in Python</h1><p>Deep learning is everywhere! Deep learning builds on neural network research going back several decades, but recent advances dating to the past several years have dramatically increased the perceived power of, and general interest in, deep neural networks. If you are unfamiliar with deep learning, <a href="http://www.kdnuggets.com/?s=deep+learning" target="_blank" rel="external">KDnuggets has many articles</a> detailing the numerous recent innovations, accomplishments, and accolades of the technology.</p>
<p>This final step does not purport to be a deep learning clinic of any sort; we will take a look at a few simple network implementations in 2 of the leading contemporary Python deep learning libraries. For those interested in digging deeper into deep learning, I recommend starting with the following free online book:</p>
<ul>
<li><a href="http://neuralnetworksanddeeplearning.com/" target="_blank" rel="external">Neural Networks and Deep Learning</a> by <a href="http://michaelnielsen.org/" target="_blank" rel="external">Michael Nielsen</a></li>
</ul>
<h2 id="Theano"><a href="#Theano" class="headerlink" title="Theano"></a><a href="http://deeplearning.net/software/theano/" target="_blank" rel="external">Theano</a></h2><p>Theano is the first Python deep learning library we will look at. From the authors:</p>
<blockquote>
<p>Theano is a Python library that allows you to define, optimize, and evaluate mathematical expressions involving multi-dimensional arrays efficiently.</p>
</blockquote>
<p>The following introductory tutorial on deep learning in Theano is lengthy, but it is quite good, very descriptive, and heavily-commented:</p>
<ul>
<li><a href="http://nbviewer.ipython.org/github/craffel/theano-tutorial/blob/master/Theano%20Tutorial.ipynb" target="_blank" rel="external">Theano Deep Learning Tutorial</a> by <a href="http://www.colinraffel.com/" target="_blank" rel="external">Colin Raffel</a></li>
</ul>
<h2 id="Caffe"><a href="#Caffe" class="headerlink" title="Caffe"></a><a href="http://caffe.berkeleyvision.org/" target="_blank" rel="external">Caffe</a></h2><p>The other library we will test drive is Caffe. Again, from the authors:</p>
<blockquote>
<p>Caffe is a deep learning framework made with expression, speed, and modularity in mind. It is developed by the Berkeley Vision and Learning Center (BVLC) and by community contributors.</p>
</blockquote>
<p>This tutorial is the cherry on the top of this article. While we have undertaken a few interesting examples above, none likely compete with the following, which is implementing <a href="http://googleresearch.blogspot.ch/2015/06/inceptionism-going-deeper-into-neural.html" target="_blank" rel="external">Google’s #DeepDream</a> using Caffe. Enjoy this one! After understanding the tutorial, play around with it to get your processors dreaming on their own.</p>
<ul>
<li><a href="https://github.com/google/deepdream/blob/master/dream.ipynb" target="_blank" rel="external">Dreaming Deep with Caffe</a> via <a href="https://github.com/google" target="_blank" rel="external">Google’s GitHub</a></li>
</ul>
<p>I didn’t promise it would be quick or easy, but if you put the time in and follow the above 7 steps, there is no reason that you won’t be able to claim reasonable proficiency and understanding in a number of machine learning algorithms and their implementation in Python using its popular libraries, including some of those on the cutting edge of current deep learning research.</p>
<p>Bio: <a href="https://twitter.com/mattmayo13" target="_blank" rel="external">Matthew Mayo</a> is a computer science graduate student currently working on his thesis parallelizing machine learning algorithms. He is also a student of data mining, a data enthusiast, and an aspiring machine learning scientist.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;8月份准备学习machine learning，试了一下用Google搜索“machine learning tutorial”，找到了一篇不错的文章，拿来存着。&lt;br&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://yibeichen.me/tags/Python/"/>
    
      <category term="machine learning" scheme="http://yibeichen.me/tags/machine-learning/"/>
    
  </entry>
  
  <entry>
    <title>Python for Everybody 系列课程总结</title>
    <link href="http://yibeichen.me/2016/07/30/Python-for-Everybody/"/>
    <id>http://yibeichen.me/2016/07/30/Python-for-Everybody/</id>
    <published>2016-07-30T08:52:06.000Z</published>
    <updated>2016-07-30T09:46:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>没错，PY4E就是Python for Everybody的缩写。<br>6.14注册了第一门课，7.30学完了第四门课，还剩最后一个毕业项目，但是因为没有花钱买这个系列课程，所以没有资格参与这个项目。<br>总之呢，这一段Python之路可以暂告一个段落啦，接下来会探索新的Python学习之路。<br><a id="more"></a><br>这个系列是coursera上的<a href="https://www.coursera.org/specializations/python" target="_blank" rel="external">专项课程</a>，一共有五门课：</p>
<ul>
<li><a href="https://www.coursera.org/learn/python" target="_blank" rel="external">Programming for Everybody (Getting Started with Python)</a></li>
<li><a href="https://www.coursera.org/learn/python-data" target="_blank" rel="external">Python Data Structures</a></li>
<li><a href="https://www.coursera.org/learn/python-network-data" target="_blank" rel="external">Using Python to Access Web Data</a></li>
<li><a href="https://www.coursera.org/learn/python-databases" target="_blank" rel="external">Using Databases with Python</a></li>
<li>Capstone Project(毕业项目：使用 Python 获取并处理数据，并用可视化方式展现数据)</li>
</ul>
<p>配套教材有中文版本：<br><a href="http://oapfne1kf.bkt.clouddn.com/Python%20for%20Informatics.epub" target="_blank" rel="external">http://oapfne1kf.bkt.clouddn.com/Python%20for%20Informatics.epub</a><br>教材一共15章，专项课程也是围绕这15章展开的。</p>
<p>虽然是6.14注册的第一门课，但最开始是一周学一次，7.12才学完了第一门。自第二门课开始，差不多每天学习一周的量，于是就以每周一门课的速度，在7月学完了后三门。</p>
<p>从学习速度上也可以看出来，课程不难，当然了，也可以说是作业不太难，前一部分有那么几章是磕磕绊绊折腾了大半天或者一整天才做完，而且听课不是很认真，前两门课都没有做过笔记，一直到第10章才醒悟该写点什么。</p>
<p>整体上来看，从这一系列课还是学到了不少，其中最重要(至少对现阶段的我最重要)的是：</p>
<ul>
<li>借鉴别人的代码没问题，但要弄清楚为什么要这么写</li>
<li>在没有能力写一整串原创代码的时候，拿范例来修修补补也很有帮助</li>
<li>动手写代码要比看书看视频更助于理解</li>
<li>Keep exercising!</li>
</ul>
<p><a href="https://online.dr-chuck.com/" target="_blank" rel="external">Dr. Chunk</a>（整个专项课程都是由他授课）特别幽默，有一次扮成Severus Snape，弄了个分院帽和魔杖来上课。每周的Bonus Hours也特别有意思。总之是个很棒的课程！</p>
<p>另外，也是为了记录课程笔记才萌发了搭这个博客的想法，也算是有点进步了，终于有那么一次能把想法付诸实践。</p>
<p>Keep moving，Python之路还很长。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;没错，PY4E就是Python for Everybody的缩写。&lt;br&gt;6.14注册了第一门课，7.30学完了第四门课，还剩最后一个毕业项目，但是因为没有花钱买这个系列课程，所以没有资格参与这个项目。&lt;br&gt;总之呢，这一段Python之路可以暂告一个段落啦，接下来会探索新的Python学习之路。&lt;br&gt;
    
    </summary>
    
    
      <category term="coursera" scheme="http://yibeichen.me/tags/coursera/"/>
    
      <category term="Python" scheme="http://yibeichen.me/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>PY4E Chapter 15（Databases and Visualization）</title>
    <link href="http://yibeichen.me/2016/07/30/PY4E-Chapter-15/"/>
    <id>http://yibeichen.me/2016/07/30/PY4E-Chapter-15/</id>
    <published>2016-07-30T06:57:44.000Z</published>
    <updated>2016-07-30T09:46:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>听完最后这章，只想说，有些事实在是因缘际会，怎么这么巧！<br>假如事件A和事件B有一定的关联，而我先碰到了A，那大概就注定会碰到B吧。</p>
<p>讲了三个例子</p>
<ul>
<li>Geocoding</li>
<li>Page Rank and Web Searching</li>
<li>Gmane - Mailing Lists</li>
</ul>
<p>其实一个都没听懂，毕竟太复杂了。<br>最后的课程作业超级简单，把提供好的代码下载到本地，运行一下，截图上传，peer-grade。<br><a id="more"></a><br><strong>Retrieving GEOData and Visualize the Map</strong><br><img src="http://oapfne1kf.bkt.clouddn.com/2016-07-30_15:55:31.jpg" alt="2016-07-30_15:55:31.jpg"><br><img src="http://oapfne1kf.bkt.clouddn.com/2016-07-30_15:59:36.jpg" alt="2016-07-30_15:59:36.jpg"></p>
<p>曾经用Google Map把不同的地点标在一张图上，然后推算出要找的位置。啊，那可是用手工计算的，开了好多个网页，切换来切换去。当时想，应该有这种可以帮忙标记地点的应用吧，可是没找到，其实也没好好找。<br>总之，最后自制了一张图，还觉得自己酷酷哒。<br>然而，今天看着.py文件运行，一串串代码刷刷刷上传，这才是真的cool啊！</p>
<p>独乐乐不如众乐乐，附上code和玩法。</p>
<ul>
<li>Download the code from <a href="http://www.pythonlearn.com/code/geodata.zip" target="_blank" rel="external">http://www.pythonlearn.com/code/geodata.zip</a><br>-Then unzip the file and edit where.data to add an address nearby where you live - don’t reveal your actual location.</li>
<li>Then run the geoload.py to lookup all of the entries in where.data (including the new one) and produce the geodata.sqlite.</li>
<li>Then run geodump.py to read the database and produce where.js.</li>
<li>Then open where.html to visualize the map.</li>
</ul>
<p>本章的slide链接：<a href="https://www.dr-chuck.net/pythonlearn/slides/EN_us/Py4Inf-15-Data-Viz.pdf" target="_blank" rel="external">https://www.dr-chuck.net/pythonlearn/slides/EN_us/Py4Inf-15-Data-Viz.pdf</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;听完最后这章，只想说，有些事实在是因缘际会，怎么这么巧！&lt;br&gt;假如事件A和事件B有一定的关联，而我先碰到了A，那大概就注定会碰到B吧。&lt;/p&gt;
&lt;p&gt;讲了三个例子&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Geocoding&lt;/li&gt;
&lt;li&gt;Page Rank and Web Searching&lt;/li&gt;
&lt;li&gt;Gmane - Mailing Lists&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其实一个都没听懂，毕竟太复杂了。&lt;br&gt;最后的课程作业超级简单，把提供好的代码下载到本地，运行一下，截图上传，peer-grade。&lt;br&gt;
    
    </summary>
    
    
      <category term="coursera" scheme="http://yibeichen.me/tags/coursera/"/>
    
      <category term="Python" scheme="http://yibeichen.me/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>PY4E Chapter 14.3（Many-to-Many Relationships in SQL）</title>
    <link href="http://yibeichen.me/2016/07/30/PY4E-Chapter-14-3/"/>
    <id>http://yibeichen.me/2016/07/30/PY4E-Chapter-14-3/</id>
    <published>2016-07-30T05:44:17.000Z</published>
    <updated>2016-07-30T09:46:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>前两小节讲的都是one-to-many型数据，这一节讲many-to-many类型的数据。<br>这周的题目也是醉了，只用从例子中改三行代码即可。<br>感觉智商派不上用场……<br><a id="more"></a></p>
<h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><h2 id="Many-to-Many"><a href="#Many-to-Many" class="headerlink" title="Many-to-Many"></a>Many-to-Many</h2><ul>
<li>We need to add a “connection” table with two foreign keys</li>
<li>There is usually no separate primary key</li>
</ul>
<p><strong>Why We Do This?</strong><br>All about speed.</p>
<h2 id="Complexity-Enables-Speed"><a href="#Complexity-Enables-Speed" class="headerlink" title="Complexity Enables Speed"></a>Complexity Enables Speed</h2><ul>
<li>Complexity makes speed possible and allows you to get very fast results as the data size grows</li>
<li>By <em>normalizing the data and linking it with integer keys, the overall amount of data</em> which the relational database must <em>scan</em> is far lower than if the data were simply flattened out</li>
<li>It might seem like a <strong>tradeoff</strong> - spend some time designing your database so it continues to be fast when your application is a success</li>
</ul>
<h2 id="Additional-SQL-Topics"><a href="#Additional-SQL-Topics" class="headerlink" title="Additional SQL Topics"></a>Additional SQL Topics</h2><ul>
<li>Indexes improve access performance for things like string fields</li>
<li>Constraints on data - (cannot be NULL, etc..)</li>
<li>Transactions - allow SQL operations to be grouped and done as a unit</li>
</ul>
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>This application will read roster data in JSON format, parse the file, and then produce an SQLite database that contains a User, Course, and Member table and populate the tables from the data file.</p>
<p>You can base your solution on this code: <a href="http://www.pythonlearn.com/code/roster.py" target="_blank" rel="external">http://www.pythonlearn.com/code/roster.py</a> - this code is incomplete as you need to modify the program to store the role column in the Member table to complete the assignment.</p>
<p>Each student gets their own file for the assignment. Download this file and save it as roster_data.json. Move the downloaded file into the same folder as your roster.py program.</p>
<p>Once you have made the necessary changes to the program and it has been run successfully reading the above JSON data, run the following SQL command:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> <span class="keyword">hex</span>(User.name || Course.title || Member.role ) <span class="keyword">AS</span> X <span class="keyword">FROM</span></div><div class="line">    <span class="keyword">User</span> <span class="keyword">JOIN</span> <span class="keyword">Member</span> <span class="keyword">JOIN</span> Course</div><div class="line">    <span class="keyword">ON</span> User.id = Member.user_id <span class="keyword">AND</span> Member.course_id = Course.id</div><div class="line">    <span class="keyword">ORDER</span> <span class="keyword">BY</span> X</div></pre></td></tr></table></figure></p>
<p>Find the <strong>first</strong> row in the resulting record set and enter the long string that looks like 53656C696E613333.</p>
<h1 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h1><p>Python：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> json</div><div class="line"><span class="keyword">import</span> sqlite3</div><div class="line"></div><div class="line">conn = sqlite3.connect(<span class="string">'rosterdb.sqlite'</span>)</div><div class="line">cur = conn.cursor()</div><div class="line"></div><div class="line"><span class="comment"># Do some setup</span></div><div class="line">cur.executescript(<span class="string">'''</span></div><div class="line">DROP TABLE IF EXISTS User;</div><div class="line">DROP TABLE IF EXISTS Member;</div><div class="line">DROP TABLE IF EXISTS Course;</div><div class="line"></div><div class="line">CREATE TABLE User (</div><div class="line">    id     INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,</div><div class="line">    name   TEXT UNIQUE</div><div class="line">);</div><div class="line"></div><div class="line">CREATE TABLE Course (</div><div class="line">    id     INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,</div><div class="line">    title  TEXT UNIQUE</div><div class="line">);</div><div class="line"></div><div class="line">CREATE TABLE Member (</div><div class="line">    user_id     INTEGER,</div><div class="line">    course_id   INTEGER,</div><div class="line">    role        INTEGER,</div><div class="line">    PRIMARY KEY (user_id, course_id)</div><div class="line">)</div><div class="line">''')</div><div class="line"></div><div class="line">fname = raw_input(<span class="string">'Enter file name: '</span>)</div><div class="line"><span class="keyword">if</span> ( len(fname) &lt; <span class="number">1</span> ) : fname = <span class="string">'roster_data.json'</span></div><div class="line"></div><div class="line"></div><div class="line">str_data = open(fname).read()</div><div class="line">json_data = json.loads(str_data)</div><div class="line"></div><div class="line"><span class="keyword">for</span> entry <span class="keyword">in</span> json_data:</div><div class="line"></div><div class="line">    name = entry[<span class="number">0</span>];</div><div class="line">    title = entry[<span class="number">1</span>];</div><div class="line">    role = entry[<span class="number">2</span>] <span class="comment"># 添加了role</span></div><div class="line"></div><div class="line">    <span class="keyword">print</span> name, title, role <span class="comment"># 添加了role</span></div><div class="line"></div><div class="line">    cur.execute(<span class="string">'''INSERT OR IGNORE INTO User (name)</span></div><div class="line">        VALUES ( ? )''', ( name, ) )</div><div class="line">    cur.execute(<span class="string">'SELECT id FROM User WHERE name = ? '</span>, (name, ))</div><div class="line">    user_id = cur.fetchone()[<span class="number">0</span>]</div><div class="line"></div><div class="line">    cur.execute(<span class="string">'''INSERT OR IGNORE INTO Course (title)</span></div><div class="line">        VALUES ( ? )''', ( title, ) )</div><div class="line">    cur.execute(<span class="string">'SELECT id FROM Course WHERE title = ? '</span>, (title, ))</div><div class="line">    course_id = cur.fetchone()[<span class="number">0</span>]</div><div class="line"></div><div class="line">    cur.execute(<span class="string">'''INSERT OR REPLACE INTO Member</span></div><div class="line">        (user_id, course_id, role) VALUES ( ?, ?, ? )''',</div><div class="line">        ( user_id, course_id, role ) ) <span class="comment"># 添加了role（3处）</span></div><div class="line"></div><div class="line">    conn.commit()</div></pre></td></tr></table></figure></p>
<p>SQL：<br>题目中给定的那些，原封不动。<br>不过，这段语句倒是第一次见：<code>hex(User.name || Course.title || Member.role ) AS X</code> 是把三个字段合并为一个吧，但是得到的结果长得好奇怪，不知道是怎么排列的。</p>
<h1 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h1><p>没有一点点惊喜，还以为到第三节了，会来个好玩的，比如教材上的，抓取Twitter朋友信息什么的，打算改一改去试试微博。<br>啊，不能怪老师，要怪就怪自己心思不正。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前两小节讲的都是one-to-many型数据，这一节讲many-to-many类型的数据。&lt;br&gt;这周的题目也是醉了，只用从例子中改三行代码即可。&lt;br&gt;感觉智商派不上用场……&lt;br&gt;
    
    </summary>
    
    
      <category term="coursera" scheme="http://yibeichen.me/tags/coursera/"/>
    
      <category term="Python" scheme="http://yibeichen.me/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>PY4E Chapter 14.2（Data Models and Relational SQL）</title>
    <link href="http://yibeichen.me/2016/07/29/PY4E-Chapter-14-2/"/>
    <id>http://yibeichen.me/2016/07/29/PY4E-Chapter-14-2/</id>
    <published>2016-07-29T06:18:39.000Z</published>
    <updated>2016-07-30T09:46:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>看教材的时候发现，有几个知识点是书上解释了但是视频没解释就直接写了的，比如cur():</p>
<blockquote>
<p>游标(cursor)类似一个文件句柄，可以对数据库中的数据执行操作。当处理文本文件时，cursor()的调用与open()方法相似。<br>当有个游标，使用execute()方法，对数据库的内容执行命令。</p>
</blockquote>
<p>比如fetchone()：</p>
<blockquote>
<p>如果try部分进展顺利，使用fetchone()[0]获取该记录，然后检索返回的元组的第一个(也是唯一一个)元素，并储存。</p>
</blockquote>
<a id="more"></a>
<h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><h2 id="Designing-a-Data-Model"><a href="#Designing-a-Data-Model" class="headerlink" title="Designing a Data Model"></a>Designing a Data Model</h2><h3 id="Building-a-Data-Model"><a href="#Building-a-Data-Model" class="headerlink" title="Building a Data Model"></a>Building a Data Model</h3><ul>
<li>Drawing a picture of the data objects for our application and then figuring out how to represent the objects and their relationships</li>
<li><strong>Basic Rule</strong>: Don’t put the same string data in twice - use a relationship instead</li>
<li>When there is one thing in the “real world” there should be one copy<br>of that thing in the database</li>
</ul>
<h2 id="Representing-a-Data-Model-in-Tables"><a href="#Representing-a-Data-Model-in-Tables" class="headerlink" title="Representing a Data Model in Tables"></a>Representing a Data Model in Tables</h2><p>将一个大表格拆分成若干个小表格，形成关联。为了减少冗余，当数据量非常非常大的时候，这样做不仅可以缩小存储空间，而且可以加快数据读取的速度。<br>Once we define objects, we need to define the relationships between objects.</p>
<h3 id="Three-Kinds-of-Keys"><a href="#Three-Kinds-of-Keys" class="headerlink" title="Three Kinds of Keys"></a>Three Kinds of Keys</h3><ul>
<li>Primary key - generally an integer autoincrement field(自动生成的，不要用logical key 作为primary key)</li>
<li>Logical key - What the outside world uses for lookup</li>
<li>Foreign key - generally an integer key pointing to a row in another table</li>
</ul>
<h2 id="Reconstructing-data-with-JOIN"><a href="#Reconstructing-data-with-JOIN" class="headerlink" title="Reconstructing data with JOIN"></a>Reconstructing data with JOIN</h2><h3 id="The-JOIN-Operation"><a href="#The-JOIN-Operation" class="headerlink" title="The JOIN Operation"></a>The JOIN Operation</h3><p>The JOIN operation links across several tables as part of a select<br>operation<br>You must tell the JOIN how to use the keys that make the connection<br>between the tables using an <strong>ON</strong> clause</p>
<h3 id="Many-to-Many"><a href="#Many-to-Many" class="headerlink" title="Many to Many"></a>Many to Many</h3><ul>
<li>Sometimes we need to model a relationship that is many-tomany</li>
<li>We need to add a “connection” table with two foreign keys</li>
<li>There is usually no separate primary key</li>
</ul>
<h3 id="Additional-SQL-Topics"><a href="#Additional-SQL-Topics" class="headerlink" title="Additional SQL Topics"></a>Additional SQL Topics</h3><ul>
<li>Indexes improve access performance for things like string fields</li>
<li>Constraints on data - (cannot be NULL, etc..)</li>
<li>Transactions - allow SQL operations to be grouped and done as a unit</li>
</ul>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><ul>
<li>Relational databases allow us to scale to very large amounts of data</li>
<li>The key is to have one copy of any data element and use relations and joins to link the data to multiple places</li>
<li>This greatly reduces the amount of data which much be scanned when doing complex operations across large amounts of data</li>
<li>Database and SQL design is a bit of an art form</li>
</ul>
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>This application will read an iTunes export file in XML and produce a properly normalized database with this structure:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Artist (</div><div class="line">    <span class="keyword">id</span>  <span class="built_in">INTEGER</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> PRIMARY <span class="keyword">KEY</span> AUTOINCREMENT <span class="keyword">UNIQUE</span>,</div><div class="line">    <span class="keyword">name</span>    <span class="built_in">TEXT</span> <span class="keyword">UNIQUE</span></div><div class="line">);</div><div class="line"></div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Genre (</div><div class="line">    <span class="keyword">id</span>  <span class="built_in">INTEGER</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> PRIMARY <span class="keyword">KEY</span> AUTOINCREMENT <span class="keyword">UNIQUE</span>,</div><div class="line">    <span class="keyword">name</span>    <span class="built_in">TEXT</span> <span class="keyword">UNIQUE</span></div><div class="line">);</div><div class="line"></div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Album (</div><div class="line">    <span class="keyword">id</span>  <span class="built_in">INTEGER</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> PRIMARY <span class="keyword">KEY</span> AUTOINCREMENT <span class="keyword">UNIQUE</span>,</div><div class="line">    artist_id  <span class="built_in">INTEGER</span>,</div><div class="line">    title   <span class="built_in">TEXT</span> <span class="keyword">UNIQUE</span></div><div class="line">);</div><div class="line"></div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Track (</div><div class="line">    <span class="keyword">id</span>  <span class="built_in">INTEGER</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> PRIMARY <span class="keyword">KEY</span></div><div class="line">        AUTOINCREMENT <span class="keyword">UNIQUE</span>,</div><div class="line">    title <span class="built_in">TEXT</span>  <span class="keyword">UNIQUE</span>,</div><div class="line">    album_id  <span class="built_in">INTEGER</span>,</div><div class="line">    genre_id  <span class="built_in">INTEGER</span>,</div><div class="line">    <span class="keyword">len</span> <span class="built_in">INTEGER</span>, rating <span class="built_in">INTEGER</span>, <span class="keyword">count</span> <span class="built_in">INTEGER</span></div><div class="line">);</div></pre></td></tr></table></figure></p>
<p>If you run the program multiple times in testing or with different files, make sure to empty out the data before each run.</p>
<p>You can use this code as a starting point for your application: <a href="http://www.pythonlearn.com/code/tracks.zip" target="_blank" rel="external">http://www.pythonlearn.com/code/tracks.zip</a>. The ZIP file contains the Library.xml file to be used for this assignment. You can export your own tracks from iTunes and create a database, but for the database that you turn in for this assignment, only use the Library.xml data that is provided.</p>
<p>To grade this assignment, the program will run a query like this on your uploaded database and look for the data it expects to see:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SELECT Track<span class="selector-class">.title</span>, Artist<span class="selector-class">.name</span>, Album<span class="selector-class">.title</span>, Genre<span class="selector-class">.name</span></div><div class="line">    FROM Track JOIN Genre JOIN Album JOIN Artist</div><div class="line">    ON Track<span class="selector-class">.genre_id</span> = Genre<span class="selector-class">.ID</span> and Track<span class="selector-class">.album_id</span> = Album<span class="selector-class">.id</span></div><div class="line">        AND Album<span class="selector-class">.artist_id</span> = Artist<span class="selector-class">.id</span></div><div class="line">    ORDER BY Artist<span class="selector-class">.name</span> LIMIT <span class="number">3</span></div></pre></td></tr></table></figure></p>
<p>The expected result of this query on your database is:<br><img src="http://oapfne1kf.bkt.clouddn.com/2016-07-29_22:43:42.jpg" alt="2016-07-29_22:43:42.jpg"></p>
<h1 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h1><h2 id="Python："><a href="#Python：" class="headerlink" title="Python："></a>Python：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> xml.etree.ElementTree <span class="keyword">as</span> ET</div><div class="line"><span class="keyword">import</span> sqlite3</div><div class="line"></div><div class="line">conn = sqlite3.connect(<span class="string">'trackdb2.sqlite'</span>)</div><div class="line">cur = conn.cursor()</div><div class="line"></div><div class="line"><span class="comment"># Make some fresh tables using executescript()</span></div><div class="line">cur.executescript(<span class="string">'''</span></div><div class="line">DROP TABLE IF EXISTS Artist;</div><div class="line">DROP TABLE IF EXISTS Genre;</div><div class="line">DROP TABLE IF EXISTS Album;</div><div class="line">DROP TABLE IF EXISTS Track;</div><div class="line"></div><div class="line">CREATE TABLE Artist (</div><div class="line">    id  INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,</div><div class="line">    name    TEXT UNIQUE</div><div class="line">);</div><div class="line">CREATE TABLE Genre (</div><div class="line">    id  INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,</div><div class="line">    name    TEXT UNIQUE</div><div class="line">);</div><div class="line">CREATE TABLE Album (</div><div class="line">    id  INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,</div><div class="line">    artist_id  INTEGER,</div><div class="line">    title   TEXT UNIQUE</div><div class="line">);</div><div class="line"></div><div class="line">CREATE TABLE Track (</div><div class="line">    id  INTEGER NOT NULL PRIMARY KEY</div><div class="line">        AUTOINCREMENT UNIQUE,</div><div class="line">    title TEXT  UNIQUE,</div><div class="line">    artist_id INTEGER,</div><div class="line">    genre_id  INTEGER,</div><div class="line">    album_id  INTEGER</div><div class="line">);</div><div class="line">''')</div><div class="line"></div><div class="line">fname = raw_input(<span class="string">'Enter file name: '</span>)</div><div class="line"><span class="keyword">if</span> ( len(fname) &lt; <span class="number">1</span> ) : fname = <span class="string">'Library.xml'</span></div><div class="line"></div><div class="line"><span class="comment"># &lt;key&gt;Track ID&lt;/key&gt;&lt;integer&gt;369&lt;/integer&gt;</span></div><div class="line"><span class="comment"># &lt;key&gt;Name&lt;/key&gt;&lt;string&gt;Another One Bites The Dust&lt;/string&gt;</span></div><div class="line"><span class="comment"># &lt;key&gt;Artist&lt;/key&gt;&lt;string&gt;Queen&lt;/string&gt;</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">lookup</span><span class="params">(d, key)</span>:</span></div><div class="line">    found = <span class="keyword">False</span></div><div class="line">    <span class="keyword">for</span> child <span class="keyword">in</span> d:</div><div class="line">        <span class="keyword">if</span> found : <span class="keyword">return</span> child.text</div><div class="line">        <span class="keyword">if</span> child.tag == <span class="string">'key'</span> <span class="keyword">and</span> child.text == key :</div><div class="line">            found = <span class="keyword">True</span></div><div class="line">    <span class="keyword">return</span> <span class="keyword">None</span></div><div class="line"></div><div class="line">stuff = ET.parse(fname)</div><div class="line">all = stuff.findall(<span class="string">'dict/dict/dict'</span>)</div><div class="line"><span class="keyword">print</span> <span class="string">'Dict count:'</span>, len(all)</div><div class="line"><span class="keyword">for</span> entry <span class="keyword">in</span> all:</div><div class="line">    <span class="keyword">if</span> ( lookup(entry, <span class="string">'Track ID'</span>) <span class="keyword">is</span> <span class="keyword">None</span> ) : <span class="keyword">continue</span></div><div class="line"></div><div class="line">    name = lookup(entry, <span class="string">'Name'</span>)</div><div class="line">    artist = lookup(entry, <span class="string">'Artist'</span>)</div><div class="line">    genre = lookup(entry, <span class="string">'Genre'</span>)</div><div class="line">    album = lookup(entry, <span class="string">'Album'</span>)</div><div class="line"></div><div class="line">    <span class="keyword">if</span> name <span class="keyword">is</span> <span class="keyword">None</span> <span class="keyword">or</span> artist <span class="keyword">is</span> <span class="keyword">None</span> <span class="keyword">or</span> genre <span class="keyword">is</span> <span class="keyword">None</span> <span class="keyword">or</span> album <span class="keyword">is</span> <span class="keyword">None</span> :</div><div class="line">        <span class="keyword">continue</span></div><div class="line"></div><div class="line">    <span class="keyword">print</span> name, artist, genre, album</div><div class="line"></div><div class="line">    cur.execute(<span class="string">'''INSERT OR IGNORE INTO Artist (name)</span></div><div class="line">        VALUES ( ? )''', ( artist, ) )</div><div class="line">    cur.execute(<span class="string">'SELECT id FROM Artist WHERE name = ? '</span>, (artist, ))</div><div class="line">    artist_id = cur.fetchone()[<span class="number">0</span>]</div><div class="line"></div><div class="line">    cur.execute(<span class="string">'''INSERT OR IGNORE INTO Genre (name)</span></div><div class="line">        VALUES ( ? )''', ( genre, ) )</div><div class="line">    cur.execute(<span class="string">'SELECT id FROM Genre WHERE name = ? '</span>, (genre, ))</div><div class="line">    genre_id = cur.fetchone()[<span class="number">0</span>]</div><div class="line"></div><div class="line">    cur.execute(<span class="string">'''INSERT OR IGNORE INTO Album (title, artist_id)</span></div><div class="line">        VALUES ( ?, ? )''', ( album, artist_id ) )</div><div class="line">    cur.execute(<span class="string">'SELECT id FROM Album WHERE title = ? '</span>, (album, ))</div><div class="line">    album_id = cur.fetchone()[<span class="number">0</span>]</div><div class="line"></div><div class="line">    cur.execute(<span class="string">'''INSERT OR REPLACE INTO Track</span></div><div class="line">        (title, artist_id, genre_id, album_id)</div><div class="line">        VALUES ( ?, ?, ?, ? )''',</div><div class="line">        ( name, artist_id, genre_id, album_id ) )</div><div class="line"></div><div class="line">    conn.commit()</div></pre></td></tr></table></figure>
<h2 id="SQL"><a href="#SQL" class="headerlink" title="SQL:"></a>SQL:</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SELECT Track<span class="selector-class">.title</span>, Artist<span class="selector-class">.name</span>, Album<span class="selector-class">.title</span>, Genre<span class="selector-class">.name</span></div><div class="line">    FROM Track JOIN Genre JOIN Album JOIN Artist</div><div class="line">    ON Track<span class="selector-class">.genre_id</span> = Genre<span class="selector-class">.ID</span> and Track<span class="selector-class">.album_id</span> = Album<span class="selector-class">.id</span></div><div class="line">        AND Album<span class="selector-class">.artist_id</span> = Artist<span class="selector-class">.id</span></div><div class="line">    ORDER BY Artist<span class="selector-class">.name</span>, Track<span class="selector-class">.title</span>  LIMIT <span class="number">3</span></div></pre></td></tr></table></figure>
<h1 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h1><p>Python的代码是提供了一个模板，就是tracks.py，但是要补充genre的参数，我加的时候忘记修改其他的参数了，报错好几次，于是就去改呀改，到最后在SQL里运行的时候，得出的三条总是不对，于是就翻回去找，发现它只根据artist排序了，而目标答案很显然是要多重字段排序的。这时候领悟到，题目中给的那段SQL代码只是参考的呀，还得修改下，不然这作业也太容易了吧。</p>
<p>总之呢，假如让我自己写，是肯定写不出来这么一长串，看都看得不是很懂。不过，修改代码的过程，倒是也帮助我理解了不少，所以，在原创能力不足的情况下，模仿和修改也是很好的办法。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看教材的时候发现，有几个知识点是书上解释了但是视频没解释就直接写了的，比如cur():&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;游标(cursor)类似一个文件句柄，可以对数据库中的数据执行操作。当处理文本文件时，cursor()的调用与open()方法相似。&lt;br&gt;当有个游标，使用execute()方法，对数据库的内容执行命令。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;比如fetchone()：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果try部分进展顺利，使用fetchone()[0]获取该记录，然后检索返回的元组的第一个(也是唯一一个)元素，并储存。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="coursera" scheme="http://yibeichen.me/tags/coursera/"/>
    
      <category term="Python" scheme="http://yibeichen.me/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>PY4E Chapter 14.1（Basic Structured Query Language）</title>
    <link href="http://yibeichen.me/2016/07/28/PY4E-Chapter-14-1/"/>
    <id>http://yibeichen.me/2016/07/28/PY4E-Chapter-14-1/</id>
    <published>2016-07-28T08:24:05.000Z</published>
    <updated>2016-07-30T09:46:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>前天开始听的，听了五分钟，不懂，感觉像天书，刚好网络不行，就放弃了。昨天想，不听不行啊，还是得继续，结果听完大发感慨，怎么这么简单！quiz简单，第一道作业题也很简单，一路绿灯到第二道作业题，卡住了。折腾半晚上，看不懂，后悔自己太嘚瑟，今天继续折腾，大半个下午，简直要怀疑智商。最后，突然发现，代码没错，是数据拿错了……<br>就当是复习了正则表达式和list.split()。<br>另，终于能懂github的好了，虽然写作业的时候没用，碰到project还是应该用。<br><a id="more"></a></p>
<h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><h2 id="Database-Introduction"><a href="#Database-Introduction" class="headerlink" title="Database Introduction"></a>Database Introduction</h2><h3 id="Relational-Databases-关系数据库"><a href="#Relational-Databases-关系数据库" class="headerlink" title="Relational Databases 关系数据库"></a>Relational Databases 关系数据库</h3><p>Relational databases model data by storing rows and columns in tables. The power of the relational database lies in its ability to efficiently retrieve data from those tables and in particular where there are multiple tables and the relationships between those tables involved in the query.<br>其实并没有看懂……</p>
<h3 id="Terminology"><a href="#Terminology" class="headerlink" title="Terminology"></a>Terminology</h3><ul>
<li>Database - contains many tables</li>
<li>Relation (or table) - contains tuples and attributes</li>
<li>Tuple (or row) - a set of fields that generally represents an “object” like a person or a music track</li>
<li>Attribute (also column or field) - one of possibly many elements of data corresponding to the object represented by the row</li>
</ul>
<p>Python + SQL的组合之强大在于<br>Python cleans up the data while SQL stores and retrieves data.</p>
<p>SQL has 4 basic functions – CRUD</p>
<ul>
<li>Create</li>
<li>Read</li>
<li>Update</li>
<li>Delete</li>
</ul>
<h2 id="Using-Databases"><a href="#Using-Databases" class="headerlink" title="Using Databases"></a>Using Databases</h2><h3 id="Two-Roles-in-Large-Projects"><a href="#Two-Roles-in-Large-Projects" class="headerlink" title="Two Roles in Large Projects"></a>Two Roles in Large Projects</h3><ul>
<li>Application Developer - Builds the logic for the application, the look<br>and feel of the application - monitors the application for problems</li>
<li>Database Administrator - Monitors and adjusts the database as the<br>program runs in production</li>
<li>Often both people participate in the building of the “Data model”</li>
</ul>
<h3 id="Database-Model"><a href="#Database-Model" class="headerlink" title="Database Model"></a>Database Model</h3><p>A <em>database model</em> or <em>database schema</em> is the <em>structure or format of a database</em>, described in a formal language<br>supported by the database management system. In other<br>words, a “database model” is the application of a data<br>model when used in conjunction with a database<br>management system.</p>
<h3 id="Common-Database-Systems"><a href="#Common-Database-Systems" class="headerlink" title="Common Database Systems"></a>Common Database Systems</h3><p>Three major DMS:</p>
<ul>
<li>Oracle - Large, commercial, enterprise-scale, very very tweakable</li>
<li>MySql - Simpler but very fast and scalable - commercial open source</li>
<li>SqlServer - Very nice - from Microsoft (also Access)</li>
</ul>
<h2 id="Single-Table-CRUD"><a href="#Single-Table-CRUD" class="headerlink" title="Single Table CRUD"></a>Single Table CRUD</h2><h3 id="Insert"><a href="#Insert" class="headerlink" title="Insert"></a>Insert</h3><p>INSERT INTO Users (name, email) VALUES (‘Kristin’, ‘kf@umich.edu’)</p>
<h3 id="Delete"><a href="#Delete" class="headerlink" title="Delete"></a>Delete</h3><p>DELETE FROM Users WHERE email=’ted@umich.edu’</p>
<h3 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h3><p>UPDATE Users SET name=’Charles’ WHERE email=’csev@umich.edu’</p>
<h3 id="Retrieving-Records-Select"><a href="#Retrieving-Records-Select" class="headerlink" title="Retrieving Records: Select"></a>Retrieving Records: Select</h3><p>SELECT <em> FROM Users<br>SELECT </em> FROM Users WHERE email=’csev@umich.edu’</p>
<h3 id="Sorting-with-ORDER-BY"><a href="#Sorting-with-ORDER-BY" class="headerlink" title="Sorting with ORDER BY"></a>Sorting with ORDER BY</h3><p>SELECT <em> FROM Users ORDER BY email<br>SELECT </em> FROM Users ORDER BY name</p>
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><h2 id="习题A"><a href="#习题A" class="headerlink" title="习题A"></a>习题A</h2><p>按照给定的指令在本地用sqlitebrowser操作，主要是create、insert这两个指令，好傻瓜的……我就不写了<br>最后有个组合指令有意思，但是不懂什么意思……<br><code>SELECT hex(name || age) AS X FROM Ages ORDER BY X</code></p>
<h2 id="习题B"><a href="#习题B" class="headerlink" title="习题B"></a>习题B</h2><p><strong>Counting Organizations</strong><br>This application will read the mailbox data (mbox.txt) count up the number email messages per organization (i.e. domain name of the email address) using a database with the following schema to maintain the counts.</p>
<h1 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h1><h2 id="习题B-1"><a href="#习题B-1" class="headerlink" title="习题B"></a>习题B</h2><h3 id="正确答案"><a href="#正确答案" class="headerlink" title="正确答案"></a>正确答案</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> sqlite3</div><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">conn = sqlite3.connect(<span class="string">'email07281.sqlite'</span>)</div><div class="line">cur = conn.cursor()</div><div class="line"></div><div class="line">cur.execute(<span class="string">'''</span></div><div class="line">DROP TABLE IF EXISTS Counts''')</div><div class="line"></div><div class="line">cur.execute(<span class="string">'''</span></div><div class="line">CREATE TABLE Counts (org TEXT, count INTEGER)''')</div><div class="line"></div><div class="line">fname = raw_input(<span class="string">'Enter file name: '</span>)</div><div class="line"><span class="keyword">if</span> ( len(fname) &lt; <span class="number">1</span> ) : fname = <span class="string">'mbox.txt'</span></div><div class="line">fh = open(fname)</div><div class="line"><span class="keyword">for</span> line <span class="keyword">in</span> fh:</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> line.startswith(<span class="string">'From: '</span>) : <span class="keyword">continue</span></div><div class="line">    pieces = line.split(<span class="string">'@'</span>) <span class="comment">#sample中是pieces = line.split()</span></div><div class="line">    org = pieces[<span class="number">1</span>]</div><div class="line">    org = org.rstrip()<span class="comment">#remove the blank spaces</span></div><div class="line">    <span class="keyword">print</span> org</div><div class="line"></div><div class="line">    cur.execute(<span class="string">'SELECT count FROM Counts WHERE org = ? '</span>, (org, ))</div><div class="line">    row = cur.fetchone()</div><div class="line">    <span class="keyword">if</span> row <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">        cur.execute(<span class="string">'''INSERT INTO Counts (org, count)</span></div><div class="line">                VALUES ( ?, 1 )''', ( org, ) )</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        cur.execute(<span class="string">'UPDATE Counts SET count=count+1 WHERE org = ?'</span>,(org, ))</div><div class="line">        <span class="comment"># This statement commits outstanding changes to disk each</span></div><div class="line">        <span class="comment"># time through the loop - the program can be made faster</span></div><div class="line">        <span class="comment"># by moving the commit so it runs only after the loop completes</span></div><div class="line">    conn.commit()</div><div class="line"></div><div class="line">sqlstr = <span class="string">'SELECT org, count FROM Counts ORDER BY count DESC LIMIT 10'</span></div><div class="line"></div><div class="line"><span class="keyword">print</span> <span class="string">"Counts:"</span></div><div class="line"><span class="keyword">for</span> row <span class="keyword">in</span> cur.execute(sqlstr) :</div><div class="line">    <span class="keyword">print</span> str(row[<span class="number">0</span>]), row[<span class="number">1</span>]</div><div class="line"></div><div class="line">cur.close()</div></pre></td></tr></table></figure>
<h3 id="错误答案"><a href="#错误答案" class="headerlink" title="错误答案"></a>错误答案</h3><p>其他部分都是相同的，奇怪的是，最初用样本数据运行，结果正常呀。<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> <span class="built_in">line</span> <span class="keyword">in</span> fh:</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">line</span>.startswith(<span class="string">'From: '</span>) : continue</div><div class="line">    <span class="built_in">line</span> = <span class="built_in">line</span>.rstrip()</div><div class="line">    email = re.findall(<span class="string">'[a-zA-Z0-9]\S*@\S*[a-zA-Z]'</span>,<span class="built_in">line</span>)</div><div class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(email)&gt;<span class="number">0</span>:</div><div class="line">        print email</div><div class="line">    <span class="keyword">for</span> mail <span class="keyword">in</span> email:</div><div class="line">        <span class="keyword">a</span> = mail.find(<span class="string">'@'</span>)</div><div class="line">        b = mail.find(<span class="string">' '</span>,<span class="keyword">a</span>)</div><div class="line">        org = mail[<span class="keyword">a</span>+<span class="number">1</span>:b+<span class="number">1</span>]</div><div class="line">        print org</div></pre></td></tr></table></figure></p>
<h1 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h1><h2 id="习题B-2"><a href="#习题B-2" class="headerlink" title="习题B"></a>习题B</h2><p>其实第二题也是根据给定的代码修改的，最终成果是只改了一行，结果，为了这一行，折腾了四五个小时。<br>不过，要说明一下，这行代码不是我写的。参考：<a href="http://blog.csdn.net/suiqiji206/article/details/50498928" target="_blank" rel="external">http://blog.csdn.net/suiqiji206/article/details/50498928</a><br><code>pieces = line.split(&#39;@&#39;)</code>以前我都不知道这种分发……</p>
<p>但是，我最开始写的代码应该也没错，然而多次修改之后已经不记得最初的是什么了，所以说终于能理解为什么程序员们都爱github。<br>第一次得到的结果不对，我以为是理解错了题意，可能是要找出所有的email地址再从中找domain，而不是仅仅是“From”开头那行的。为此我还启用了正则表达式！写了长长的一串，见上面。<br>然而继续错继续错，百思不得其解。<br>偶然一下，发现是题目中提供的数据量太大，之前都是没有加载完就copy了，所以本地的数据是不完整的……于是重新弄了一遍，答案就正确了……</p>
<p>至于错误的答案，就是用正则表达式的这段，测试了一下，<code>print org</code>这里错了，估计是loop嵌套出了问题，但是改来改去都不太对，算了……</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>Atom有点奇怪，每次修改了都得保存一下才能运行，TextWrangler就不用，改过直接运行就ok。（想念TextWrangler，要不要装回来呢……）</p>
<p>本章的slide链接：<a href="https://www.dr-chuck.net/pythonlearn/slides/EN_us/Py4Inf-14-Databases.pdf" target="_blank" rel="external">https://www.dr-chuck.net/pythonlearn/slides/EN_us/Py4Inf-14-Databases.pdf</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前天开始听的，听了五分钟，不懂，感觉像天书，刚好网络不行，就放弃了。昨天想，不听不行啊，还是得继续，结果听完大发感慨，怎么这么简单！quiz简单，第一道作业题也很简单，一路绿灯到第二道作业题，卡住了。折腾半晚上，看不懂，后悔自己太嘚瑟，今天继续折腾，大半个下午，简直要怀疑智商。最后，突然发现，代码没错，是数据拿错了……&lt;br&gt;就当是复习了正则表达式和list.split()。&lt;br&gt;另，终于能懂github的好了，虽然写作业的时候没用，碰到project还是应该用。&lt;br&gt;
    
    </summary>
    
    
      <category term="coursera" scheme="http://yibeichen.me/tags/coursera/"/>
    
      <category term="Python" scheme="http://yibeichen.me/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>无心学习之没有VPN</title>
    <link href="http://yibeichen.me/2016/07/27/No-Desire-to-Study/"/>
    <id>http://yibeichen.me/2016/07/27/No-Desire-to-Study/</id>
    <published>2016-07-26T16:07:07.000Z</published>
    <updated>2016-08-04T06:00:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>0727 13:25:00<br>一天，哦不，12个小时都忍不了，中午刚开电脑就跑去补了15G的套餐，焦灼等待一小时后，终于生效。<br>从此又是手脚齐全的人了。<br>Atom插件顺利安装！</p>
<hr>
<p>今天发现，本月的VPN流量已经用完了，于是，再也无心学习。</p>
<blockquote>
<p>没有VPN的时候怎么过的？<br>有氪星给的chrome插件啊。<br>在那之前呢？<br>某厂自带VPN，随时随地科学上网……</p>
</blockquote>
<a id="more"></a>
<p>好了，正经说话。</p>
<p>六月份的时候在iqlink上买了每月8G的VPN，一年40块。这是第二次买了，查了下记录，2014年10月买过一年的，但没怎么用过，白白浪费了8Gx12。也不能怪我，那时候还在某厂，用不上VPN，请注意，这句并不是夸某厂，而是，太累了以至于出了公司根本不想再上网。</p>
<p>这个月VPN用得实在太快，因为每天一上coursera就开着，啊，其实也不完全是，我还有插件呢，全局的VPN主要是给Mac上其他app用的。最近插件也不好用了，估计是氪星发现我跑了之后还厚脸皮地占用公司资源，给我封了……所以就全靠买的VPN了。</p>
<p>再加上，已经彻底弃用某搜索引擎，全靠Google，所以VPN就一直这么开着。RescueTime 显示我上一周的上网时间是49h56m，想象一下一个月的……这还只是Mac，iPad都不算了，但iPad上也有VPN的授权，看过几次YouTube，哦，也是可以忽略不计。总之，流量消耗得特别快。</p>
<p>我正在考虑要不要升级成更高的流量套餐，然而，iqlink的网站也不好登了。</p>
<p>好吧，来细数一下，没有VPN之后我的生活发生了怎样的变化，为什么我厌学了。</p>
<p>首先，coursera不好登了，也有可能是我家网络问题，但是从前开着VPN的时候就是快很多啊。问题在于，最近学的课程越来越难了，我得看一会停一会，有时候还要翻回去看，但是它越来越慢就会导致我停一下它就接不上了，倒回去它就卡住了。人生啊，就浪费在这漫长地等待网页加载上。</p>
<p>然后，Google不能用了，天哪，真要命，感觉一只手断了。</p>
<p>再然后，还有一大堆app都不好用了，因为很多账号都是用gmail邮箱登录的，当然了它们通常只用在登录的时候翻一次墙就好了，可是有时候它会突然掉线，让我重新授权登录，这就难办了，根本连不上Google账号……</p>
<p>最后，可能是心理作用，总觉得没了VPN之后，所有的app都慢了好多，比如Spotify，总显示offline，也有可能是我们家网络实在太差。</p>
<p>呐，由于我是个坚定的工具论者，纸笔不顺手就不肯写字，我现在不想学习了。于是就开始折腾别的东西，然而，没有搜索引擎……好吧好吧，我还是找到了可以折腾的，下载了Atom，准备研究一下，然而，不幸的是，packages没办法install，现在可是午夜呀，难道有人跟我争带宽么，只能理解为墙太厚……</p>
<p>算了算了，这种时候我应该关上电脑潜心读书才对，这个月全都在折腾编程，一本书也没好好读。但是，还是忍不住想要写东西，关于Atom的周边，我是怎么决定开始用它，我用过的各种编辑器，以及跟它们多多少少有点关联的人和事……可以写好多好多呀。</p>
<p>可能我要变成一个话唠了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;0727 13:25:00&lt;br&gt;一天，哦不，12个小时都忍不了，中午刚开电脑就跑去补了15G的套餐，焦灼等待一小时后，终于生效。&lt;br&gt;从此又是手脚齐全的人了。&lt;br&gt;Atom插件顺利安装！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;今天发现，本月的VPN流量已经用完了，于是，再也无心学习。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;没有VPN的时候怎么过的？&lt;br&gt;有氪星给的chrome插件啊。&lt;br&gt;在那之前呢？&lt;br&gt;某厂自带VPN，随时随地科学上网……&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="VPN" scheme="http://yibeichen.me/tags/VPN/"/>
    
  </entry>
  
  <entry>
    <title>PY4E Chapter 13A（Object Oriented Programming）</title>
    <link href="http://yibeichen.me/2016/07/25/PY4E-Chapter-13-Additional/"/>
    <id>http://yibeichen.me/2016/07/25/PY4E-Chapter-13-Additional/</id>
    <published>2016-07-25T13:54:44.000Z</published>
    <updated>2016-07-30T09:46:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>A means additional<br>这章算是补充知识点吧，不要求特别熟悉，理解了会用就行，事实上，我每章都不是特别懂……<br>本周没有作业，只有一个quiz，做了两遍才通过，都两遍了，竟然也没能满分。<br><a id="more"></a></p>
<h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><h2 id="What-is-an-“Object”"><a href="#What-is-an-“Object”" class="headerlink" title="What is an “Object”?"></a>What is an “Object”?</h2><p>An object is a bit of self-contained code and data.<br>It’s not like a function, which is bit of code, but it is code and data.<br>“对象”可以复制成许多不同的部分，优点在于，每个部分管好自己就行了，不用操心其他部分。（是这个意思吧？感觉理解有偏差）</p>
<h3 id="Terminology"><a href="#Terminology" class="headerlink" title="Terminology"></a>Terminology</h3><ul>
<li>Class - a template - Dog</li>
<li>Method or Message - A defined capability of a class - bark() <strong>causing the dog to bark</strong></li>
<li>Field or attribute - A bit of data in a class - length</li>
<li>Object or Instance - A particular instance of a class - Lassie</li>
</ul>
<p>他老人家的幽默感真是……</p>
<p>classes contain code in addition to data, and the method is the way that we activate the code</p>
<h3 id="Simple-Python-Objects"><a href="#Simple-Python-Objects" class="headerlink" title="Simple Python Objects"></a>Simple Python Objects</h3><p><img src="http://ww3.sinaimg.cn/large/72f96cbajw1f66g66h3llj211y0lcaeo.jpg" alt="20:54:41.jpg"><br>这么一大串，看得不是很懂……</p>
<p>Use <strong>dir()</strong> to find the “capabilities” of our newly created class</p>
<h3 id="Object-Lifecycle"><a href="#Object-Lifecycle" class="headerlink" title="Object Lifecycle"></a>Object Lifecycle</h3><ul>
<li>Objects are created used and discarded</li>
<li>We have special blocks of code (methods) that get called<ul>
<li>at the moment of creation (constructor)</li>
<li>at the moment of destruction (destructor)</li>
</ul>
</li>
<li>Constructors are used a lot</li>
<li>Destructors are seldom used</li>
</ul>
<h4 id="Constructor"><a href="#Constructor" class="headerlink" title="Constructor"></a>Constructor</h4><p>the primary purpose of the constructor is to set up some instance variables to have the proper initial values when the object is created</p>
<p>optional, typically used to set up variables</p>
<p>in <em>object-oriented programming</em>, a constructor in a class is a special block of statements called when an <em>object is created</em></p>
<h4 id="Instances"><a href="#Instances" class="headerlink" title="Instances"></a>Instances</h4><p>each instance has its own copy of the instance variables<br><strong>multiple</strong><br><strong>independent!!!</strong></p>
<h3 id="Inheritance"><a href="#Inheritance" class="headerlink" title="Inheritance"></a>Inheritance</h3><ul>
<li>When we make a new class - we can reuse an existing class and <strong>inherit</strong> all the capabilities of an existing class and then add our own little bit to make our new class</li>
<li>Another form of store and reuse</li>
<li>Write once - reuse many times</li>
<li>The new class (child) has all the capabilities of the old class (parent) - and then some more<br>→ → → <strong>Subclasses</strong><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2></li>
<li>Object Oriented programming is a very structured approach to code reuse.</li>
<li>We can group data and functionality together and create many independent instances of a class</li>
</ul>
<h1 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h1><p>本章的slide链接：<a><a href="http://www.dr-chuck.net/pythonlearn/slides/EN_us/Py4Inf-13a-Objects.pdf" target="_blank" rel="external">http://www.dr-chuck.net/pythonlearn/slides/EN_us/Py4Inf-13a-Objects.pdf</a></a></p>
<p>已经沦落到要抄slide的地步了……</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;A means additional&lt;br&gt;这章算是补充知识点吧，不要求特别熟悉，理解了会用就行，事实上，我每章都不是特别懂……&lt;br&gt;本周没有作业，只有一个quiz，做了两遍才通过，都两遍了，竟然也没能满分。&lt;br&gt;
    
    </summary>
    
    
      <category term="coursera" scheme="http://yibeichen.me/tags/coursera/"/>
    
      <category term="Python" scheme="http://yibeichen.me/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>床前明月光</title>
    <link href="http://yibeichen.me/2016/07/25/Reread-Echo/"/>
    <id>http://yibeichen.me/2016/07/25/Reread-Echo/</id>
    <published>2016-07-25T09:15:20.000Z</published>
    <updated>2016-07-27T08:33:39.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.douban.com/group/topic/26705512/" target="_blank" rel="external">如果有来生</a></p>
<p>不要抱歉 不要告别</p>
<p>这世上不会再出现第二个荷西</p>
<a id="more"></a>
<hr>
<p>有些书，买了很久，也看过很久了，大概不会有机会重读，于是放到网上，等人来取走。<br>放了很久无人问津，我也忘了。<br>突然一天，有留言，谈问书的情况，聊两句就下单了。<br>我倒是愣在那里。<br>从明天起它就是别人的了，也许我是早忘了它，但倘若留在书架上，某一天还能重新发现，可送走之后，记忆里和现实中都没了它的影子。</p>
<p>这次是三毛的演讲集《流星雨》。中学时代，在一家常去的书店买来的，先是在书店瞧见这本，下午骑着车带着钱来买了，高中生，正是迷三毛的时候吧。可是也只知道她有个荷西，去过沙漠，最后跳下天台。看过琼瑶回忆她的文字，大概是：明明见面的时候还一切都好，怎么转身就……悲痛中带着惊愕。<br>明天就要把书寄走了，真是舍不得，又把书翻开了，这次恨不得把它都背下来。</p>
<p>附乐曲一段（原谅我音乐插件还没弄好）<br><a href="https://open.spotify.com/track/3ji70Y1KuOjlU3jrYIS3WR" target="_blank" rel="external">L’amoureuse chinoise</a></p>
<p>从随手翻开的那一页读起，她讲自己给文章取标题的准则：不能让读者看了题目就能猜到文章内容。取名字也有三种境界：第一种是文章写了什么题目就说什么，比如《中国饭店》后来改名成了《沙漠中的饭店》，讲的是沙漠中的一家中国饭店，太直接了，她对题目不满意；第二种是想夸老王家的东西好，不直接说，偏偏要说老李家对面有一家店特别好，比如《五月花》，写的是本该五月繁花似锦，然而却只有无尽的辛劳；第三种是写的是悲剧却不写主人公的悲伤而是旁观者的眼泪，比如《哭泣的骆驼》，女孩被强暴了，然后又被丈夫的弟弟打死。<br>中学语文课上，老师讲《诗经》的时候常常会说到这种方法。三毛说，这些是她从前为广告公司工作的时候学到的。大学里的新闻和广告课上好像也提过，一不小心就记起了茂茂的《现当代文学》。</p>
<p>三毛说，有段时间写得很少，慢慢写，对妈妈说：“对于一个念书不多的人来说，写五本书已经够多了。”结婚后，有十个月都没写作，因为荷西不能睡觉。她只对别人说，我不能写作，因为荷西不能睡觉。可是她不说荷西为什么不能睡。<br>有一回，晚上写完回到房间，看见荷西蒙着被单躺在那，突然掀起被跳起来：“你写完啦？”“你为什么不睡觉？”“不敢睡。”“为什么不敢睡，我就在外面写东西而已呀。”“你知道，我总是要牵着你的手才能睡着。”<br>荷西是潜水工程师，工作特别危险，必须要有充足的睡眠。于是，从那以后，三毛就不写了。<br>三毛说：“写作是让我快乐的事，但如果写作妨碍了生活，我就会放弃写作。”</p>
<p>小时候，孩子们都是上同样的学校，穿同样的校服，走同样的路，所以滋生了无穷无尽的想象力，编出有意思的故事。后来，长大了，我们周围的生活周围的人都是那么丰富多彩，总想着把我和我身边的故事记录下来。<br>三毛说：“很佩服那些会编故事的小说家朋友，等自己写完了自己的故事再去编故事，但是我们的故事太多了，写不完。”</p>
<p>翻回第一篇，《一个男孩子的爱情》。看过很多遍，因为它是第一篇，从前我读书都喜欢从第一页开始。荷西和三毛相识重逢的场景，实是难忘。其实也不过是大千世界一对普通的男女，但细水长流终是入了江河湖海，成为不朽。<br>讲着讲着，讲他们结婚，讲荷西和三毛的爸爸妈妈的相处，讲他们俩曾经讨论过“怎么死”，讲荷西真的走了，讲到最后，无语凝噎。<br>一闪而过迟子建在鲁迅文学馆演讲的场景，开场的时候，她说：“拜托大家，不要问和《世界上所有的夜晚》相关的问题。”她是笑着说的，可我只觉得难过。</p>
<p>虽然并没有什么感情经历，但是偶尔也和朋友讨论过，两个人到底要什么样才能在一起呢？比较赞同：“门当户对”不是说家境相当，而是，成长的环境还是相似一点较好，相处起来，不至于价值观偏差太多。三毛说：“彼此的品格和心灵，才是我们所要讲求的‘门当户对’的东西。”</p>
<p>有些东西是浅浅的，似乎三岁小孩子也常常挂在嘴边，比如“床前明月光”。可是，这浅浅的四句诗里，不过是写月光，也写出了高高低低。“床前明月光”，看见了月光，是观察；“疑是地上霜”已经开始思考探索了；“举头望明月”是求证；“低头望故乡”是顺着月光跳到了更遥远的地方。观乎景，言于心，止于情。</p>
<p>也许写得出“庄生晓梦迷蝴蝶，望帝春心托杜鹃”的有好些个人，但他们写不出“床前明月光”。</p>
<hr>
<p>上次寄走的是一套松本清张，四本，舍不得，从此不敢再碰日本推理。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.douban.com/group/topic/26705512/&quot;&gt;如果有来生&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;不要抱歉 不要告别&lt;/p&gt;
&lt;p&gt;这世上不会再出现第二个荷西&lt;/p&gt;
    
    </summary>
    
    
      <category term="book" scheme="http://yibeichen.me/tags/book/"/>
    
      <category term="三毛" scheme="http://yibeichen.me/tags/%E4%B8%89%E6%AF%9B/"/>
    
  </entry>
  
  <entry>
    <title>献给华科</title>
    <link href="http://yibeichen.me/2016/07/24/To-HUST/"/>
    <id>http://yibeichen.me/2016/07/24/To-HUST/</id>
    <published>2016-07-24T06:35:55.000Z</published>
    <updated>2016-07-27T08:33:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>搭完博客的那天，想到了这个题目。假如我的珞珈山和凌波门看见，不知道会怎么想。</p>
<p>其实，这篇是关于一些不算远的回忆。</p>
<a id="more"></a>
<p>这周过得特别快，好像突然一抬头就周日了。折腾hexo的那几天，没睡好，coding入梦，醒来只觉得特别累，其实也睡不着，恨不得天一亮就爬起来扑向电脑，要不是眼睛疼得睁不开，简直会不眠不休好几天。<br>我妈见了说：“现在我知道了，当初怪你们公司太辛苦，是怪错了，你自己总是要折腾，到哪都折腾，怪不得别人。”</p>
<p>快到月末，才发现这个月几乎一本书都没读完。心里空空的，脑袋也空空的，都不会说话了。走到书架边，1603的读库摆在那，还没看呢。</p>
<p>于是，周日热风阵阵的上午，坐在朝南的窗户前，翻开《读库》，风是南风。</p>
<p>第二篇是艾苓写自己的学生，《毕业生》。新闻系的师生，频繁出现考研、考碗（考公务员）这样的字眼，出现了北京、黑龙江，还有偶然的一个安徽。</p>
<p>我好像从来没有认真写过我的考研。不对，我就没有正经写过什么。</p>
<p>考研前看过很多人的经验帖，关于学习方法，关于内心挣扎。考研后也有小学妹一脸期待地望着我：学姐，你的考研故事是什么呀？是不是热血满满，一大碗鸡汤？<br>摇摇头，没有什么迟到的名校梦，没有要痛下决心改变命运的深刻领悟，没有一步一步痛苦得走不下去了又不得不咬牙继续的坚持。</p>
<p>挣扎当然有，活在这世上，每时每刻都有种种。远一点的不记得了，能记起来的是从初试前一天晚上，到出复试结果那天，四个多月里，经历了各种失眠、噩梦、紧张、崩溃。可能备考的时候，脑袋被那些知识点塞得满满的，腾不出地方来担惊受怕，考完，就是听天由命的时候了，深深地无力，此时此刻，再也不能为我的前途做点什么，除了祈祷。<br>当未来的一切都要拜托昨天的自己，真是恨不得当初努力一点，更努力一点，再怎么努力都嫌不够。<br>初试结果出来前，担心的是，假如进不了复试，要怎么办呢？调剂去别的学校吗？能接受一个连W都不如的学校吗？（被我妈骂，就这么不待见你本科？）如果不调剂，还考吗？是接着再考一年，还是去找份工作，半工半考？还是，考公务员，读个在职？<br>等待复试结果的时候，已经到达脆弱的顶点了，心里想的是都走到这一步了，万一输掉，哪里还有勇气面对，怕是从此无心北上广，任我终老小县城。<br>可能是太敏感了，复试通过后，通知书迟迟未到的那些日子，半夜还会梦见无论怎样奋笔疾书都写不完的考卷；梦见加试，被刷。</p>
<p>最近还在疑惑，七月份的学习效率怎么这么高？前半年加一起都没这个月学的一半多。突然就想明白了，前半年始终在为前途担忧，哪里都是路，哪条路都看不清，忐忐忑忑，根本无心学习。六月底拿到通知书，才真正放下负担，可以开始新的道路了。</p>
<p>前段时间是毕业季，研究生公众号推送了一系列毕业生的文章。其中有个人写：如果十年前来到FD，我不会像今天这么努力。作者是研究生毕业，工作一年后考了FD。真想冲上去握个手，只有从社会重返校园的人，才能明白这一张课桌的来之不易。<br>复试前夜，窗户对面就是新闻院，躺在床上，辗转反侧：假如上天愿意给我这次机会，一定洗心革面重新做人。</p>
<p>说到工作，我妈总是责怪我：“当初赶着工作，毕业照都没好好照，什么回忆都没有。你怎么一点都不喜欢你们学校。”<br>不啊，我爱死了珞珈山东湖水，没有什么山山水水比它更灵动，没有哪个图书馆能和樱顶老图媲美，没有哪条路比樱花大道更动人。在我心里，它就是亲妈，别人的妈再漂亮再温柔，都不及亲妈的万分之一好。只是当时不懂真情可贵，以为照片，不过就是照片而已。</p>
<p>那，为什么是《献给华科》？</p>
<p>小时候总有过这样的想法吧：为什么我爸不是XXX，为什么我不是XXX的孩子？白天这么想，晚上还是要搂着亲妈才能睡得着。直到如今，有时还会闪过“为什么没能生在北京？”这样的念头，但我依然热爱我的小城。</p>
<p>第一次听说华科，是高考后，填志愿前。爸爸的朋友说：去上华科吧，有亲戚在那工作，平日里也能照顾些。<br>不幸的是，我是个孤陋寡闻的文科生，一口回绝：听都没听过，不去。<br>等到了武汉，才知道这一个武断的决定错得有多离谱。<br>在武汉，武大和华科，就如同北京的北大清华、上海的复旦交大，一城难容二虎，总是争来争去。不过，上学的那几年，倒是觉得他们俩挺和气的，相亲相爱。武大文科气息浓重，包袱也重，相比之下，华科简单，纯粹，踏实，进步飞快。<br>不知道是因为对技术充满向往，所以对华科念念不忘，还是因为对华科有心结在先，所以对技术总有念想。</p>
<p>其实，我没去过华科，也没同华科出来的人有过面对面的交流，但总觉得华科像个若有若无的影子，是我重重background的一层。</p>
<p>前同事有很多华科的，大多在深圳，大多是技术和产品岗。有时候暗自想想，假如去了华科，说不定最后还是到了某厂。说不定我就是个前端了。说不定我就不走了。说不定说不定说不定，啊，每一次，以为是偏离了正路，其实，正是我们走的每一步构成了我们自己的路。</p>
<p>搭这个博客的时候，也碰到了很多华科人，记得有个人的资料上写：华中科技大学，网络传播。<br>都是学网传的，差别怎么这么大，毕业两年了，我还是棵技术白菜。</p>
<p>刚上大学的时候，知道哲学系有位出名的教授，邓晓芒，他去华科了。后来听说又回来了？不太清楚。他的妹妹也很出名，是作家，笔名“残雪”。有一天听她的讲座，去图书馆翻了翻书，看不懂。<br>我们系的老师，张明新，很可爱的人，典型工科男，上课的时候总担心他会被我们这些文科生呛住。冬天在教三上课，早晨前两节，又冷又困，下课铃一响就睡倒一片，他以为我们是不喜欢他的课，其实我们能撑到下课，就已经充分证明了他的魅力。哎，虽然我们嘴上不说，但心里都很喜欢他，当面不说，背后都在夸他。他也去华科了。<br>我们都挺舍不得他的，但又觉得，华科似乎更适合他。<br>大四有一回在湖滨打印店碰见他了，打了声招呼，还是当年那么可爱。上个月跟同学聊天，她说准备去上北大的暑期班：有明新哥哥的课诶，社会学研究方法，想念当年上课的日子，他可真好。</p>
<p>所以，献给华科，献给我没机会走的路。</p>
<hr>
<p>最爱始终是珞珈山人民公园，将来五角场传媒技术学院也夺不走这个位置。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;搭完博客的那天，想到了这个题目。假如我的珞珈山和凌波门看见，不知道会怎么想。&lt;/p&gt;
&lt;p&gt;其实，这篇是关于一些不算远的回忆。&lt;/p&gt;
    
    </summary>
    
    
      <category term="recollection" scheme="http://yibeichen.me/tags/recollection/"/>
    
  </entry>
  
  <entry>
    <title>PY4E Chapter 13.2（JSON and the REST Architecture）</title>
    <link href="http://yibeichen.me/2016/07/23/PY4E-Chapter-13-2/"/>
    <id>http://yibeichen.me/2016/07/23/PY4E-Chapter-13-2/</id>
    <published>2016-07-23T10:46:36.000Z</published>
    <updated>2016-08-01T10:14:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>超级尴尬</p>
<p>今天的两道题目跟github不和，这篇文章<code>$ hexo g -d</code>和<code>$ hexo s</code>的时候不停报错，最后是一段一段测试出来，错在题目那两段，其实还可以测试得更细一点，但，没有耐心了</p>
<hr>
<p>尴尬之</p>
<ol>
<li>quiz三次都没通过，还得过8小时去做第四次。</li>
<li>极其容易的作业A卡住了，而且非常光荣地又卡在了求和问题上。</li>
<li>昨天还机智聪明地注意到了一级tag、二级tag的细节，今天就栽到这了。（说到底还是智商问题）</li>
<li>作业B根本不用动脑筋，代码都给了，改一个变量名就行，是怕出个难题会打击学生的自信心么……</li>
</ol>
<p>另，开始记课程笔记的时候，就是已经听不懂的时候。</p>
<p>两道习题，跟JSON、API相关。<br><a id="more"></a></p>
<h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><h2 id="JavaScript-Object-Notation"><a href="#JavaScript-Object-Notation" class="headerlink" title="JavaScript Object Notation"></a>JavaScript Object Notation</h2><p>Everybody loves JSON.</p>
<p>XML  is a great serialization format for documents, especially things that kind of have infinitely nested kinds of things, like a paragraph within this and that<br>And HTML is kind of like XML and it’s a good way to represent documents, and so that’s why this JavaScript Object Notation is not really used to represent HTML at all. </p>
<p><strong>JSON represent data as nested “lists” and “dictionaries”</strong><br>list →→→ array<br>dictionary →→→ object</p>
<p>deserialize from string to internal structure ↓<br><code>info = json.loads(data)</code><br>最棒的地方在于，如果原始data含有键值，那么deserialize后，得到的就是一个dictionary，有对应的key和value，而XML就不行，只有value。如果原始data是list，那么JSON就会返回一个list。<br>所以，它俩的区别就在于，XML注重的是结构，把一切想象一个树状结构（Tree），而JSON则把数据看成是诸多列表（lists），或者一对对的键值（key value pairs）另外，JSON用起来比较容易，XML就有点难但是更具表现性。</p>
<h2 id="Service-Oriented-Approach"><a href="#Service-Oriented-Approach" class="headerlink" title="Service Oriented Approach"></a>Service Oriented Approach</h2><p>一个非常有趣的视频 <a href="https://www.coursera.org/learn/python-network-data/lecture/0CpCx/video-service-oriented-architectures" target="_blank" rel="external">Service Oriented Architectures</a><br>突然想起来这是课程视频，没enroll应该就看不了……<br>为了通过quiz，我把这个视频前前后后看了三遍……</p>
<h2 id="Accessing-APIs-in-Python"><a href="#Accessing-APIs-in-Python" class="headerlink" title="Accessing APIs in Python"></a>Accessing APIs in Python</h2><p>SOAP - Simple Object Access Protocol (software)<br>REST - Representational State Transfer (resource focused)<br>Google  Geocoding APIs<br>→ make the URL and retrieve the URL</p>
<h2 id="APIs-Security-and-Rate-Limiting"><a href="#APIs-Security-and-Rate-Limiting" class="headerlink" title="APIs Security and Rate Limiting"></a>APIs Security and Rate Limiting</h2><p>APIs are not “free”<br>Twitter APIs (authentication)—— OAuth<br>→ make the URL, augment it with the signature stuff on it, then get a request on that URL</p>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>Service Oriented Architectures - allows an application to be broken into parts and distributed across a network</p>
<p>An Application Program Interface (API) is a contract for interaction</p>
<p>Web Services provide infrastructure for applications cooperating (an API) over a network - SOAP and REST are two styles of web services</p>
<p>XML and JSON are serialization formats</p>
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><h2 id="习题A"><a href="#习题A" class="headerlink" title="习题A"></a>习题A</h2><p><img src="http://ww3.sinaimg.cn/large/72f96cbagw1f641ndgayrj20vx0g5tc1.jpg" alt="19:01:52.jpg"></p>
<h2 id="习题B"><a href="#习题B" class="headerlink" title="习题B"></a>习题B</h2><p><img src="http://ww1.sinaimg.cn/large/72f96cbagw1f641p7mhgzj20vx0iv0xp.jpg" alt="19:03:38.jpg"></p>
<h1 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h1><h2 id="习题A-1"><a href="#习题A-1" class="headerlink" title="习题A"></a>习题A</h2><h3 id="我的答案①"><a href="#我的答案①" class="headerlink" title="我的答案①"></a>我的答案①</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> json</div><div class="line"></div><div class="line">input = <span class="string">'''</span></div><div class="line">[</div><div class="line">	&#123;</div><div class="line">	  name: "Matthias"</div><div class="line">	  count: 97</div><div class="line">	&#125;,</div><div class="line">	&#123;</div><div class="line">	  name: "Geomer"</div><div class="line">	  count: 97</div><div class="line">	&#125;</div><div class="line">	...</div><div class="line">  ]</div><div class="line">'''</div><div class="line"></div><div class="line">info = json.loads(input)</div><div class="line"><span class="keyword">print</span> <span class="string">'User count:'</span>, len(info)</div><div class="line">s = []</div><div class="line"><span class="keyword">for</span> item <span class="keyword">in</span> info:</div><div class="line">    count = item[<span class="string">'count'</span>]</div><div class="line">    s.append(int(count))</div><div class="line"><span class="keyword">print</span> sum(s)</div></pre></td></tr></table></figure>
<h3 id="我的答案②"><a href="#我的答案②" class="headerlink" title="我的答案②"></a>我的答案②</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> urllib</div><div class="line"><span class="keyword">import</span> json</div><div class="line"></div><div class="line">url = raw_input(<span class="string">'Enter location- '</span>)</div><div class="line"></div><div class="line">data = urllib.urlopen(url).<span class="keyword">read</span>()</div><div class="line"></div><div class="line">info = json.loads(data)</div><div class="line"></div><div class="line">s = []</div><div class="line"><span class="keyword">for</span> item in info:</div><div class="line">    <span class="keyword">count</span> = item[<span class="string">'count'</span>]</div><div class="line">    s.<span class="keyword">append</span>(<span class="keyword">int</span>(<span class="keyword">count</span>))</div><div class="line"><span class="keyword">print</span> sum(s)</div></pre></td></tr></table></figure>
<h3 id="别人的答案"><a href="#别人的答案" class="headerlink" title="别人的答案"></a>别人的答案</h3><figure class="highlight haskell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> urllib</div><div class="line"><span class="keyword">import</span> json</div><div class="line"></div><div class="line"><span class="title">url</span> = raw_input('<span class="type">Enter</span> location- ')</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">data</span> = urllib.urlopen(<span class="title">url</span>).read()</span></div><div class="line"></div><div class="line"><span class="title">info</span> = json.loads(<span class="class"><span class="keyword">data</span>)</span></div><div class="line"></div><div class="line"><span class="title">comments</span> = info[<span class="string">"comments"</span>]</div><div class="line"></div><div class="line"><span class="title">s</span> = []</div><div class="line"><span class="title">for</span> item <span class="keyword">in</span> comments:</div><div class="line">    count = item['count']</div><div class="line">    s.append(count)</div><div class="line"><span class="title">print</span> <span class="string">"Sum: &#123;0&#125;"</span>.format(sum(s))</div></pre></td></tr></table></figure>
<h2 id="习题B-1"><a href="#习题B-1" class="headerlink" title="习题B"></a>习题B</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">import urllib</div><div class="line">import json</div><div class="line"></div><div class="line">serviceurl = <span class="string">'http://python-data.dr-chuck.net/geojson?'</span></div><div class="line"></div><div class="line"><span class="keyword">while</span> True:</div><div class="line">    address = raw_input(<span class="string">'Enter location: '</span>)</div><div class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(address) &lt; <span class="number">1</span> : <span class="keyword">break</span></div><div class="line"></div><div class="line">    url = serviceurl + urllib.urlencode(&#123;<span class="string">'sensor'</span>:<span class="string">'false'</span>, <span class="string">'address'</span>: address&#125;)</div><div class="line">    <span class="keyword">print</span> <span class="string">'Retrieving'</span>, url</div><div class="line">    uh = urllib.urlopen(url)</div><div class="line">    data = uh.<span class="keyword">read</span>()</div><div class="line">    <span class="keyword">print</span> <span class="string">'Retrieved'</span>,<span class="built_in">len</span>(data),<span class="string">'characters'</span></div><div class="line"></div><div class="line">    <span class="keyword">try</span>: js = json.loads(str(data))</div><div class="line">    excep<span class="variable">t:</span> js = None</div><div class="line">    <span class="keyword">if</span> <span class="string">'status'</span> not in js <span class="built_in">or</span> js[<span class="string">'status'</span>] != <span class="string">'OK'</span>:</div><div class="line">        <span class="keyword">print</span> <span class="string">'==== Failure To Retrieve ===='</span></div><div class="line">        <span class="keyword">print</span> data</div><div class="line">        <span class="keyword">continue</span></div><div class="line"></div><div class="line">    <span class="keyword">print</span> json.dumps(js, <span class="built_in">indent</span>=<span class="number">4</span>)</div><div class="line">    #lat = js[<span class="string">"results"</span>][<span class="number">0</span>][<span class="string">"geometry"</span>][<span class="string">"location"</span>][<span class="string">"lat"</span>]</div><div class="line">    #lng = js[<span class="string">"results"</span>][<span class="number">0</span>][<span class="string">"geometry"</span>][<span class="string">"location"</span>][<span class="string">"lng"</span>]</div><div class="line">    #print <span class="string">'lat'</span>,<span class="keyword">lat</span>,<span class="string">'lng'</span>,lng</div><div class="line">    location = js[<span class="string">'results'</span>][<span class="number">0</span>][<span class="string">'place_id'</span>]</div><div class="line">    <span class="keyword">print</span> location</div></pre></td></tr></table></figure>
<h1 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h1><h2 id="习题A-2"><a href="#习题A-2" class="headerlink" title="习题A"></a>习题A</h2><p>先说我的第一个答案吧，其实我先写的是利用urllib抓取url，但是出错了，就用了笨办法，把数据copy到Python文件里了，算出了答案2838，然而，这个不能提交上去，太长了。所以还是得用抓取url的办法，那第一个答案成功了，没有报错，只是说明我的代码应该都没问题呀，是吧？<br>然而，只把前半部分改成urllib而已，就开始不断报错报错。用print len(info)测试，始终得到的是2，应该50才对啊，第一版那个笨答案算对了。（算了算了，刚刚拿最后一版的正确coding测试还是2，不知道问题出在哪了呀。）</p>
<p>到第二版答案了，其实第二版答案里还包含了无数个版本，而且我写在这里的其实还是会报错，但是错的答案也是需要拿出来警示一下的。<br>一直报错的是<code>count = item[&#39;count&#39;]</code>，说<code>string indices must be integers</code>，低智如我，就卡在这句，不停改不停改，int/str换来换去……一点用都没有！</p>
<p>于是我就去Google了，又找到上次“借鉴”的那位朋友@[richyvk]的作业，一看，重点根本不是那句好吗！而是for循环前面的句子，他多了一句<code>comments = info[&quot;comments”]</code>，接下来循环的是<code>for item in comments:</code>，而我的循环则是<code>for item in info:</code>。<br>那么区别在哪呢？<br>comments是info这个数据库里的一级tag，而count则是comments下的tag，也就是info的二级tag。所以得转换一下才能循环，不然循环的就是comments和它同级的内容。<strong>啊，突然理解了开头那个len(info)为什么是2了，因为算的是几个一级tag</strong><br>豁然开朗！</p>
<p>至于int/str的求和，@[richyvk]提供了一种新的方法，<code>print &quot;Sum: {0}&quot;.format(sum(s))</code>好棒！然而我没看懂……这位朋友应该有其他语言基础吧……</p>
<h2 id="习题B-2"><a href="#习题B-2" class="headerlink" title="习题B"></a>习题B</h2><p>这道题没什么好讲的，代码是提供好的，大部分我都没看懂，我只看懂了需要我改的那句……</p>
<p>来都来了，那就说两句吧<br><code>url = serviceurl + urllib.urlencode({&#39;sensor&#39;:&#39;false&#39;, &#39;address&#39;: address})</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">try</span>: js = json.loads(str(data))</div><div class="line"><span class="keyword">except</span>: js = <span class="keyword">None</span></div><div class="line"><span class="keyword">if</span> <span class="string">'status'</span> <span class="keyword">not</span> <span class="keyword">in</span> js <span class="keyword">or</span> js[<span class="string">'status'</span>] != <span class="string">'OK'</span>:</div><div class="line">	<span class="keyword">print</span> <span class="string">'==== Failure To Retrieve ===='</span></div><div class="line">	<span class="keyword">print</span> data</div><div class="line">	<span class="keyword">continue</span></div></pre></td></tr></table></figure></p>
<p><code>print json.dumps(js, indent=4)</code></p>
<p>这三句都看不懂，摊手，新世界的大门还没有朝我打开。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;超级尴尬&lt;/p&gt;
&lt;p&gt;今天的两道题目跟github不和，这篇文章&lt;code&gt;$ hexo g -d&lt;/code&gt;和&lt;code&gt;$ hexo s&lt;/code&gt;的时候不停报错，最后是一段一段测试出来，错在题目那两段，其实还可以测试得更细一点，但，没有耐心了&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;尴尬之&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;quiz三次都没通过，还得过8小时去做第四次。&lt;/li&gt;
&lt;li&gt;极其容易的作业A卡住了，而且非常光荣地又卡在了求和问题上。&lt;/li&gt;
&lt;li&gt;昨天还机智聪明地注意到了一级tag、二级tag的细节，今天就栽到这了。（说到底还是智商问题）&lt;/li&gt;
&lt;li&gt;作业B根本不用动脑筋，代码都给了，改一个变量名就行，是怕出个难题会打击学生的自信心么……&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;另，开始记课程笔记的时候，就是已经听不懂的时候。&lt;/p&gt;
&lt;p&gt;两道习题，跟JSON、API相关。&lt;br&gt;
    
    </summary>
    
    
      <category term="coursera" scheme="http://yibeichen.me/tags/coursera/"/>
    
      <category term="Python" scheme="http://yibeichen.me/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>PY4E Chapter 13.1（Web Service and XML）</title>
    <link href="http://yibeichen.me/2016/07/22/PY4E-Chapter-13-1/"/>
    <id>http://yibeichen.me/2016/07/22/PY4E-Chapter-13-1/</id>
    <published>2016-07-22T11:03:26.000Z</published>
    <updated>2016-07-30T09:46:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课介绍XML，下一节课介绍JSON。</p>
<p>如何判断一次课程难不难？看我做作业的时候有没有借助外力就知道了。其实我是借助了教材，而且老师一开始就说了呀，本周的作业很容易！然而……</p>
<p>Again and again and again, I was stuck at the stage of converting a string into an integrate and making a sum.<br><a id="more"></a></p>
<p>#知识点<br>quiz中遇到的几个<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">XML</span> <span class="title">Basics</span>：</div><div class="line"><span class="literal">start</span> <span class="keyword">tag</span></div><div class="line"><span class="title">end</span> <span class="keyword">tag</span></div><div class="line"><span class="title">text</span> content</div><div class="line"><span class="keyword">attribute</span></div><div class="line">self closing <span class="keyword">tag</span></div><div class="line"></div><div class="line"><span class="title">XSD</span> Structure</div><div class="line">xs:element</div><div class="line">xs:sequence</div><div class="line">xs:complexType</div><div class="line"></div><div class="line"><span class="keyword">XML</span> <span class="title">Tree</span></div><div class="line"></div><div class="line">parsing →→→ de-serialization</div></pre></td></tr></table></figure></p>
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>In this assignment you will write a Python program somewhat similar to <a href="http://www.pythonlearn.com/code/geoxml.py" target="_blank" rel="external">http://www.pythonlearn.com/code/geoxml.py</a>. The program will prompt for a URL, read the XML data from that URL using urllib and then parse and extract the comment counts from the XML data, compute the sum of the numbers in the file.</p>
<p>We provide two files for this assignment. One is a sample file where we give you the sum for your testing and the other is the actual data you need to process for the assignment.</p>
<ul>
<li><p>Sample data: <a><a href="http://python-data.dr-chuck.net/comments_42.xml" target="_blank" rel="external">http://python-data.dr-chuck.net/comments_42.xml</a></a> (Sum=2553)</p>
</li>
<li><p>Actual data: <a><a href="http://python-data.dr-chuck.net/comments_291517.xml" target="_blank" rel="external">http://python-data.dr-chuck.net/comments_291517.xml</a></a> (Sum ends with 32)</p>
</li>
</ul>
<p>You do not need to save these files to your folder since your program will read the data directly from the URL. Note: Each student will have a distinct data url for the assignment - so only use your own data url for analysis.<br>Data Format and Approach</p>
<p>The data consists of a number of names and comment counts in XML as follows:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">comment</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>Matthias<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">count</span>&gt;</span>97<span class="tag">&lt;/<span class="name">count</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">comment</span>&gt;</span></div></pre></td></tr></table></figure>
<p>You are to look through all the <comment> tags and find the <count> values sum the numbers. The closest sample code that shows how to parse XML is geoxml.py. But since the nesting of the elements in our data is different than the data we are parsing in that sample code you will have to make real changes to the code.<br>To make the code a little simpler, you can use an XPath selector string to look through the entire tree of XML for any tag named ‘count’ with the following line of code:<br><code>counts = tree.findall(&#39;.//count&#39;)</code></count></comment></p>
<p>Take a look at the Python ElementTree documentation and look for the supported XPath syntax for details. You could also work from the top of the XML down to the comments node and then loop through the child nodes of the comments node.</p>
<h1 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h1><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">import urllib</div><div class="line">import xml.etree.ElementTree <span class="keyword">as</span> ET</div><div class="line"></div><div class="line"></div><div class="line">url = raw_input(<span class="string">'Enter - '</span>)</div><div class="line"><span class="keyword">if</span> <span class="built_in">len</span>(url) &lt; <span class="number">1</span>:</div><div class="line">   url = <span class="string">"http://python-data.dr-chuck.net/comments_291517.xml"</span></div><div class="line">data = urllib.urlopen(url).<span class="keyword">read</span>()</div><div class="line"></div><div class="line">tree = ET.fromstring(data)</div><div class="line">lst = tree.findall(<span class="string">'comments/comment'</span>)</div><div class="line">s = []</div><div class="line"><span class="keyword">for</span> item in <span class="keyword">ls</span><span class="variable">t:</span></div><div class="line">    <span class="built_in">count</span> = item.<span class="keyword">find</span>(<span class="string">'count'</span>).text</div><div class="line">    s.<span class="keyword">append</span>(<span class="keyword">int</span>(<span class="built_in">count</span>))</div><div class="line"><span class="keyword">print</span> sum(s)</div></pre></td></tr></table></figure>
<h1 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h1><p>开头已经说了，这次的题目很简单，但是我还是卡在了两个地方</p>
<h2 id="tree-findall"><a href="#tree-findall" class="headerlink" title="tree.findall()"></a>tree.findall()</h2><p>我最开始写的是<code>tree.findall(&#39;commentinfo/comments/comment&#39;)</code>相当于把根目录<code>commentinfo</code>（不知道标准称呼是什么，反正这么称呼我容易懂）放进来了，结果是<code>0</code>，其实可以理解为“空”。</p>
<p>也就是说，一级tag是不用写出来的，直接从二级tag<code>comments</code>写到要计算的那级tag的上一级就可以了。</p>
<h2 id="列表求和"><a href="#列表求和" class="headerlink" title="列表求和"></a>列表求和</h2><p>看见求和我就紧张，估计已经造成了心理阴影。</p>
<p>最开始是直接用<code>sum(count)</code>求和，这是程序错误呀，循环中的一节怎么能用来求和呢。</p>
<p>改成列表求和：<br><code>s.append(count)
print sum(s)</code><br>报错：str是不能求和的。</p>
<p>找到上回“借鉴”来的代码<code>s.append(int(count.string))</code>，又报错：count已经是一个str类型了，不能再转成一个string。</p>
<p>好好好，那就去掉它，变成了<code>s.append(int(count))</code>，OK啦！</p>
<p>PS：第12章以后的内容基本都是讲用Python联网，所以如果网络不好的话，在运行py的时候也会报错————显示urllib相关的一长串错误，不要紧张，不是程序错误，网络重新连接下就好了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本节课介绍XML，下一节课介绍JSON。&lt;/p&gt;
&lt;p&gt;如何判断一次课程难不难？看我做作业的时候有没有借助外力就知道了。其实我是借助了教材，而且老师一开始就说了呀，本周的作业很容易！然而……&lt;/p&gt;
&lt;p&gt;Again and again and again, I was stuck at the stage of converting a string into an integrate and making a sum.&lt;br&gt;
    
    </summary>
    
    
      <category term="coursera" scheme="http://yibeichen.me/tags/coursera/"/>
    
      <category term="Python" scheme="http://yibeichen.me/tags/Python/"/>
    
  </entry>
  
</feed>
